package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_base_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_base_license"],
}

cc_library_static {
    name: "libservices.core",
    defaults: ["libservices.core-libs"],

    cpp_std: "c++2a",
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-parameter",
        "-Wthread-safety",

        "-DEGL_EGLEXT_PROTOTYPES",
        "-DGL_GLEXT_PROTOTYPES",
    ],

    srcs: [
        "BroadcastRadio/JavaRef.cpp",
        "BroadcastRadio/NativeCallbackThread.cpp",
        "BroadcastRadio/BroadcastRadioService.cpp",
        "BroadcastRadio/Tuner.cpp",
        "BroadcastRadio/TunerCallback.cpp",
        "BroadcastRadio/convert.cpp",
        "BroadcastRadio/regions.cpp",
        "stats/SurfaceFlingerPuller.cpp",
        "tvinput/BufferProducerThread.cpp",
        "tvinput/JTvInputHal.cpp",
        "tvinput/TvInputHal_hidl.cpp",
        "com_android_server_accessibility_BrailleDisplayConnection.cpp",
        "com_android_server_adb_AdbDebuggingManager.cpp",
        "com_android_server_am_BatteryStatsService.cpp",
        "com_android_server_biometrics_SurfaceToNativeHandleConverter.cpp",
        "com_android_server_ConsumerIrService.cpp",
        "com_android_server_companion_virtual_InputController.cpp",
        "com_android_server_companion_virtual_VirtualDeviceImpl.cpp",
        "com_android_server_devicepolicy_CryptoTestHelper.cpp",
        "com_android_server_display_DisplayControl.cpp",
        "com_android_server_display_SmallAreaDetectionController.cpp",
        "com_android_server_connectivity_Vpn.cpp",
        "com_android_server_gpu_GpuService.cpp",
        "com_android_server_HardwarePropertiesManagerService.cpp",
        "com_android_server_input_InputManagerService.cpp",
        "com_android_server_lights_LightsService.cpp",
        "com_android_server_location_GnssLocationProvider.cpp",
        "com_android_server_locksettings_SyntheticPasswordManager.cpp",
        "com_android_server_power_PowerManagerService.cpp",
        "com_android_server_powerstats_PowerStatsService.cpp",
        "com_android_server_power_stats_CpuPowerStatsCollector.cpp",
        "com_android_server_hint_HintManagerService.cpp",
        "com_android_server_SerialService.cpp",
        "com_android_server_soundtrigger_middleware_AudioSessionProviderImpl.cpp",
        "com_android_server_soundtrigger_middleware_ExternalCaptureStateTracker.cpp",
        "com_android_server_stats_pull_StatsPullAtomService.cpp",
        "com_android_server_storage_AppFuseBridge.cpp",
        "com_android_server_SystemClockTime.cpp",
        "com_android_server_SystemServer.cpp",
        "com_android_server_tv_TvUinputBridge.cpp",
        "com_android_server_tv_TvInputHal.cpp",
        "com_android_server_vr_VrManagerService.cpp",
        "com_android_server_UsbAlsaJackDetector.cpp",
        "com_android_server_UsbAlsaMidiDevice.cpp",
        "com_android_server_UsbDeviceManager.cpp",
        "com_android_server_UsbDescriptorParser.cpp",
        "com_android_server_UsbHostManager.cpp",
        "com_android_server_vibrator_VibratorController.cpp",
        "com_android_server_vibrator_VibratorManagerService.cpp",
        "com_android_server_pdb_PersistentDataBlockService.cpp",
        "com_android_server_am_LowMemDetector.cpp",
        "com_android_server_pm_PackageManagerShellCommandDataLoader.cpp",
        "com_android_server_sensor_SensorService.cpp",
        "com_android_server_wm_TaskFpsCallbackController.cpp",
        "onload.cpp",
        ":lib_cachedAppOptimizer_native",
        ":lib_freezer_native",
        ":lib_gameManagerService_native",
        ":lib_oomConnection_native",
        ":lib_anrTimer_native",
    ],

    include_dirs: [
        "frameworks/base/libs",
        "frameworks/native/services",
        "frameworks/native/libs/math/include",
        "frameworks/native/libs/ui/include",
        "system/gatekeeper/include",
        "system/memory/libmeminfo/include",
    ],

    header_libs: [
        "bionic_libc_platform_headers",
    ],
}

cc_defaults {
    name: "libservices.core-libs",
    defaults: [
        "android.hardware.graphics.common-ndk_shared",
        "android.hardware.power-ndk_shared",
    ],
    shared_libs: [
        "libadb_pairing_server",
        "libadb_pairing_connection",
        "libandroid",
        "libandroid_runtime",
        "libandroidfw",
        "libaudioclient",
        "libbase",
        "libappfuse",
        "libbinder_ndk",
        "libbinder",
        "libchrome",
        "libcutils",
        "libcrypto",
        "libfmq",
        "liblog",
        "libgraphicsenv",
        "libgralloctypes",
        "libhardware",
        "libhardware_legacy",
        "libhidlbase",
        "libmeminfo",
        "libmemevents",
        "libmemtrackproxy",
        "libmtp",
        "libnativehelper",
        "libnativewindow",
        "libpowermanager",
        "libprocessgroup",
        "libutils",
        "libui",
        "libvibratorservice",
        "libPlatformProperties",
        "libinput",
        "libinputflinger",
        "libinputflinger_base",
        "libinputservice",
        "libservices.core-gnss",
        "libstatshidl",
        "libstatspull",
        "libstatssocket",
        "libstatslog",
        "libschedulerservicehidl",
        "libsensorservice",
        "libsensorservicehidl",
        "libsensorserviceaidl",
        "libgui",
        "libtimeinstate",
        "libtimestats_atoms_proto",
        "libusbhost",
        "libtinyalsa",
        "libEGL",
        "libGLESv2",
        "libnetutils",
        "libhidlbase",
        "libutils",
        "libhwui",
        "libpsi",
        "libdataloader",
        "libincfs",
        "android.hardware.audio.common@2.0",
        "android.media.audio.common.types-V1-ndk",
        "android.hardware.broadcastradio@1.0",
        "android.hardware.broadcastradio@1.1",
        "android.hardware.contexthub@1.0",
        "android.hardware.common.fmq-V1-ndk",
        "android.hardware.gnss-V3-cpp",
        "android.hardware.gnss@1.0",
        "android.hardware.gnss@1.1",
        "android.hardware.gnss@2.0",
        "android.hardware.gnss@2.1",
        "android.hardware.gnss.measurement_corrections@1.0",
        "android.hardware.graphics.bufferqueue@1.0",
        "android.hardware.graphics.bufferqueue@2.0",
        "android.hardware.graphics.common@1.2",
        "android.hardware.input.processor-V1-ndk",
        "android.hardware.ir@1.0",
        "android.hardware.light@2.0",
        "android.hardware.memtrack-V1-ndk",
        "android.hardware.power@1.0",
        "android.hardware.power@1.1",
        "android.hardware.power@1.2",
        "android.hardware.power@1.3",
        "android.hardware.power.stats@1.0",
        "android.hardware.power.stats-V1-ndk",
        "android.hardware.thermal@1.0",
        "android.hardware.thermal-V3-ndk",
        "android.hardware.tv.input@1.0",
        "android.hardware.tv.input-V2-ndk",
        "android.hardware.vibrator-V3-ndk",
        "android.hardware.vibrator@1.0",
        "android.hardware.vibrator@1.1",
        "android.hardware.vibrator@1.2",
        "android.hardware.vibrator@1.3",
        "android.hardware.vr@1.0",
        "android.hidl.token@1.0-utils",
        "android.frameworks.schedulerservice@1.0",
        "android.frameworks.sensorservice@1.0",
        "android.frameworks.sensorservice-V1-ndk",
        "android.frameworks.stats@1.0",
        "android.frameworks.stats-V2-ndk",
        "android.system.suspend.control-V1-cpp",
        "android.system.suspend.control.internal-cpp",
        "android.system.suspend-V1-ndk",
        "server_configurable_flags",
        "service.incremental",
    ],

    static_libs: [
        "android.hardware.broadcastradio@common-utils-1x-lib",
        "libaidlcommonsupport",
        "libvirtualdevicebuildflags",
    ],

    product_variables: {
        arc: {
            shared_libs: [
                "libarcbridge",
                "libarcbridgeservice",
                "libbase",
                "libcap",
                "libchrome",
                "libmojo",
            ],
        },
    },
}

filegroup {
    name: "lib_cachedAppOptimizer_native",
    srcs: [
        "com_android_server_am_CachedAppOptimizer.cpp",
    ],
}

filegroup {
    name: "lib_freezer_native",
    srcs: [
        "com_android_server_am_Freezer.cpp",
    ],
}

filegroup {
    name: "lib_gameManagerService_native",
    srcs: [
        "com_android_server_app_GameManagerService.cpp",
    ],
}

filegroup {
    name: "lib_oomConnection_native",
    srcs: ["com_android_server_am_OomConnection.cpp"],
}

filegroup {
    name: "lib_anrTimer_native",
    srcs: [
        "com_android_server_utils_AnrTimer.cpp",
    ],
}
