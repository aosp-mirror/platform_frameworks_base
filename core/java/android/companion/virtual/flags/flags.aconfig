#
# Copyright (C) 2023 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package: "android.companion.virtualdevice.flags"
container: "system"

flag {
     namespace: "virtual_devices"
     name: "virtual_camera_service_discovery"
     description: "Enable discovery of the Virtual Camera HAL without a VINTF entry"
     bug: "305170199"
}

flag {
     namespace: "virtual_devices"
     name: "device_aware_record_audio_permission"
     description: "Enable device-aware RECORD_AUDIO permission"
     bug: "291737188"
     is_fixed_read_only: true
}

flag {
     namespace: "virtual_devices"
     name: "media_projection_keyguard_restrictions"
     description: "Auto-stop MP when the device locks"
     bug: "348335290"
}

flag {
    namespace: "virtual_devices"
    name: "virtual_display_insets"
    description: "APIs for specifying virtual display insets (via cutout)"
    bug: "350007135"
    is_exported: true
}

flag {
     namespace: "virtual_devices"
     name: "activity_control_api"
     description: "Enable APIs for fine grained activity policy, fallback and callbacks"
     bug: "333443509"
     is_exported: true
}

flag {
     namespace: "virtual_devices"
     name: "camera_device_awareness"
     description: "Enable device awareness in camera service"
     bug: "305170199"
}

flag {
    name: "virtual_rotary"
    is_exported: true
    namespace: "virtual_devices"
    description: "Enable virtual rotary input"
    bug: "320328752"
}

flag {
    namespace: "virtual_devices"
    name: "device_aware_drm"
    description: "Makes MediaDrm APIs device-aware"
    bug: "303535376"
    is_fixed_read_only: true
}

flag {
     namespace: "virtual_devices"
     name: "enforce_remote_device_opt_out_on_all_virtual_displays"
     description: "Respect canDisplayOnRemoteDevices on all virtual displays"
     bug: "338973239"
}

flag {
    namespace: "virtual_devices"
    name: "virtual_display_rotation_api"
    description: "API for on-demand rotation of virtual displays"
    bug: "291748430"
    is_exported: true
}

flag {
    namespace: "virtual_devices"
    name: "high_resolution_scroll"
    description: "Enable high resolution scroll"
    bug: "335160780"
}

flag {
    name: "camera_multiple_input_streams"
    is_exported: true
    namespace: "virtual_devices"
    description: "Expose multiple surface for the virtual camera owner for different stream resolution"
    bug: "341083465"
}

flag {
    namespace: "virtual_devices"
    name: "device_aware_display_power"
    description: "Device awareness in power and display APIs"
    bug: "285020111"
    is_exported: true
}

flag {
    namespace: "virtual_devices"
    name: "display_power_manager_apis"
    description: "Make relevant PowerManager APIs display aware by default"
    bug: "365042486"
    is_fixed_read_only: true
}

flag {
    name: "status_bar_and_insets"
    namespace: "virtual_devices"
    description: "Allow for status bar and insets on virtual devices"
    bug: "350007866"
    is_exported: true
}

flag {
    namespace: "virtual_devices"
    name: "camera_timestamp_from_surface"
    description: "Pass the surface timestamp to the capture result"
    bug: "351341245"
}

flag {
    namespace: "virtual_devices"
    name: "enable_limited_vdm_role"
    description: "New VDM role without trusted displays or input"
    bug: "370657575"
    is_exported: true
}

flag {
    namespace: "virtual_devices"
    name: "default_device_camera_access_policy"
    description: "API for default device camera access policy"
    bug: "371173368"
    is_exported: true
}
