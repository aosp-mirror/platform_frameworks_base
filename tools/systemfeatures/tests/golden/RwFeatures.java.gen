// This file is auto-generated. DO NOT MODIFY.
// Args: com.android.systemfeatures.RwFeatures \
//            --readonly=false \
//            --feature=WATCH:1 \
//            --feature=WIFI:0 \
//            --feature=VULKAN:UNAVAILABLE \
//            --feature=AUTO:
package com.android.systemfeatures;

import android.annotation.NonNull;
import android.annotation.Nullable;
import android.content.Context;
import android.content.pm.FeatureInfo;
import android.content.pm.PackageManager;
import java.util.HashMap;
import java.util.Map;

/**
 * @hide
 */
public final class RwFeatures {
    /**
     * Check for FEATURE_WATCH.
     *
     * @hide
     */
    public static boolean hasFeatureWatch(Context context) {
        return hasFeatureFallback(context, PackageManager.FEATURE_WATCH);
    }

    /**
     * Check for FEATURE_WIFI.
     *
     * @hide
     */
    public static boolean hasFeatureWifi(Context context) {
        return hasFeatureFallback(context, PackageManager.FEATURE_WIFI);
    }

    /**
     * Check for FEATURE_VULKAN.
     *
     * @hide
     */
    public static boolean hasFeatureVulkan(Context context) {
        return hasFeatureFallback(context, PackageManager.FEATURE_VULKAN);
    }

    /**
     * Check for FEATURE_AUTO.
     *
     * @hide
     */
    public static boolean hasFeatureAuto(Context context) {
        return hasFeatureFallback(context, PackageManager.FEATURE_AUTO);
    }

    private static boolean hasFeatureFallback(Context context, String featureName) {
        return context.getPackageManager().hasSystemFeature(featureName, 0);
    }

    /**
     * @hide
     */
    @Nullable
    public static Boolean maybeHasFeature(String featureName, int version) {
        return null;
    }

    /**
     * Gets features marked as available at compile-time, keyed by name.
     *
     * @hide
     */
    @NonNull
    public static Map<String, FeatureInfo> getCompileTimeAvailableFeatures() {
        Map<String, FeatureInfo> features = new HashMap<>(0);
        return features;
    }
}
