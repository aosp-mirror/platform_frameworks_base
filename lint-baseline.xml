<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.4.0-alpha01" type="baseline" client="" dependencies="true" name="" variant="all" version="8.4.0-alpha01">

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final String component = Settings.Secure.getString(getContentResolver(),"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/dialog/AccessibilityButtonChooserActivity.java"
            line="60"
            column="42"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(context.getContentResolver(),"
        errorLine2="                               ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/util/AccessibilityStatsLogUtils.java"
            line="188"
            column="32"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(context.getContentResolver(),"
        errorLine2="                               ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/util/AccessibilityStatsLogUtils.java"
            line="194"
            column="32"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(context.getContentResolver(),"
        errorLine2="                       ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/AssistUtils.java"
            line="216"
            column="24"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="     * volume, false otherwise."
        errorLine2="                     ~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/AudioManager.java"
            line="1028"
            column="22"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="    public final boolean isEnabled() {"
        errorLine2="                                     ^">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="70"
            column="38"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="    public final String getRawLocale() {"
        errorLine2="                                       ^">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="81"
            column="40"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getFloat()` called from system process. Please call `android.provider.Settings.Secure#getFloatForUser()` instead. "
        errorLine1="    public final float getFontScale() {"
        errorLine2="                                      ^">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="111"
            column="39"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="    public int getRawUserStyle() {"
        errorLine2="                                 ^">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="120"
            column="34"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            final int foregroundColor = Secure.getInt("
        errorLine2="                       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="478"
            column="24"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            final int backgroundColor = Secure.getInt("
        errorLine2="                       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="480"
            column="24"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            final int edgeType = Secure.getInt("
        errorLine2="                ~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="482"
            column="17"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            final int edgeColor = Secure.getInt("
        errorLine2="                 ~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="484"
            column="18"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            final int windowColor = Secure.getInt("
        errorLine2="                   ~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="486"
            column="20"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="            String rawTypeface = Secure.getString(cr, Secure.ACCESSIBILITY_CAPTIONING_TYPEFACE);"
        errorLine2="                ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/CaptioningManager.java"
            line="489"
            column="17"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        String nearbyComponent = Settings.Secure.getString("
        errorLine2="                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/ChooserActivity.java"
            line="1156"
            column="26"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        final ContentResolver cr = context.getContentResolver();"
        errorLine2="                                       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/display/ColorDisplayManager.java"
            line="587"
            column="40"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Secure.getInt(cr, Secure.ACCESSIBILITY_DISPLAY_INVERSION_ENABLED, 0) == 1"
        errorLine2="                                                                   ~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/display/ColorDisplayManager.java"
            line="588"
            column="68"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        int inversionEnabled = Settings.Secure.getInt(contentResolver,"
        errorLine2="                                       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/security/ConfirmationPrompt.java"
            line="220"
            column="40"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getFloat()` called from system process. Please call `android.provider.Settings.System#getFloatForUser()` instead. "
        errorLine1="        float fontScale = Settings.System.getFloat(contentResolver,"
        errorLine2="                                  ~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/security/ConfirmationPrompt.java"
            line="225"
            column="35"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            int a11yEnabled = Settings.Secure.getInt(contentResolver,"
        errorLine2="                                      ~~~~~~">
        <location
            file="frameworks/base/core/java/android/security/ConfirmationPrompt.java"
            line="237"
            column="39"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="                Secure.getInt(resolver, Secure.RELEASE_COMPRESS_BLOCKS_ON_INSTALL, 1) != 0;"
        errorLine2="               ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/content/F2fsUtils.java"
            line="96"
            column="16"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="        int speed = DEFAULT_POINTER_SPEED;"
        errorLine2="                     ~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/input/InputManager.java"
            line="865"
            column="22"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final ContentResolver contentResolver = fallbackContext.getContentResolver();"
        errorLine2="                                                           ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="2860"
            column="60"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            if (mShowImeWithHardKeyboard == ShowImeWithHardKeyboardType.UNKNOWN) {"
        errorLine2="                                                                              ^">
        <location
            file="frameworks/base/core/java/android/inputmethodservice/InputMethodService.java"
            line="1205"
            column="79"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            if (showImeWithHardKeyboardUri.equals(uri)) {"
        errorLine2="                                                     ^">
        <location
            file="frameworks/base/core/java/android/inputmethodservice/InputMethodService.java"
            line="1225"
            column="54"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="                        RemoteViews.MARGIN_BOTTOM, 0);"
        errorLine2="                            ~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/Notification.java"
            line="5619"
            column="29"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="            return Settings.Secure.getInt(context.getContentResolver(),"
        errorLine2="                   ~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/biometrics/ParentalControlsUtilsInternal.java"
            line="40"
            column="20"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(mContext.getContentResolver(),"
        errorLine2="                               ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/policy/PhoneFallbackEventHandler.java"
            line="328"
            column="32"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        boolean isTvSetupComplete = Settings.Secure.getInt(getContext().getContentResolver(),"
        errorLine2="                            ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java"
            line="3129"
            column="29"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        isTvSetupComplete &amp;= Settings.Secure.getInt(getContext().getContentResolver(),"
        errorLine2="                     ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/policy/PhoneWindow.java"
            line="3131"
            column="22"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getString()` called from system process. Please call `android.provider.Settings.System#getStringForUser()` instead. "
        errorLine1="            final String touchDataJson = Settings.System.getString("
        errorLine2="                                                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/PlatLogoActivity.java"
            line="184"
            column="58"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(mContext.getContentResolver(), name, 0) == 1;"
        errorLine2="       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/quickaccesswallet/QuickAccessWalletClientImpl.java"
            line="463"
            column="8"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        String comp = Settings.Secure.getString(cr, Settings.Secure.NFC_PAYMENT_DEFAULT_COMPONENT);"
        errorLine2="                      ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/quickaccesswallet/QuickAccessWalletServiceInfo.java"
            line="97"
            column="23"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="            final String setting = getDefaultRingtoneSetting(type);"
        errorLine2="                                            ~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/RingtoneManager.java"
            line="1105"
            column="45"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final String targetString = Settings.Secure.getString(context.getContentResolver(),"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java"
            line="55"
            column="45"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final String targetsValue = Settings.Secure.getString(context.getContentResolver(),"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java"
            line="82"
            column="45"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final String targetString = Settings.Secure.getString(context.getContentResolver(),"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/util/ShortcutUtils.java"
            line="112"
            column="45"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        String serviceComponent = Settings.Secure.getString(mContext.getContentResolver(),"
        errorLine2="  ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/SpeechRecognizer.java"
            line="665"
            column="3"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="        boolean cap = System.getInt(resolver, System.TEXT_AUTO_CAPS, 1) &gt; 0;"
        errorLine2="                             ~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/method/TextKeyListener.java"
            line="296"
            column="30"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="        boolean text = System.getInt(resolver, System.TEXT_AUTO_REPLACE, 1) &gt; 0;"
        errorLine2="                              ~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/method/TextKeyListener.java"
            line="297"
            column="31"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="        boolean period = System.getInt(resolver, System.TEXT_AUTO_PUNCTUATE, 1) &gt; 0;"
        errorLine2="                                ~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/method/TextKeyListener.java"
            line="298"
            column="33"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.System#getInt()` called from system process. Please call `android.provider.Settings.System#getIntForUser()` instead. "
        errorLine1="        boolean pw = System.getInt(resolver, System.TEXT_SHOW_PASSWORD, 1) &gt; 0;"
        errorLine2="                            ~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/method/TextKeyListener.java"
            line="299"
            column="29"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(getContentResolver(), name, defaultValue);"
        errorLine2="                       ~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/tts/TextToSpeechService.java"
            line="422"
            column="24"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        return Settings.Secure.getInt(getContext().getContentResolver(),"
        errorLine2="                       ~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/accessibility/dialog/ToggleAllowListingFeatureTarget.java"
            line="63"
            column="24"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        String engine = getString(mContext.getContentResolver(),"
        errorLine2="                ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/tts/TtsEngines.java"
            line="116"
            column="17"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="                getString(mContext.getContentResolver(), Settings.Secure.TTS_DEFAULT_LOCALE));"
        errorLine2="        ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/tts/TtsEngines.java"
            line="337"
            column="9"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="                    getString(mContext.getContentResolver(), Settings.Secure.TTS_DEFAULT_LOCALE),"
        errorLine2="            ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/tts/TtsEngines.java"
            line="373"
            column="13"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="        final String prefList = Settings.Secure.getString(mContext.getContentResolver(),"
        errorLine2="                                        ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/speech/tts/TtsEngines.java"
            line="527"
            column="41"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getInt()` called from system process. Please call `android.provider.Settings.Secure#getIntForUser()` instead. "
        errorLine1="        }"
        errorLine2="         ^">
        <location
            file="frameworks/base/core/java/android/service/autofill/UserData.java"
            line="535"
            column="10"/>
    </issue>

    <issue
        id="NonUserGetterCalled"
        message="`android.provider.Settings.Secure#getString()` called from system process. Please call `android.provider.Settings.Secure#getStringForUser()` instead. "
        errorLine1="    public static boolean isActiveService(Context context, ComponentName service) {"
        errorLine2="                                                                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/voice/VoiceInteractionService.java"
            line="156"
            column="74"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getItemCount()` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `writeToParcelNoRecycle` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            parcel.writeInt(mCollectionInfo.getItemCount());"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="4498"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getImportantForAccessibilityItemCount()` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `writeToParcelNoRecycle` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            parcel.writeInt(mCollectionInfo.getImportantForAccessibilityItemCount());"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="4499"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isGranularScrollingSupported()` is a flagged API and should be inside an `if (Flags.granularScrolling())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_GRANULAR_SCROLLING) to transfer requirement to caller`)"
        errorLine1="        builder.append(&quot;; granularScrollingSupported: &quot;).append(isGranularScrollingSupported());"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="5079"
            column="65"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `CollectionInfo` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            mItemCount = UNDEFINED;"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="6211"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `CollectionInfo` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            mImportantForAccessibilityItemCount = UNDEFINED;"
        errorLine2="                                                  ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="6212"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `clear` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            mItemCount = UNDEFINED;"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="6319"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `UNDEFINED` is a flagged API and should be inside an `if (Flags.collectionInfoItemCounts())` check (or annotate the surrounding method `clear` with `@FlaggedApi(Flags.FLAG_COLLECTION_INFO_ITEM_COUNTS) to transfer requirement to caller`)"
        errorLine1="            mImportantForAccessibilityItemCount = UNDEFINED;"
        errorLine2="                                                  ~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityNodeInfo.java"
            line="6320"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="800"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="811"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="811"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="811"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="819"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="827"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;android.view.accessibility.a11y_overlay_callbacks&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityService.java"
            line="827"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setObservedMotionEventSources()` is a flagged API and should be inside an `if (Flags.motionEventObserving())` check (or annotate the surrounding method `initFromParcel` with `@FlaggedApi(Flags.FLAG_MOTION_EVENT_OBSERVING) to transfer requirement to caller`)"
        errorLine1="        setObservedMotionEventSources(parcel.readInt());"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/accessibilityservice/AccessibilityServiceInfo.java"
            line="1420"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_WINDOW_CONTROL` is a flagged API and should be inside an `if (Flags.addTypeWindowControl())` check (or annotate the surrounding method `typeToString` with `@FlaggedApi(Flags.FLAG_ADD_TYPE_WINDOW_CONTROL) to transfer requirement to caller`)"
        errorLine1="        if (Flags.addTypeWindowControl() &amp;&amp; type == TYPE_WINDOW_CONTROL) {"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/accessibility/AccessibilityWindowInfo.java"
            line="883"
            column="53"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `requestPermissions()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `requestPermissions` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        requestPermissions(permissions, requestCode, getDeviceId());"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/Activity.java"
            line="5636"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `EXTRA_REQUEST_PERMISSIONS_DEVICE_ID` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `dispatchRequestPermissionsResult` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                PackageManager.EXTRA_REQUEST_PERMISSIONS_DEVICE_ID, Context.DEVICE_ID_DEFAULT"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/Activity.java"
            line="9530"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onRequestPermissionsResult()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `dispatchRequestPermissionsResult` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        onRequestPermissionsResult(requestCode, permissions, grantResults, deviceId);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/Activity.java"
            line="9532"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `handleBindApplication` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="                timestampApplicationOnCreateNs = SystemClock.uptimeNanos();"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ActivityThread.java"
            line="7503"
            column="50"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `SeServiceManager()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)"
        errorLine1="        SeFrameworkInitializer.setSeServiceManager(new SeServiceManager());"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ActivityThread.java"
            line="8725"
            column="52"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setSeServiceManager()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)"
        errorLine1="        SeFrameworkInitializer.setSeServiceManager(new SeServiceManager());"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ActivityThread.java"
            line="8725"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `ProfilingServiceManager()` is a flagged API and should be inside an `if (Flags.telemetryApisFrameworkInitialization())` check (or annotate the surrounding method `initializeMainlineModules` with `@FlaggedApi(Flags.FLAG_TELEMETRY_APIS_FRAMEWORK_INITIALIZATION) to transfer requirement to caller`)"
        errorLine1="            ProfilingFrameworkInitializer.setProfilingServiceManager(new ProfilingServiceManager());"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ActivityThread.java"
            line="8727"
            column="70"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `TvExtender()` is a flagged API and should be inside an `if (Flags.apiTvextender())` check (or annotate the surrounding method `createNotification` with `@FlaggedApi(Flags.FLAG_API_TVEXTENDER) to transfer requirement to caller`)"
        errorLine1="                .extend(new Notification.TvExtender()"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/debug/AdbNotifications.java"
            line="95"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setChannelId()` is a flagged API and should be inside an `if (Flags.apiTvextender())` check (or annotate the surrounding method `createNotification` with `@FlaggedApi(Flags.FLAG_API_TVEXTENDER) to transfer requirement to caller`)"
        errorLine1="                .extend(new Notification.TvExtender()"
        errorLine2="                        ^">
        <location
            file="frameworks/base/core/java/android/debug/AdbNotifications.java"
            line="95"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `initialize` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="                if (spec.isMgf1DigestsSpecified()) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreKeyPairGeneratorSpi.java"
            line="346"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `initialize` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="                    Set&lt;String> mgfDigests = spec.getMgf1Digests();"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreKeyPairGeneratorSpi.java"
            line="349"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `setPrivateKeyEntry` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="                    if (spec.isMgf1DigestsSpecified()) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java"
            line="539"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `setPrivateKeyEntry` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="                        for (String mgf1Digest : spec.getMgf1Digests()) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java"
            line="540"
            column="50"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS_STRING` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        APN_TYPE_STRING_MAP.put(TYPE_RCS_STRING, TYPE_RCS);"
        errorLine2="                                ~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="491"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        APN_TYPE_STRING_MAP.put(TYPE_RCS_STRING, TYPE_RCS);"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="491"
            column="50"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS_STRING` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        APN_TYPE_INT_MAP.put(TYPE_RCS, TYPE_RCS_STRING);"
        errorLine2="                                       ~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="509"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        APN_TYPE_INT_MAP.put(TYPE_RCS, TYPE_RCS_STRING);"
        errorLine2="                             ~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="509"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `MTU_V4` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        int mtuV4 = cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.Carriers.MTU_V4));"
        errorLine2="                                                                                  ~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1075"
            column="83"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        return new Builder()"
        errorLine2="               ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1080"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `MTU_V6` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="                .setMtuV6(cursor.getInt(cursor.getColumnIndexOrThrow(Telephony.Carriers.MTU_V6)))"
        errorLine2="                                                                                        ~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1126"
            column="89"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ALWAYS_ON` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="                .setAlwaysOn(cursor.getInt(cursor.getColumnIndexOrThrow(Carriers.ALWAYS_ON)) == 1)"
        errorLine2="                                                                                 ~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1137"
            column="82"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `makeApnSetting` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        return new Builder()"
        errorLine2="               ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1151"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `MTU_V4` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        apnValue.put(Telephony.Carriers.MTU_V4, mMtuV4);"
        errorLine2="                                        ~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1500"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `MTU_V6` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        apnValue.put(Telephony.Carriers.MTU_V6, mMtuV6);"
        errorLine2="                                        ~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1501"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ALWAYS_ON` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `toContentValues` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        apnValue.put(Telephony.Carriers.ALWAYS_ON, mAlwaysOn);"
        errorLine2="                                        ~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1504"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setAlwaysOn()` is a flagged API and should be inside an `if (Flags.apnSettingFieldSupportFlag())` check (or annotate the surrounding method `readFromParcel` with `@FlaggedApi(Flags.FLAG_APN_SETTING_FIELD_SUPPORT_FLAG) to transfer requirement to caller`)"
        errorLine1="        return new Builder()"
        errorLine2="               ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="1785"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `build` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                    | TYPE_XCAP | TYPE_VSIM | TYPE_BIP | TYPE_ENTERPRISE | TYPE_RCS)) == 0"
        errorLine2="                                                                           ~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/ApnSetting.java"
            line="2386"
            column="76"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_ACCESS_RESTRICTED_SETTINGS` is a flagged API and should be inside an `if (Flags.enhancedConfirmationModeApisEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENHANCED_CONFIRMATION_MODE_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        new AppOpInfo.Builder(OP_ACCESS_RESTRICTED_SETTINGS, OPSTR_ACCESS_RESTRICTED_SETTINGS,"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="2983"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_CREATE_ACCESSIBILITY_OVERLAY` is a flagged API and should be inside an `if (Flags.createAccessibilityOverlayAppOpEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CREATE_ACCESSIBILITY_OVERLAY_APP_OP_ENABLED) to transfer requirement to caller`)"
        errorLine1="                OPSTR_CREATE_ACCESSIBILITY_OVERLAY,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3050"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_MEDIA_ROUTING_CONTROL` is a flagged API and should be inside an `if (Flags.enablePrivilegedRoutingForMediaRoutingControl())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_PRIVILEGED_ROUTING_FOR_MEDIA_ROUTING_CONTROL) to transfer requirement to caller`)"
        errorLine1="        new AppOpInfo.Builder(OP_MEDIA_ROUTING_CONTROL, OPSTR_MEDIA_ROUTING_CONTROL,"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3053"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_ENABLE_MOBILE_DATA_BY_USER` is a flagged API and should be inside an `if (Flags.opEnableMobileDataByUser())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_OP_ENABLE_MOBILE_DATA_BY_USER) to transfer requirement to caller`)"
        errorLine1="        new AppOpInfo.Builder(OP_ENABLE_MOBILE_DATA_BY_USER, OPSTR_ENABLE_MOBILE_DATA_BY_USER,"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3056"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER` is a flagged API and should be inside an `if (Flags.rapidClearNotificationsByListenerAppOpEnabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER_APP_OP_ENABLED) to transfer requirement to caller`)"
        errorLine1="                OPSTR_RAPID_CLEAR_NOTIFICATIONS_BY_LISTENER,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3061"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_EMERGENCY_LOCATION` is a flagged API and should be inside an `if (Flags.locationBypass())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_LOCATION_BYPASS) to transfer requirement to caller`)"
        errorLine1="        new AppOpInfo.Builder(OP_EMERGENCY_LOCATION, OPSTR_EMERGENCY_LOCATION, &quot;EMERGENCY_LOCATION&quot;)"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3077"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_RECEIVE_SENSITIVE_NOTIFICATIONS` is a flagged API and should be inside an `if (Flags.redactSensitiveNotificationsFromUntrustedListeners())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_REDACT_SENSITIVE_NOTIFICATIONS_FROM_UNTRUSTED_LISTENERS) to transfer requirement to caller`)"
        errorLine1="                OPSTR_RECEIVE_SENSITIVE_NOTIFICATIONS, &quot;RECEIVE_SENSITIVE_NOTIFICATIONS&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3083"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `OpEventProxyInfo` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="3550"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `onOpChanged` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="7483"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getPackagesForOps` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="7891"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `unsafeCheckOpRawNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                attributionSource.getPackageName(), attributionSource.getDeviceId());"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="8848"
            column="53"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `noteOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                attributionSource.getAttributionTag(), attributionSource.getDeviceId(), message);"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="9034"
            column="56"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `checkOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                attributionSource.getDeviceId());"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="9329"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `startOpNoThrow` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                attributionSource.getAttributionTag(), attributionSource.getDeviceId(),"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="9589"
            column="56"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `finishOp` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                attributionSource.getDeviceId());"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AppOpsManager.java"
            line="9842"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `EXTRA_REQUEST_PERMISSIONS_DEVICE_ID` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `buildRequestPermissionsIntent` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        intent.putExtra(EXTRA_REQUEST_PERMISSIONS_DEVICE_ID, mContext.getDeviceId());"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ApplicationPackageManager.java"
            line="965"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `APP_METADATA_SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.aslInApkAppMetadataSource())` check (or annotate the surrounding method `getAppMetadataSource` with `@FlaggedApi(Flags.FLAG_ASL_IN_APK_APP_METADATA_SOURCE) to transfer requirement to caller`)"
        errorLine1="        int source = PackageManager.APP_METADATA_SOURCE_UNKNOWN;"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ApplicationPackageManager.java"
            line="1283"
            column="37"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `loadUnbadgedItemIcon` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="            if (itemInfo.isArchived) {"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ApplicationPackageManager.java"
            line="3430"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `ArchivedPackageInfo()` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `getArchivedPackage` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="            return new ArchivedPackageInfo(parcel);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ApplicationPackageManager.java"
            line="3995"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPendingCredentialRequest()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `dump` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="        GetCredentialRequest getCredentialRequest = node.getPendingCredentialRequest();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/assist/AssistStructure.java"
            line="2657"
            column="53"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(uid, Process.INVALID_PID, packageName, attributionTag, sDefaultToken, null,"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="112"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(uid, Process.INVALID_PID, packageName, attributionTag, token,"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="126"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(uid, pid, packageName, attributionTag, token, /*renouncedPermissions*/ null,"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="133"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(uid, Process.INVALID_PID, packageName, attributionTag, sDefaultToken,"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="142"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(current.getUid(), current.getPid(), current.getPackageName(),"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="150"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                current.mAttributionSourceState.renouncedPermissions, current.getDeviceId(), next);"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="152"
            column="71"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `AttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        this(uid, pid, packageName, attributionTag, sDefaultToken, renouncedPermissions, deviceId,"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="159"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withNextAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),"
        errorLine2="               ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="212"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withNextAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), next);"
        errorLine2="                                                                          ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="213"
            column="75"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPackageName` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        return new AttributionSource(getUid(), getPid(), packageName, getAttributionTag(),"
        errorLine2="               ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="218"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPackageName` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="               getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());"
        errorLine2="                                                                         ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="219"
            column="74"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withToken` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),"
        errorLine2="               ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="224"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withToken` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                token, mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());"
        errorLine2="                                                                     ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="225"
            column="70"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPid` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        return new AttributionSource(getUid(), pid, getPackageName(), getAttributionTag(),"
        errorLine2="               ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="235"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withPid` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                getToken(), mAttributionSourceState.renouncedPermissions, getDeviceId(), getNext());"
        errorLine2="                                                                          ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="236"
            column="75"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `AttributionSource()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `withDeviceId` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="        return new AttributionSource(getUid(), getPid(), getPackageName(), getAttributionTag(),"
        errorLine2="               ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="241"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setDeviceId()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `myAttributionSource` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="            return new AttributionSource.Builder(uid)"
        errorLine2="                   ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="284"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isRegisteredAttributionSource()` is a flagged API and should be inside an `if (Flags.shouldRegisterAttributionSource())` check (or annotate the surrounding method `isTrusted` with `@FlaggedApi(Flags.FLAG_SHOULD_REGISTER_ATTRIBUTION_SOURCE) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; context.getSystemService(PermissionManager.class)"
        errorLine2="                   ^">
        <location
            file="frameworks/base/core/java/android/content/AttributionSource.java"
            line="487"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isResumed()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `isDisablingEnterExitEventForAutofill` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)"
        errorLine1="        return mAutoFillIgnoreFirstResumePause || !mActivity.isResumed();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/autofill/AutofillClientController.java"
            line="473"
            column="52"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_NAME` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_NAME) != 0) {"
        errorLine2="                       ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AutomaticZenRule.java"
            line="582"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_INTERRUPTION_FILTER` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_INTERRUPTION_FILTER) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AutomaticZenRule.java"
            line="585"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_ICON` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_ICON) != 0) {"
        errorLine2="                       ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/AutomaticZenRule.java"
            line="588"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `run` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)"
        errorLine1="                doConsumeBatchedInput(mChoreographer.getFrameTimeNanos());"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/BatchedInputEventReceiver.java"
            line="130"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `Gainmap()` is a flagged API and should be inside an `if (Flags.gainmapConstructorWithMetadata())` check (or annotate the surrounding method `createBitmap` with `@FlaggedApi(Flags.FLAG_GAINMAP_CONSTRUCTOR_WITH_METADATA) to transfer requirement to caller`)"
        errorLine1="                bitmap.setGainmap(new Gainmap(source.getGainmap(), newMapContents));"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Bitmap.java"
            line="1030"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `Gainmap()` is a flagged API and should be inside an `if (Flags.gainmapConstructorWithMetadata())` check (or annotate the surrounding method `setOverrideGainmap` with `@FlaggedApi(Flags.FLAG_GAINMAP_CONSTRUCTOR_WITH_METADATA) to transfer requirement to caller`)"
        errorLine1="            mOverrideGainmap = new Gainmap(overrideGainmap, overrideGainmap.getGainmapContents());"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/BitmapShader.java"
            line="193"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `set()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `isBoring` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="                fm.set(minimumFontMetrics);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/BoringLayout.java"
            line="594"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getLineMax` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        if (getUseBoundsForWidth()) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/BoringLayout.java"
            line="658"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getLineWidth` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        if (getUseBoundsForWidth()) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/BoringLayout.java"
            line="667"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getShiftDrawingOffsetForStartOverhang()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            if (getUseBoundsForWidth() &amp;&amp; getShiftDrawingOffsetForStartOverhang()) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/BoringLayout.java"
            line="720"
            column="43"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            if (getUseBoundsForWidth() &amp;&amp; getShiftDrawingOffsetForStartOverhang()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/BoringLayout.java"
            line="720"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `createFromParcelBody()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="                            return SignalingDataRequest.createFromParcelBody(source);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/BroadcastInfoRequest.java"
            line="89"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `createFromParcelBody()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="                            return SignalingDataResponse.createFromParcelBody(source);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/BroadcastInfoResponse.java"
            line="75"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `BUGREPORT_MODE_ONBOARDING` is a flagged API and should be inside an `if (Flags.onboardingBugreportV2Enabled())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ONBOARDING_BUGREPORT_V2_ENABLED) to transfer requirement to caller`)"
        errorLine1="    public static final int BUGREPORT_MODE_MAX_VALUE = BUGREPORT_MODE_ONBOARDING;"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/BugreportParams.java"
            line="139"
            column="56"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PROPERTY_IS_TRANSACTIONAL` is a flagged API and should be inside an `if (Flags.voipAppActionsSupport())` check (or annotate the surrounding method `propertiesToString` with `@FlaggedApi(Flags.FLAG_VOIP_APP_ACTIONS_SUPPORT) to transfer requirement to caller`)"
        errorLine1="            if (hasProperty(properties, PROPERTY_IS_TRANSACTIONAL)) {"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/Call.java"
            line="854"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        if (disconnectCause.getImsReasonInfo() != null) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java"
            line="365"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            message = callDiagnostics.onCallDisconnected(disconnectCause.getImsReasonInfo());"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java"
            line="366"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTelephonyDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    disconnectCause.getTelephonyDisconnectCause(),"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java"
            line="369"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTelephonyPreciseDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `handleCallDisconnected` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    disconnectCause.getTelephonyPreciseDisconnectCause());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/CallDiagnosticService.java"
            line="370"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `getDevicePolicyFromContext` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)"
        errorLine1="        return virtualDeviceManager.getDevicePolicy(context.getDeviceId(), POLICY_TYPE_CAMERA);"
        errorLine2="                                                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/Camera.java"
            line="350"
            column="76"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FALLBACK_PACKAGE_NAME` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `onSuccess` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)"
        errorLine1="                        .getString(FALLBACK_PACKAGE_NAME);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraExtensionCharacteristics.java"
            line="591"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `getDevicePolicyFromContext` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)"
        errorLine1="        return mVirtualDeviceManager.getDevicePolicy(context.getDeviceId(), POLICY_TYPE_CAMERA);"
        errorLine2="                                                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraManager.java"
            line="584"
            column="77"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `CameraDeviceSetupImpl()` is a flagged API and should be inside an `if (Flags.cameraDeviceSetup())` check (or annotate the surrounding method `getCameraDeviceSetupUnsafe` with `@FlaggedApi(Flags.FLAG_CAMERA_DEVICE_SETUP) to transfer requirement to caller`)"
        errorLine1="        return new CameraDeviceSetupImpl(cameraId, /*cameraManager=*/ this, mContext);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraManager.java"
            line="903"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isCameraDeviceSetupSupported()` is a flagged API and should be inside an `if (Flags.cameraDeviceSetup())` check (or annotate the surrounding method `openCameraDeviceUserAsync` with `@FlaggedApi(Flags.FLAG_CAMERA_DEVICE_SETUP) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; CameraDeviceSetupImpl.isCameraDeviceSetupSupported(characteristics)) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraManager.java"
            line="983"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `DeviceStateManager` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `registerDeviceStateListener` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                        ctx.getSystemService(DeviceStateManager.class).registerCallback("
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraManager.java"
            line="2141"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `registerCallback()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `registerDeviceStateListener` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                        ctx.getSystemService(DeviceStateManager.class).registerCallback("
        errorLine2="                        ^">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/CameraManager.java"
            line="2141"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATISTICS_LENS_INTRINSICS_SAMPLES` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)"
        errorLine1="                CaptureResult.STATISTICS_LENS_INTRINSICS_SAMPLES.getNativeKey(),"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/impl/CameraMetadataNative.java"
            line="856"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATISTICS_LENS_INTRINSICS_SAMPLES` is a flagged API and should be inside an `if (Flags.concertMode())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONCERT_MODE) to transfer requirement to caller`)"
        errorLine1="                CaptureResult.STATISTICS_LENS_INTRINSICS_SAMPLES.getNativeKey(),"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/camera2/impl/CameraMetadataNative.java"
            line="2021"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_OVER_IMS_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                    KEY_EMERGENCY_OVER_IMS_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8054"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_OVER_IMS_ROAMING_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                    KEY_EMERGENCY_OVER_IMS_ROAMING_SUPPORTED_3GPP_NETWORK_TYPES_INT_ARRAY,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8060"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_OVER_CS_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                    KEY_EMERGENCY_OVER_CS_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8066"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_OVER_CS_ROAMING_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                    KEY_EMERGENCY_OVER_CS_ROAMING_SUPPORTED_ACCESS_NETWORK_TYPES_INT_ARRAY,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8073"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_DOMAIN_PREFERENCE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putIntArray(KEY_EMERGENCY_DOMAIN_PREFERENCE_INT_ARRAY,"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8079"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_PS_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_PS_3GPP,"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8081"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_CS` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_CS,"
        errorLine2="                        ~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8082"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_PS_NON_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_PS_NON_3GPP"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8083"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_DOMAIN_PREFERENCE_ROAMING_INT_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putIntArray(KEY_EMERGENCY_DOMAIN_PREFERENCE_ROAMING_INT_ARRAY,"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8085"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_PS_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_PS_3GPP,"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8087"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_CS` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_CS,"
        errorLine2="                        ~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8088"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DOMAIN_PS_NON_3GPP` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        DOMAIN_PS_NON_3GPP"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8089"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_PREFER_IMS_EMERGENCY_WHEN_VOICE_CALLS_ON_CS_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_PREFER_IMS_EMERGENCY_WHEN_VOICE_CALLS_ON_CS_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8092"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT, VOWIFI_REQUIRES_NONE);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8093"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `VOWIFI_REQUIRES_NONE` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_VOWIFI_REQUIRES_CONDITION_INT, VOWIFI_REQUIRES_NONE);"
        errorLine2="                                                                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8093"
            column="74"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_MAXIMUM_NUMBER_OF_EMERGENCY_TRIES_OVER_VOWIFI_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_MAXIMUM_NUMBER_OF_EMERGENCY_TRIES_OVER_VOWIFI_INT, 1);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8094"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_SCAN_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_SCAN_TIMER_SEC_INT, 10);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8095"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8096"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REDIAL_TIMER_DISABLED` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_MAXIMUM_CELLULAR_SEARCH_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);"
        errorLine2="                                                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8096"
            column="72"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT, SCAN_TYPE_NO_PREFERENCE);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8097"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCAN_TYPE_NO_PREFERENCE` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_NETWORK_SCAN_TYPE_INT, SCAN_TYPE_NO_PREFERENCE);"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8097"
            column="66"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_CALL_SETUP_TIMER_ON_CURRENT_NETWORK_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_EMERGENCY_CALL_SETUP_TIMER_ON_CURRENT_NETWORK_SEC_INT, 0);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8098"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_REQUIRES_IMS_REGISTRATION_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_EMERGENCY_REQUIRES_IMS_REGISTRATION_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8099"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_LTE_PREFERRED_AFTER_NR_FAILED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_EMERGENCY_LTE_PREFERRED_AFTER_NR_FAILED_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8100"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_REQUIRES_VOLTE_ENABLED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_EMERGENCY_REQUIRES_VOLTE_ENABLED_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8101"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_EMERGENCY_CDMA_PREFERRED_NUMBERS_STRING_ARRAY` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putStringArray(KEY_EMERGENCY_CDMA_PREFERRED_NUMBERS_STRING_ARRAY,"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8102"
            column="37"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_CROSS_STACK_REDIAL_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_CROSS_STACK_REDIAL_TIMER_SEC_INT, 120);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8104"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8105"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REDIAL_TIMER_DISABLED` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putInt(KEY_QUICK_CROSS_STACK_REDIAL_TIMER_SEC_INT, REDIAL_TIMER_DISABLED);"
        errorLine2="                                                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8105"
            column="73"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_START_QUICK_CROSS_STACK_REDIAL_TIMER_WHEN_REGISTERED_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_START_QUICK_CROSS_STACK_REDIAL_TIMER_WHEN_REGISTERED_BOOL,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8106"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SCAN_LIMITED_SERVICE_AFTER_VOLTE_FAILURE_BOOL` is a flagged API and should be inside an `if (Flags.useOemDomainSelectionService())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_USE_OEM_DOMAIN_SELECTION_SERVICE) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_SCAN_LIMITED_SERVICE_AFTER_VOLTE_FAILURE_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="8108"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SUPPORTS_IKE_SESSION_MULTIPLE_SA_PROPOSALS_BOOL` is a flagged API and should be inside an `if (Flags.enableMultipleSaProposals())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_MULTIPLE_SA_PROPOSALS) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_SUPPORTS_IKE_SESSION_MULTIPLE_SA_PROPOSALS_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9405"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SUPPORTS_CHILD_SESSION_MULTIPLE_SA_PROPOSALS_BOOL` is a flagged API and should be inside an `if (Flags.enableMultipleSaProposals())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_MULTIPLE_SA_PROPOSALS) to transfer requirement to caller`)"
        errorLine1="            defaults.putBoolean(KEY_SUPPORTS_CHILD_SESSION_MULTIPLE_SA_PROPOSALS_BOOL, false);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9406"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SUPPORTED_IKE_SESSION_AEAD_ALGORITHMS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)"
        errorLine1="                    KEY_SUPPORTED_IKE_SESSION_AEAD_ALGORITHMS_INT_ARRAY, new int[] {});"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9422"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SUPPORTED_CHILD_SESSION_AEAD_ALGORITHMS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)"
        errorLine1="                    KEY_SUPPORTED_CHILD_SESSION_AEAD_ALGORITHMS_INT_ARRAY, new int[] {});"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9427"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_IKE_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)"
        errorLine1="                    KEY_IKE_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY, new int[] {});"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9477"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_CHILD_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY` is a flagged API and should be inside an `if (Flags.enableAeadAlgorithms())` check (or annotate the surrounding method `getDefaults` with `@FlaggedApi(Flags.FLAG_ENABLE_AEAD_ALGORITHMS) to transfer requirement to caller`)"
        errorLine1="                    KEY_CHILD_SESSION_AES_GCM_KEY_SIZE_INT_ARRAY, new int[] {});"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="9479"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.showCallIdAndCallWaitingInAdditionalSettingsMenu())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SHOW_CALL_ID_AND_CALL_WAITING_IN_ADDITIONAL_SETTINGS_MENU) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_ADDITIONAL_SETTINGS_CALLER_ID_VISIBILITY_BOOL, true);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="10519"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.showCallIdAndCallWaitingInAdditionalSettingsMenu())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SHOW_CALL_ID_AND_CALL_WAITING_IN_ADDITIONAL_SETTINGS_MENU) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_ADDITIONAL_SETTINGS_CALL_WAITING_VISIBILITY_BOOL, true);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="10520"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_PREFER_3G_VISIBILITY_BOOL` is a flagged API and should be inside an `if (Flags.hidePrefer3gItem())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HIDE_PREFER_3G_ITEM) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_PREFER_3G_VISIBILITY_BOOL, true);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="10526"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SHOW_ROAMING_INDICATOR_BOOL` is a flagged API and should be inside an `if (Flags.hideRoamingIcon())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HIDE_ROAMING_ICON) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_SHOW_ROAMING_INDICATOR_BOOL, true);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="10794"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_CARRIER_SUPPORTED_SATELLITE_SERVICES_PER_PROVIDER_BUNDLE` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                KEY_CARRIER_SUPPORTED_SATELLITE_SERVICES_PER_PROVIDER_BUNDLE,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11093"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SATELLITE_ATTACH_SUPPORTED_BOOL` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_SATELLITE_ATTACH_SUPPORTED_BOOL, false);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11095"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SATELLITE_CONNECTION_HYSTERESIS_SEC_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putInt(KEY_SATELLITE_CONNECTION_HYSTERESIS_SEC_INT, 300);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11096"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putIntArray(KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY,"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11097"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putIntArray(KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY,"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11105"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putIntArray(KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY,"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11113"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putInt(KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT,"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11121"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SATELLITE_ENTITLEMENT_STATUS_REFRESH_DAYS_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putInt(KEY_SATELLITE_ENTITLEMENT_STATUS_REFRESH_DAYS_INT, 7);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11127"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SATELLITE_ENTITLEMENT_SUPPORTED_BOOL` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_SATELLITE_ENTITLEMENT_SUPPORTED_BOOL, false);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11128"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        NetworkRegistrationInfo.SERVICE_TYPE_MMS"
        errorLine2="                                                ~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11134"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_SUPPORTS_BUSINESS_CALL_COMPOSER_BOOL` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putBoolean(KEY_SUPPORTS_BUSINESS_CALL_COMPOSER_BOOL, false);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11142"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_CELLULAR_SERVICE_CAPABILITIES_INT_ARRAY` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="        sDefaults.putIntArray(KEY_CELLULAR_SERVICE_CAPABILITIES_INT_ARRAY, new int[]{1, 2, 3});"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11233"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager trm = mContext.getSystemService(TelephonyRegistryManager.class);"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11771"
            column="66"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addCarrierConfigChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        trm.addCarrierConfigChangedListener(executor, listener);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11775"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager trm = mContext.getSystemService(TelephonyRegistryManager.class);"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11789"
            column="66"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeCarrierConfigChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierConfigChangeListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        trm.removeCarrierConfigChangedListener(listener);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CarrierConfigManager.java"
            line="11793"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            (TelephonyRegistryManager) this.getSystemService("
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/service/carrier/CarrierService.java"
            line="180"
            column="14"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyCarrierNetworkChange()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryMgr.notifyCarrierNetworkChange(active);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/service/carrier/CarrierService.java"
            line="183"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                TelephonyRegistryManager.class);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/service/carrier/CarrierService.java"
            line="206"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyCarrierNetworkChange()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCarrierNetworkChange` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryMgr.notifyCarrierNetworkChange(subscriptionId, active);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/service/carrier/CarrierService.java"
            line="208"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isUsingNonTerrestrialNetwork()` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="            if (ss != null &amp;&amp; ss.isUsingNonTerrestrialNetwork()) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java"
            line="266"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        CarrierConfigManager.KEY_PARAMETERS_USED_FOR_NTN_LTE_SIGNAL_BAR_INT);"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java"
            line="269"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        CarrierConfigManager.KEY_NTN_LTE_RSRP_THRESHOLDS_INT_ARRAY);"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java"
            line="271"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        CarrierConfigManager.KEY_NTN_LTE_RSRQ_THRESHOLDS_INT_ARRAY);"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java"
            line="273"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `updateLevel` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        CarrierConfigManager.KEY_NTN_LTE_RSSNR_THRESHOLDS_INT_ARRAY);"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/CellSignalStrengthLte.java"
            line="275"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `getFrameTime` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)"
        errorLine1="        return getFrameTimeNanos() / TimeUtils.NANOS_PER_MS;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/Choreographer.java"
            line="694"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `lockAnimationClock()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeReadOnly())` check (or annotate the surrounding method `doFrame` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="            AnimationUtils.lockAnimationClock(frameTimeNanos / TimeUtils.NANOS_PER_MS,"
        errorLine2="            ^">
        <location
            file="frameworks/base/core/java/android/view/Choreographer.java"
            line="934"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        this(id, summary, &quot;&quot;, &quot;&quot;, -1, state, SOURCE_UNKNOWN, FLAG_RELEVANT_ALWAYS);"
        errorLine2="                                             ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="138"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        this(id, summary, &quot;&quot;, &quot;&quot;, -1, state, SOURCE_UNKNOWN, FLAG_RELEVANT_ALWAYS);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="138"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        this(id, summary, line1, line2, icon, state, SOURCE_UNKNOWN, flags);"
        errorLine2="                                                     ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="157"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        this(id, summary, line1, line2, icon, state, SOURCE_UNKNOWN, flags);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="157"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `Condition()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        this((Uri)source.readParcelable(Condition.class.getClassLoader(), android.net.Uri.class),"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="192"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SOURCE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `Condition` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="                Flags.modesApi() ? source.readInt() : SOURCE_UNKNOWN,"
        errorLine2="                                                      ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/Condition.java"
            line="198"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onCreateConnectionComplete()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCreateConnectionComplete` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        onCreateConnectionComplete(findConnectionForAction(callId,"
        errorLine2="        ^">
        <location
            file="frameworks/base/telecomm/java/android/telecom/ConnectionService.java"
            line="2531"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onCreateConferenceComplete()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `notifyCreateConferenceComplete` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        onCreateConferenceComplete(findConferenceForAction(callId,"
        errorLine2="        ^">
        <location
            file="frameworks/base/telecomm/java/android/telecom/ConnectionService.java"
            line="2548"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getCallDirection()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addExistingConnection` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    connection.getCallDirection(),"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/ConnectionService.java"
            line="3179"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `supportsReliableMessages()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)"
        errorLine1="                            || (other.supportsReliableMessages() == mSupportsReliableMessages))"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/location/ContextHubInfo.java"
            line="365"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isReliable()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `onMessageFromNanoApp` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)"
        errorLine1="                                        &amp;&amp; message.isReliable()) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/location/ContextHubManager.java"
            line="715"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RELIABLE_MESSAGE` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `typeToString` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)"
        errorLine1="            case ContextHubTransaction.TYPE_RELIABLE_MESSAGE: {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/location/ContextHubTransaction.java"
            line="235"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `shouldRegisterAttributionSource()` is a flagged API and should be inside an `if (Flags.shouldRegisterAttributionSource())` check (or annotate the surrounding method `ContextImpl` with `@FlaggedApi(Flags.FLAG_SHOULD_REGISTER_ATTRIBUTION_SOURCE) to transfer requirement to caller`)"
        errorLine1="                params.getRenouncedPermissions(), params.shouldRegisterAttributionSource(), mDeviceId);"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ContextImpl.java"
            line="3540"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `DataCallResponse` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="                PreciseDataConnectionState.NETWORK_VALIDATION_UNSUPPORTED);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/DataCallResponse.java"
            line="192"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="                PreciseDataConnectionState.NETWORK_VALIDATION_UNSUPPORTED;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/DataCallResponse.java"
            line="655"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_RCS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `networkCapabilityToApnType` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                return ApnSetting.TYPE_RCS;"
        errorLine2="                                  ~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/DataProfile.java"
            line="435"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `requestNetworkValidation()` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `handleMessage` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="                    serviceProvider.requestNetworkValidation("
        errorLine2="                    ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/data/DataService.java"
            line="744"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HEADLESS_DEVICE_OWNER_MODE_SINGLE_USER` is a flagged API and should be inside an `if (Flags.headlessDeviceOwnerSingleUserEnabled())` check (or annotate the surrounding method `DeviceAdminInfo` with `@FlaggedApi(Flags.FLAG_HEADLESS_DEVICE_OWNER_SINGLE_USER_ENABLED) to transfer requirement to caller`)"
        errorLine1="                        mHeadlessDeviceOwnerMode = HEADLESS_DEVICE_OWNER_MODE_SINGLE_USER;"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/admin/DeviceAdminInfo.java"
            line="410"
            column="52"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_PROTECTION_DISABLED` is a flagged API and should be inside an `if (Flags.manageDevicePolicyEnabled())` check (or annotate the surrounding method `getContentProtectionPolicy` with `@FlaggedApi(Flags.FLAG_MANAGE_DEVICE_POLICY_ENABLED) to transfer requirement to caller`)"
        errorLine1="            return CONTENT_PROTECTION_DISABLED;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/admin/DevicePolicyCache.java"
            line="105"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        return baseState.equals(that.baseState)"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="101"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp;  currentState.equals(that.currentState)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="102"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `diff` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        if (!baseState.equals(other.baseState)) {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="120"
            column="14"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `equals()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `diff` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        if (!currentState.equals(other.currentState)) {"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="123"
            column="14"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            dest.writeTypedObject(supportedStates.get(i).getConfiguration(), flags);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="133"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        dest.writeTypedObject(baseState.getConfiguration(), flags);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="136"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        dest.writeTypedObject(currentState.getConfiguration(), flags);"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="137"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                        DeviceState.Configuration.CREATOR);"
        errorLine2="                                                  ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="152"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                supportedStates.add(i, new DeviceState(configuration));"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="153"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            final DeviceState baseState = new DeviceState("
        errorLine2="                                          ^">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="156"
            column="43"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                    source.readTypedObject(DeviceState.Configuration.CREATOR));"
        errorLine2="                                                                     ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="157"
            column="70"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `DeviceState()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            final DeviceState currentState = new DeviceState("
        errorLine2="                                             ^">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="158"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                    source.readTypedObject(DeviceState.Configuration.CREATOR));"
        errorLine2="                                                                     ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateInfo.java"
            line="159"
            column="70"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onSupportedStatesChanged()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `notifySupportedDeviceStatesChanged` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                    mDeviceStateCallback.onSupportedStatesChanged(newSupportedDeviceStates));"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateManagerGlobal.java"
            line="393"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onDeviceStateChanged()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `notifyDeviceStateChanged` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                    () -> mDeviceStateCallback.onDeviceStateChanged(newDeviceState));"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateManagerGlobal.java"
            line="398"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        DeviceState.Configuration stateConfiguration = currentState.getConfiguration();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="45"
            column="56"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getConfiguration()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            if (stateToCompare.getConfiguration().getPhysicalProperties().isEmpty()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="48"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPhysicalProperties()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            if (stateToCompare.getConfiguration().getPhysicalProperties().isEmpty()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="48"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPhysicalProperties()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            if (isDeviceStateMatchingPhysicalProperties(stateConfiguration.getPhysicalProperties(),"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="51"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getIdentifier()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                return supportedStates.get(i).getIdentifier();"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="53"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `INVALID_DEVICE_STATE_IDENTIFIER` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `calculateBaseStateIdentifier` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        return INVALID_DEVICE_STATE_IDENTIFIER;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="56"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `hasProperty()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `isDeviceStateMatchingPhysicalProperties` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="            if (!state.hasProperty(iterator.next())) {"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/devicestate/DeviceStateUtil.java"
            line="69"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTelephonyDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; Objects.equals(mTelephonyDisconnectCause, d.getTelephonyDisconnectCause())"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/DisconnectCause.java"
            line="498"
            column="66"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTelephonyPreciseDisconnectCause()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    d.getTelephonyPreciseDisconnectCause())"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/DisconnectCause.java"
            line="500"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getImsReasonInfo()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; Objects.equals(mImsReasonInfo, d.getImsReasonInfo());"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/DisconnectCause.java"
            line="501"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SATELLITE_ENABLED` is a flagged API and should be inside an `if (Flags.oemEnabledSatelliteFlag())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_OEM_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="            case SATELLITE_ENABLED:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/DisconnectCause.java"
            line="550"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `dreamCategory` is a flagged API and should be inside an `if (Flags.homePanelDream())` check (or annotate the surrounding method `DreamMetadata` with `@FlaggedApi(Flags.FLAG_HOME_PANEL_DREAM) to transfer requirement to caller`)"
        errorLine1="                this.dreamCategory = DREAM_CATEGORY_DEFAULT;"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/dreams/DreamService.java"
            line="1825"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="        b.setText(text, where, where + after)"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/text/DynamicLayout.java"
            line="736"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setShiftDrawingOffsetForStartOverhang()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        b.setText(text, where, where + after)"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/text/DynamicLayout.java"
            line="736"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        b.setText(text, where, where + after)"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/text/DynamicLayout.java"
            line="736"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTextDirectionHeuristic()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `reflow` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="                .setTextDirection(getTextDirectionHeuristic())"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/DynamicLayout.java"
            line="739"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setLocalePreferredLineHeightForMinimumUsed()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `EditText` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="        setLocalePreferredLineHeightForMinimumUsed(useLocalePreferredLineHeightForMinimumInt);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/widget/EditText.java"
            line="150"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `convertSpToDp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `createInterpolatedTableBetween` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)"
        errorLine1="            float startDp = start.convertSpToDp(sp);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/FontScaleConverterFactory.java"
            line="242"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `convertSpToDp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `createInterpolatedTableBetween` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)"
        errorLine1="            float endDp = end.convertSpToDp(sp);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/FontScaleConverterFactory.java"
            line="243"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)"
        errorLine1="public class FontScaleConverterImpl implements FontScaleConverter {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/FontScaleConverterImpl.java"
            line="36"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)"
        errorLine1="                    FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING,"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ForegroundServiceTypePolicy.java"
            line="587"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `DefaultForegroundServiceTypePolicy` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)"
        errorLine1="            mForegroundServiceTypePolicies.put(FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING,"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/ForegroundServiceTypePolicy.java"
            line="1355"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `doCreate` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                        new InputTransferToken(), &quot;GameSessionService&quot;);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/games/GameSessionService.java"
            line="127"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.configurableSelectorUiEnabled())` check (or annotate the surrounding method `GetCandidateCredentialsResponse` with `@FlaggedApi(Flags.FLAG_CONFIGURABLE_SELECTOR_UI_ENABLED) to transfer requirement to caller`)"
        errorLine1="        in.readTypedList(candidateProviderDataList, GetCredentialProviderData.CREATOR);"
        errorLine2="                                                                              ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/credentials/GetCandidateCredentialsResponse.java"
            line="98"
            column="79"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isConnectionlessStylusHandwritingAvailable()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `prepareDelegation` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="        if (mImm.isConnectionlessStylusHandwritingAvailable()) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/HandwritingInitiator.java"
            line="450"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `startConnectionlessStylusHandwritingForDelegation()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `prepareDelegation` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="            mImm.startConnectionlessStylusHandwritingForDelegation("
        errorLine2="            ^">
        <location
            file="frameworks/base/core/java/android/view/HandwritingInitiator.java"
            line="454"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="    private class DelegationCallback implements ConnectionlessHandwritingCallback {"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/HandwritingInitiator.java"
            line="1116"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                case CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED:"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/HandwritingInitiator.java"
            line="1133"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                case CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED:"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/HandwritingInitiator.java"
            line="1136"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.scrollFeedbackApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SCROLL_FEEDBACK_API) to transfer requirement to caller`)"
        errorLine1="public class HapticScrollFeedbackProvider implements ScrollFeedbackProvider {"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/HapticScrollFeedbackProvider.java"
            line="36"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getOverlaySupport()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)"
        errorLine1="            final OverlayProperties overlayProperties = defaultDisplay.getOverlaySupport();"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/HardwareRenderer.java"
            line="1394"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isCombinationSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)"
        errorLine1="                    overlayProperties.isCombinationSupported("
        errorLine2="                    ^">
        <location
            file="frameworks/base/graphics/java/android/graphics/HardwareRenderer.java"
            line="1422"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isCombinationSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)"
        errorLine1="                    overlayProperties.isCombinationSupported("
        errorLine2="                    ^">
        <location
            file="frameworks/base/graphics/java/android/graphics/HardwareRenderer.java"
            line="1424"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `RGBA_10101010` is a flagged API and should be inside an `if (Flags.requestedFormatsV())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_REQUESTED_FORMATS_V) to transfer requirement to caller`)"
        errorLine1="                            HardwareBuffer.RGBA_10101010),"
        errorLine2="                                           ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/HardwareRenderer.java"
            line="1429"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isMixedColorSpacesSupported()` is a flagged API and should be inside an `if (Flags.overlaypropertiesClassApi())` check (or annotate the surrounding method `initDisplayInfo` with `@FlaggedApi(Flags.FLAG_OVERLAYPROPERTIES_CLASS_API) to transfer requirement to caller`)"
        errorLine1="                    overlayProperties.isMixedColorSpacesSupported());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/HardwareRenderer.java"
            line="1430"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONFIDENCE_LEVEL_VERY_HIGH` is a flagged API and should be inside an `if (Flags.allowHotwordBumpEgress())` check (or annotate the surrounding method `confidenceLevelToString` with `@FlaggedApi(Flags.FLAG_ALLOW_HOTWORD_BUMP_EGRESS) to transfer requirement to caller`)"
        errorLine1="            case CONFIDENCE_LEVEL_VERY_HIGH:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/voice/HotwordRejectedResult.java"
            line="120"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `scheduleMediaViewCleanup()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `release` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="        mSessionImpl.scheduleMediaViewCleanup();"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="87"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `release()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.release();"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="101"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setSurface()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.setSurface((Surface) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="114"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `dispatchSurfaceChanged()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.dispatchSurfaceChanged("
        errorLine2="                ^">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="119"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `createMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.createMediaView((IBinder) args.arg1, (Rect) args.arg2);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="126"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `relayoutMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.relayoutMediaView((Rect) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="131"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeMediaView()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.removeMediaView(true);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="135"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `startAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.startAdService();"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="139"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `stopAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.stopAdService();"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="143"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `resetAdService()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.resetAdService();"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="147"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `sendCurrentVideoBounds()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.sendCurrentVideoBounds((Rect) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="151"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `sendCurrentChannelUri()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.sendCurrentChannelUri((Uri) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="155"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `sendTrackInfoList()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.sendTrackInfoList((List&lt;TvTrackInfo>) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="159"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `sendCurrentTvInputId()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.sendCurrentTvInputId((String) msg.obj);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="163"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `sendSigningResult()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.sendSigningResult((String) args.arg1, (byte[]) args.arg2);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="168"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyError()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.notifyError((String) args.arg1, (Bundle) args.arg2);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="174"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyTvMessage()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.notifyTvMessage((Integer) args.arg1, (Bundle) args.arg2);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="180"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyTvInputSessionData()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `executeMessage` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                mSessionImpl.notifyTvInputSessionData((String) args.arg1, (Bundle) args.arg2);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="186"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `dispatchInputEvent()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="            int handled = mSessionImpl.dispatchInputEvent(event, this);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="309"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DISPATCH_IN_PROGRESS` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="            if (handled != TvAdManager.Session.DISPATCH_IN_PROGRESS) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="310"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DISPATCH_HANDLED` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                        event, handled == TvAdManager.Session.DISPATCH_HANDLED);"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/ad/ITvAdSessionWrapper.java"
            line="312"
            column="63"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onDeregistered()` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `onDeregistered` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)"
        errorLine1="        onDeregistered(info, suggestedAction, attributes);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java"
            line="576"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onTechnologyChangeFailed()` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `onTechnologyChangeFailed` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)"
        errorLine1="        onTechnologyChangeFailed(info, attributes);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java"
            line="703"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ATTR_REGISTRATION_TYPE_EMERGENCY` is a flagged API and should be inside an `if (Flags.emergencyRegistrationState())` check (or annotate the surrounding method `isEmergency` with `@FlaggedApi(Flags.FLAG_EMERGENCY_REGISTRATION_STATE) to transfer requirement to caller`)"
        errorLine1="                    &amp; ImsRegistrationAttributes.ATTR_REGISTRATION_TYPE_EMERGENCY) != 0;"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/stub/ImsRegistrationImplBase.java"
            line="753"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="            Long.numberOfTrailingZeros(CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/ImsService.java"
            line="186"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="            CAPABILITY_SUPPORTS_SIMULTANEOUS_CALLING, &quot;SIMULTANEOUS_CALLING&quot;);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/ImsService.java"
            line="212"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `handleRenderSuggestion` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                    new InputTransferToken(hostInputToken), &quot;InlineSuggestionRenderService&quot;);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/autofill/InlineSuggestionRenderService.java"
            line="170"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `ViewBehavior()` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)"
        errorLine1="    private final ViewBehavior mViewBehavior = new ViewBehavior(this);"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InputDevice.java"
            line="99"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `InputDevice` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)"
        errorLine1="        mViewBehavior.mShouldSmoothScroll = in.readBoolean();"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InputDevice.java"
            line="575"
            column="23"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `setShouldSmoothScroll` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)"
        errorLine1="        mViewBehavior.mShouldSmoothScroll = shouldSmoothScroll;"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InputDevice.java"
            line="1207"
            column="23"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `mShouldSmoothScroll` is a flagged API and should be inside an `if (Flags.inputDeviceViewBehaviorApi())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_INPUT_DEVICE_VIEW_BEHAVIOR_API) to transfer requirement to caller`)"
        errorLine1="        out.writeBoolean(mViewBehavior.mShouldSmoothScroll);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InputDevice.java"
            line="1642"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getHandwritingDelegateFlags()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)"
        errorLine1="                delegateView.getHandwritingDelegateFlags());"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="2880"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getHandwritingDelegateFlags()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)"
        errorLine1="                delegateView, delegatorPackageName, delegateView.getHandwritingDelegateFlags());"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="2911"
            column="53"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `acceptStylusHandwritingDelegation()` is a flagged API and should be inside an `if (Flags.homeScreenHandwritingDelegator())` check (or annotate the surrounding method `acceptStylusHandwritingDelegation` with `@FlaggedApi(Flags.FLAG_HOME_SCREEN_HANDWRITING_DELEGATOR) to transfer requirement to caller`)"
        errorLine1="        acceptStylusHandwritingDelegation("
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="2940"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onError()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                    executor.execute(() -> callback.onError("
        errorLine2="                                           ^">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="4808"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                                    .CONNECTIONLESS_HANDWRITING_ERROR_NO_TEXT_RECOGNIZED));"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="4810"
            column="38"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onResult()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onResult` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                    executor.execute(() -> callback.onResult(text));"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="4812"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onError()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `onError` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                executor.execute(() -> callback.onError(errorCode));"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/inputmethod/InputMethodManager.java"
            line="4834"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onStartConnectionlessStylusHandwriting()` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `canStartStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                if (onStartConnectionlessStylusHandwriting("
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/inputmethodservice/InputMethodService.java"
            line="1085"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `canStartStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                                CONNECTIONLESS_HANDWRITING_ERROR_UNSUPPORTED);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/inputmethodservice/InputMethodService.java"
            line="1096"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONNECTIONLESS_HANDWRITING_ERROR_OTHER` is a flagged API and should be inside an `if (Flags.connectionlessHandwriting())` check (or annotate the surrounding method `finishStylusHandwriting` with `@FlaggedApi(Flags.FLAG_CONNECTIONLESS_HANDWRITING) to transfer requirement to caller`)"
        errorLine1="                mConnectionlessHandwritingCallback.onError(CONNECTIONLESS_HANDWRITING_ERROR_OTHER);"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/inputmethodservice/InputMethodService.java"
            line="2825"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getAccessibilityBounceKeysThreshold()` is a flagged API and should be inside an `if (Flags.keyboardA11yBounceKeysFlag())` check (or annotate the surrounding method `isAccessibilityBounceKeysEnabled` with `@FlaggedApi(Flags.FLAG_KEYBOARD_A11Y_BOUNCE_KEYS_FLAG) to transfer requirement to caller`)"
        errorLine1="        return getAccessibilityBounceKeysThreshold(context) != 0;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/input/InputSettings.java"
            line="458"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getAccessibilitySlowKeysThreshold()` is a flagged API and should be inside an `if (Flags.keyboardA11ySlowKeysFlag())` check (or annotate the surrounding method `isAccessibilitySlowKeysEnabled` with `@FlaggedApi(Flags.FLAG_KEYBOARD_A11Y_SLOW_KEYS_FLAG) to transfer requirement to caller`)"
        errorLine1="        return getAccessibilitySlowKeysThreshold(context) != 0;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/input/InputSettings.java"
            line="542"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)"
        errorLine1="                    mask = APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND,"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InsetsFlags.java"
            line="76"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)"
        errorLine1="                    equals = APPEARANCE_TRANSPARENT_CAPTION_BAR_BACKGROUND,"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InsetsFlags.java"
            line="77"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `APPEARANCE_LIGHT_CAPTION_BARS` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)"
        errorLine1="                    mask = APPEARANCE_LIGHT_CAPTION_BARS,"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InsetsFlags.java"
            line="80"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `APPEARANCE_LIGHT_CAPTION_BARS` is a flagged API and should be inside an `if (Flags.customizableWindowHeaders())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CUSTOMIZABLE_WINDOW_HEADERS) to transfer requirement to caller`)"
        errorLine1="                    equals = APPEARANCE_LIGHT_CAPTION_BARS,"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/InsetsFlags.java"
            line="81"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `countUriRelativeFilterGroups()` is a flagged API and should be inside an `if (Flags.relativeReferenceIntentFilters())` check (or annotate the surrounding method `toLongString` with `@FlaggedApi(Flags.FLAG_RELATIVE_REFERENCE_INTENT_FILTERS) to transfer requirement to caller`)"
        errorLine1="        if (Flags.relativeReferenceIntentFilters() &amp;&amp; countUriRelativeFilterGroups() > 0) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/IntentFilter.java"
            line="577"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `matchGroupsToUri()` is a flagged API and should be inside an `if (Flags.relativeReferenceIntentFilters())` check (or annotate the surrounding method `matchRelRefGroups` with `@FlaggedApi(Flags.FLAG_RELATIVE_REFERENCE_INTENT_FILTERS) to transfer requirement to caller`)"
        errorLine1="        return UriRelativeFilterGroup.matchGroupsToUri(mUriRelativeFilterGroups, data);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/IntentFilter.java"
            line="1839"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `getPrivateProfile` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="            if (userInfo.isPrivateProfile()) return userInfo;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/IntentForwarderActivity.java"
            line="631"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `postEventLogToWorkerThread` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="        final long realtimeNanos = SystemClock.uptimeNanos();"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/jank/InteractionJankMonitor.java"
            line="606"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `KEYCODE_SCREENSHOT` is a flagged API and should be inside an `if (Flags.emojiAndScreenshotKeycodesAvailable())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_EMOJI_AND_SCREENSHOT_KEYCODES_AVAILABLE) to transfer requirement to caller`)"
        errorLine1="    public static final int LAST_KEYCODE = KEYCODE_SCREENSHOT;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/KeyEvent.java"
            line="955"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="            if (sourceSpec.isMgf1DigestsSpecified()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore/KeyGenParameterSpec.java"
            line="1025"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="                mMgf1Digests = sourceSpec.getMgf1Digests();"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore/KeyGenParameterSpec.java"
            line="1026"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `BIOMETRIC_NO_AUTHENTICATION` is a flagged API and should be inside an `if (Flags.lastAuthenticationTime())` check (or annotate the surrounding method `getLastAuthTime` with `@FlaggedApi(Flags.FLAG_LAST_AUTHENTICATION_TIME) to transfer requirement to caller`)"
        errorLine1="            return BiometricConstants.BIOMETRIC_NO_AUTHENTICATION;"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/KeyStoreAuthorization.java"
            line="139"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `BIOMETRIC_NO_AUTHENTICATION` is a flagged API and should be inside an `if (Flags.lastAuthenticationTime())` check (or annotate the surrounding method `getLastAuthTime` with `@FlaggedApi(Flags.FLAG_LAST_AUTHENTICATION_TIME) to transfer requirement to caller`)"
        errorLine1="            return BiometricConstants.BIOMETRIC_NO_AUTHENTICATION;"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/KeyStoreAuthorization.java"
            line="145"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DATA_BLOCK_SERVICE` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `createConfirmFactoryResetCredentialIntent` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)"
        errorLine1="                    ServiceManager.getService(Context.PERSISTENT_DATA_BLOCK_SERVICE));"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/KeyguardManager.java"
            line="365"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `getProfiles` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; mUserManager.isPrivateProfile())) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/LauncherApps.java"
            line="712"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `computeDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            RectF drawingRect = computeDrawingBoundingBox();"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/Layout.java"
            line="498"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getLineSpacingMultiplier()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getSpacingMultiplier` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        return getLineSpacingMultiplier();"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/Layout.java"
            line="4341"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getLineSpacingAmount()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `getSpacingAdd` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        return getLineSpacingAmount();"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/Layout.java"
            line="4368"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="        private @LineBreakStyle int mLineBreakStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="276"
            column="71"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                LineBreakConfig.LINE_BREAK_WORD_STYLE_UNSPECIFIED;"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="280"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="        private @Hyphenation int mHyphenation = LineBreakConfig.HYPHENATION_UNSPECIFIED;"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="282"
            column="65"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                mLineBreakStyle = LINE_BREAK_STYLE_UNSPECIFIED;"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="343"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                mLineBreakWordStyle = LINE_BREAK_WORD_STYLE_UNSPECIFIED;"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="344"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `reset` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                mHyphenation = HYPHENATION_UNSPECIFIED;"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="345"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `getResolvedLineBreakStyle` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)"
        errorLine1="            defaultStyle = LINE_BREAK_STYLE_AUTO;"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="492"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedLineBreakStyle` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="        return config.mLineBreakStyle == LINE_BREAK_STYLE_UNSPECIFIED"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="499"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `getResolvedLineBreakWordStyle` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)"
        errorLine1="            defaultWordStyle = LINE_BREAK_WORD_STYLE_AUTO;"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="527"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedLineBreakWordStyle` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="        return config.mLineBreakWordStyle == LINE_BREAK_WORD_STYLE_UNSPECIFIED"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="534"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="            return HYPHENATION_ENABLED;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="559"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="        return config.mHyphenation == HYPHENATION_UNSPECIFIED"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="561"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `getResolvedHyphenation` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                ? HYPHENATION_ENABLED : config.mHyphenation;"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/LineBreakConfig.java"
            line="562"
            column="19"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getSessionId()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)"
        errorLine1="                        if (lcConfig.getSessionId() == sessionId) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java"
            line="85"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `mediaCodecsConsume()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)"
        errorLine1="                            lcConfig.mediaCodecsConsume(mcEntry -> {"
        errorLine2="                            ^">
        <location
            file="frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java"
            line="86"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onLoudnessCodecUpdate()` is a flagged API and should be inside an `if (Flags.loudnessConfiguratorApi())` check (or annotate the surrounding method `dispatchLoudnessCodecParameterChange` with `@FlaggedApi(Flags.FLAG_LOUDNESS_CONFIGURATOR_API) to transfer requirement to caller`)"
        errorLine1="                                                    l.onLoudnessCodecUpdate(mediaCodec,"
        errorLine2="                                                    ^">
        <location
            file="frameworks/base/media/java/android/media/LoudnessCodecDispatcher.java"
            line="110"
            column="53"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="29"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="29"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="29"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.provider.user_keys&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="29"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.internal.camera.flags.camera_hsum_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="552"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.internal.camera.flags.camera_privacy_allowlist&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="561"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.net.thread.platform.flags.thread_enabled_platform&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="992"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.net.platform.flags.register_nsd_offload_engine&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1055"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.quarantined_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1101"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.quarantined_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1101"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1310"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1310"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1310"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1310"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.screen_recording_callbacks&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1310"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.frp_enforcement&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1434"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.frp_enforcement&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1434"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.internal.telephony.flags.use_oem_domain_selection_service&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1639"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1726"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1726"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1726"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1726"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1839"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_permission_to_access_hidden_profiles&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="1848"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.net.thread.platform.flags.thread_user_restriction_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2292"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.assist_content_user_restriction_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2300"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2363"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2363"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2363"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2363"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.security_log_v2_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2363"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.device_theft_api_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2489"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.device_theft_api_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2489"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2523"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2523"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.contentprotection.flags.manage_device_policy_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2523"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2532"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2532"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2532"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.esim_management_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2532"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2539"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2546"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.admin.flags.dedicated_device_control_api_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2553"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2596"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2596"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.enhanced_confirmation_mode_apis_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2596"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.untrusted_embedding_any_app_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2661"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.always_update_wallpaper_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2904"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.always_update_wallpaper_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="2904"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="3364"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="3364"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.feature.flags.enable_read_dropbox_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="3364"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.accessibility.motion_event_observing&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="3584"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="3971"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.get_resolved_apk_path&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4252"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.get_resolved_apk_path&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4252"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.device_presence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4465"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.device_presence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4465"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.flags.companion_transport_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4475"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4780"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4938"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4938"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4938"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.usage.report_usage_stats_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="4938"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.hardware.biometrics.custom_biometric_prompt&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5392"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.sensitive_notification_app_protection&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5535"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5706"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.telecom.flags.telecom_resolve_hidden_dependencies&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5714"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.contextualsearch.flags.enable_service&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5829"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.contextualsearch.flags.enable_service&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5829"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5935"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5935"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.introduce_media_processing_type&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="5935"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.voice_activation_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6084"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.voice_activation_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6084"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.enable_nfc_mainline&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6304"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6544"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6552"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.ondeviceintelligence.flags.enable_on_device_intelligence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6560"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.get_binding_uid_importance&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6660"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.get_binding_uid_importance&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6660"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.factory_reset_prep_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6676"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.input.flags.override_key_behavior_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6693"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6704"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.bic_client&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6715"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.bic_client&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6715"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6723"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6723"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.app.system_terms_of_address_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6723"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.emergency_install_permission&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6732"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.server.power.feature.flags.enable_early_screen_timeout_detector&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6747"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.fsverity_api&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/Manifest.java"
            line="6755"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                        LineBreakConfigSpan.class);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="471"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                        LineBreakConfigSpan.class);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="476"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForMeasurement` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                        LineBreakConfigSpan.class);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="479"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                            LineBreakConfigSpan.class);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="625"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                            LineBreakConfigSpan.class);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="630"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `LineBreakConfigSpan` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `buildForStaticLayoutInternal` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                                                       LineBreakConfigSpan.class);"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="634"
            column="56"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onAppendReplacementRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyReplacementRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="            testCallback.onAppendReplacementRun(paint, end - start, width);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="784"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                        | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="802"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                        | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="802"
            column="66"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onAppendStyleRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                testCallback.onAppendStyleRun(paint, config, end - start, false);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="814"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                                | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="828"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                                | (Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="828"
            column="74"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onAppendStyleRun()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                        testCallback.onAppendStyleRun(paint, config, levelEnd - levelStart, isRtl);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="840"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getLineBreakConfig()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyMetricsAffectingSpan` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                mLineBreakConfigBuilder.merge(lbcSpan.getLineBreakConfig());"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="888"
            column="47"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `merge()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyMetricsAffectingSpan` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                mLineBreakConfigBuilder.merge(lbcSpan.getLineBreakConfig());"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/MeasuredParagraph.java"
            line="888"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_ENABLED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `appendStyleRun` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                    == LineBreakConfig.HYPHENATION_ENABLED;"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/text/MeasuredText.java"
            line="319"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onOutputBuffersAvailable()` is a flagged API and should be inside an `if (Flags.largeAudioFrame())` check (or annotate the surrounding method `handleCallback` with `@FlaggedApi(Flags.FLAG_LARGE_AUDIO_FRAME) to transfer requirement to caller`)"
        errorLine1="                    mCallback.onOutputBuffersAvailable("
        errorLine2="                    ^">
        <location
            file="frameworks/base/media/java/android/media/MediaCodec.java"
            line="1985"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONFIGURE_FLAG_DETACHED_SURFACE` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `configure` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)"
        errorLine1="            if (surface == null &amp;&amp; (flags &amp; CONFIGURE_FLAG_DETACHED_SURFACE) != 0 &amp;&amp; !canDetach) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodec.java"
            line="2371"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONFIGURE_FLAG_DETACHED_SURFACE` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `configure` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)"
        errorLine1="            if (surface == null &amp;&amp; (flags &amp; CONFIGURE_FLAG_DETACHED_SURFACE) != 0) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodec.java"
            line="2422"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FEATURE_DynamicColorAspects` is a flagged API and should be inside an `if (Flags.dynamicColorAspects())` check (or annotate the surrounding method `getDecoderFeatures` with `@FlaggedApi(Flags.FLAG_DYNAMIC_COLOR_ASPECTS) to transfer requirement to caller`)"
        errorLine1="                    features.add(new Feature(FEATURE_DynamicColorAspects, (1 &lt;&lt; 8), true));"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodecInfo.java"
            line="832"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FEATURE_DetachedSurface` is a flagged API and should be inside an `if (Flags.nullOutputSurface())` check (or annotate the surrounding method `getDecoderFeatures` with `@FlaggedApi(Flags.FLAG_NULL_OUTPUT_SURFACE) to transfer requirement to caller`)"
        errorLine1="                    features.add(new Feature(FEATURE_DetachedSurface,     (1 &lt;&lt; 9), true));"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodecInfo.java"
            line="835"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FEATURE_HlgEditing` is a flagged API and should be inside an `if (Flags.hlgEditing())` check (or annotate the surrounding method `getEncoderFeatures` with `@FlaggedApi(Flags.FLAG_HLG_EDITING) to transfer requirement to caller`)"
        errorLine1="                    features.add(new Feature(FEATURE_HlgEditing, (1 &lt;&lt; 6), true));"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodecInfo.java"
            line="856"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FEATURE_Roi` is a flagged API and should be inside an `if (Flags.regionOfInterest())` check (or annotate the surrounding method `getEncoderFeatures` with `@FlaggedApi(Flags.FLAG_REGION_OF_INTEREST) to transfer requirement to caller`)"
        errorLine1="                    features.add(new Feature(FEATURE_Roi, (1 &lt;&lt; 7), true));"
        errorLine2="                                             ~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaCodecInfo.java"
            line="859"
            column="46"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_HDMI_ARC` is a flagged API and should be inside an `if (Flags.enableAudioPoliciesDeviceAndBluetoothController())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_AUDIO_POLICIES_DEVICE_AND_BLUETOOTH_CONTROLLER) to transfer requirement to caller`)"
        errorLine1="            case TYPE_HDMI_ARC:"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1030"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_HDMI_EARC` is a flagged API and should be inside an `if (Flags.enableAudioPoliciesDeviceAndBluetoothController())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_AUDIO_POLICIES_DEVICE_AND_BLUETOOTH_CONTROLLER) to transfer requirement to caller`)"
        errorLine1="            case TYPE_HDMI_EARC:"
        errorLine2="                 ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1032"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_TABLET` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_TABLET:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1050"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_TABLET_DOCKED` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_TABLET_DOCKED:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1052"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_COMPUTER` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_COMPUTER:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1054"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_GAME_CONSOLE` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_GAME_CONSOLE:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1056"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_CAR` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_CAR:"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1058"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_SMARTWATCH` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_SMARTWATCH:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1060"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_REMOTE_SMARTPHONE` is a flagged API and should be inside an `if (Flags.enableNewMediaRoute2InfoTypes())` check (or annotate the surrounding method `getDeviceTypeString` with `@FlaggedApi(Flags.FLAG_ENABLE_NEW_MEDIA_ROUTE_2_INFO_TYPES) to transfer requirement to caller`)"
        errorLine1="            case TYPE_REMOTE_SMARTPHONE:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1062"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)"
        errorLine1="            mSuitabilityStatus = SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRoute2Info.java"
            line="1122"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `OPSTR_MEDIA_ROUTING_CONTROL` is a flagged API and should be inside an `if (Flags.enablePrivilegedRoutingForMediaRoutingControl())` check (or annotate the surrounding method `checkCallerHasOnlyRevocablePermissions` with `@FlaggedApi(Flags.FLAG_ENABLE_PRIVILEGED_ROUTING_FOR_MEDIA_ROUTING_CONTROL) to transfer requirement to caller`)"
        errorLine1="                                AppOpsManager.OPSTR_MEDIA_ROUTING_CONTROL,"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/MediaRouter2.java"
            line="457"
            column="47"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)"
        errorLine1="                CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY + 1;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/feature/MmTelFeature.java"
            line="574"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY` is a flagged API and should be inside an `if (Flags.businessCallComposer())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_BUSINESS_CALL_COMPOSER) to transfer requirement to caller`)"
        errorLine1="            builder.append(isCapable(CAPABILITY_TYPE_CALL_COMPOSER_BUSINESS_ONLY));"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/ims/feature/MmTelFeature.java"
            line="622"
            column="38"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isReliable()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)"
        errorLine1="                            || (other.isReliable() == mIsReliable))"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/location/NanoAppMessage.java"
            line="269"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getMessageSequenceNumber()` is a flagged API and should be inside an `if (Flags.reliableMessage())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_RELIABLE_MESSAGE) to transfer requirement to caller`)"
        errorLine1="                            || (other.getMessageSequenceNumber() == mMessageSequenceNumber));"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/location/NanoAppMessage.java"
            line="271"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="    public static final int LAST_SERVICE_TYPE = SERVICE_TYPE_MMS;"
        errorLine2="                                                ~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/NetworkRegistrationInfo.java"
            line="219"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_TYPE_MMS` is a flagged API and should be inside an `if (Flags.carrierEnabledSatelliteFlag())` check (or annotate the surrounding method `serviceTypeToString` with `@FlaggedApi(Flags.FLAG_CARRIER_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="            case SERVICE_TYPE_MMS: return &quot;MMS&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/NetworkRegistrationInfo.java"
            line="759"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `writeXml` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="        if (getVibrationEffect() != null) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1333"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `writeXml` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="            out.attribute(null, ATT_VIBRATION_EFFECT, vibrationToString(getVibrationEffect()));"
        errorLine2="                                                                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1334"
            column="73"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `toJson` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="        if (getVibrationEffect() != null) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1416"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `toJson` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="            record.put(ATT_VIBRATION_EFFECT, vibrationToString(getVibrationEffect()));"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1417"
            column="64"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; Objects.equals(getVibrationEffect(), that.getVibrationEffect())"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1545"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `equals` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; Objects.equals(getVibrationEffect(), that.getVibrationEffect())"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1545"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getVibrationEffect()` is a flagged API and should be inside an `if (Flags.notificationChannelVibrationEffectApi())` check (or annotate the surrounding method `hashCode` with `@FlaggedApi(Flags.FLAG_NOTIFICATION_CHANNEL_VIBRATION_EFFECT_API) to transfer requirement to caller`)"
        errorLine1="                mImportanceLockedDefaultApp, mOriginalImportance, getVibrationEffect(),"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationChannel.java"
            line="1563"
            column="67"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `addAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        return addAutomaticZenRule(automaticZenRule, /* fromUser= */ false);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationManager.java"
            line="1368"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `updateAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `updateAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        return updateAutomaticZenRule(id, automaticZenRule, /* fromUser= */ false);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationManager.java"
            line="1404"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeAutomaticZenRule()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `removeAutomaticZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        return removeAutomaticZenRule(id, /* fromUser= */ false);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/NotificationManager.java"
            line="1473"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ROLLBACK_USER_IMPACT_LOW` is a flagged API and should be inside an `if (Flags.recoverabilityDetection())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_RECOVERABILITY_DETECTION) to transfer requirement to caller`)"
        errorLine1="        public int rollbackImpactLevel = PackageManager.ROLLBACK_USER_IMPACT_LOW;"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageInstaller.java"
            line="2789"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="        isArchived = orig.isArchived;"
        errorLine2="        ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageItemInfo.java"
            line="204"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="        isArchived = orig.isArchived;"
        errorLine2="                          ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageItemInfo.java"
            line="204"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="        dest.writeBoolean(isArchived);"
        errorLine2="                          ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageItemInfo.java"
            line="470"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `dumpDebug` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="        proto.write(PackageItemInfoProto.IS_ARCHIVED, isArchived);"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageItemInfo.java"
            line="488"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `isArchived` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `PackageItemInfo` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="        isArchived = source.readBoolean();"
        errorLine2="        ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageItemInfo.java"
            line="503"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `onPermissionsChanged` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/PackageManager.java"
            line="766"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `EXTRA_ARCHIVAL` is a flagged API and should be inside an `if (Flags.archiving())` check (or annotate the surrounding method `doHandlePackageEvent` with `@FlaggedApi(Flags.FLAG_ARCHIVING) to transfer requirement to caller`)"
        errorLine1="                    if (intent.getBooleanExtra(Intent.EXTRA_ARCHIVAL, false)) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/content/PackageMonitor.java"
            line="491"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ACTION_PACKAGE_UNSTOPPED` is a flagged API and should be inside an `if (Flags.stayStopped())` check (or annotate the surrounding method `doHandlePackageEvent` with `@FlaggedApi(Flags.FLAG_STAY_STOPPED) to transfer requirement to caller`)"
        errorLine1="        } else if (Intent.ACTION_PACKAGE_UNSTOPPED.equals(action)) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/content/PackageMonitor.java"
            line="582"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2587"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2587"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2626"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `measureText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2626"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2846"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2846"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2936"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `getTextWidths` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        setFlags(getFlags() | (TEXT_RUN_FLAG_LEFT_EDGE | TEXT_RUN_FLAG_RIGHT_EDGE));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Paint.java"
            line="2936"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isMgf1DigestsSpecified()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="        if (mSpec.isMgf1DigestsSpecified()) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore/ParcelableKeyGenParameterSpec.java"
            line="98"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getMgf1Digests()` is a flagged API and should be inside an `if (Flags.mgf1DigestSetterV2())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_MGF1_DIGEST_SETTER_V2) to transfer requirement to caller`)"
        errorLine1="            out.writeStringList(List.copyOf(mSpec.getMgf1Digests()));"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/keystore/java/android/security/keystore/ParcelableKeyGenParameterSpec.java"
            line="99"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `computeBounds()` is a flagged API and should be inside an `if (Flags.exactComputeBounds())` check (or annotate the surrounding method `computeBounds` with `@FlaggedApi(Flags.FLAG_EXACT_COMPUTE_BOUNDS) to transfer requirement to caller`)"
        errorLine1="        computeBounds(bounds);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/Path.java"
            line="310"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onOneTimePermissionSessionTimeout()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `notifyOneTimePermissionSessionTimeout` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                onOneTimePermissionSessionTimeout(packageName, deviceId);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionControllerService.java"
            line="672"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onRevokeSelfPermissionsOnKill()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `revokeSelfPermissionsOnKill` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                    onRevokeSelfPermissionsOnKill(packageName, permissions, deviceId,"
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/permission/PermissionControllerService.java"
            line="776"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getIndicatorAppOpUsageData` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionManager.java"
            line="1342"
            column="38"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getPersistentDeviceId` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="            persistentDeviceId = VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT;"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionManager.java"
            line="1951"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onPermissionsChanged()` is a flagged API and should be inside an `if (Flags.deviceAwarePermissionApisEnabled())` check (or annotate the surrounding method `handleMessage` with `@FlaggedApi(Flags.FLAG_DEVICE_AWARE_PERMISSION_APIS_ENABLED) to transfer requirement to caller`)"
        errorLine1="                    mListener.onPermissionsChanged(uid, persistentDeviceId);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionManager.java"
            line="2040"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPersistentDeviceId()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `getOpUsageDataForAllDevices` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="            persistentDeviceIds.add(virtualDevices.get(num).getPersistentDeviceId());"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionUsageHelper.java"
            line="381"
            column="37"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getOpUsageDataForAllDevices` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="        persistentDeviceIds.add(VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionUsageHelper.java"
            line="383"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `getOpUsagesByDevice` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT)) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/permission/PermissionUsageHelper.java"
            line="492"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `hasSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="            if (phoneAccount.hasSimultaneousCallingRestriction()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/PhoneAccount.java"
            line="585"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `Builder` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="                mSimultaneousCallingRestriction = phoneAccount.getSimultaneousCallingRestriction();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/PhoneAccount.java"
            line="586"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `hasSimultaneousCallingRestriction()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="        if (hasSimultaneousCallingRestriction()) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telecomm/java/android/telecom/PhoneAccount.java"
            line="1292"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATE_PLAYBACK_SUPPRESSED` is a flagged API and should be inside an `if (Flags.enableNotifyingActivityManagerWithMediaSessionStatusChange())` check (or annotate the surrounding method `isActive` with `@FlaggedApi(Flags.FLAG_ENABLE_NOTIFYING_ACTIVITY_MANAGER_WITH_MEDIA_SESSION_STATUS_CHANGE) to transfer requirement to caller`)"
        errorLine1="            case PlaybackState.STATE_PLAYBACK_SUPPRESSED:"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/session/PlaybackState.java"
            line="541"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATE_PLAYBACK_SUPPRESSED` is a flagged API and should be inside an `if (Flags.enableNotifyingActivityManagerWithMediaSessionStatusChange())` check (or annotate the surrounding method `getStringForStateInt` with `@FlaggedApi(Flags.FLAG_ENABLE_NOTIFYING_ACTIVITY_MANAGER_WITH_MEDIA_SESSION_STATUS_CHANGE) to transfer requirement to caller`)"
        errorLine1="            case STATE_PLAYBACK_SUPPRESSED:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/session/PlaybackState.java"
            line="587"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="39"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="49"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="49"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="57"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="57"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="94"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="103"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="103"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="115"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="123"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitor.java"
            line="129"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="@FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="31"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="31"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="60"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/PowerMonitorReadings.java"
            line="72"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `PreciseDataConnectionState` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="                        .build(), null, NETWORK_VALIDATION_UNSUPPORTED);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="143"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="            case NETWORK_VALIDATION_UNSUPPORTED: return &quot;unsupported&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="456"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_NOT_REQUESTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="            case NETWORK_VALIDATION_NOT_REQUESTED: return &quot;not requested&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="457"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_IN_PROGRESS` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="            case NETWORK_VALIDATION_IN_PROGRESS: return &quot;in progress&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="458"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_SUCCESS` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="            case NETWORK_VALIDATION_SUCCESS: return &quot;success&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="459"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_FAILURE` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `networkValidationStatusToString` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="            case NETWORK_VALIDATION_FAILURE: return &quot;failure&quot;;"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="460"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `NETWORK_VALIDATION_UNSUPPORTED` is a flagged API and should be inside an `if (Flags.networkValidation())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_NETWORK_VALIDATION) to transfer requirement to caller`)"
        errorLine1="                NETWORK_VALIDATION_UNSUPPORTED;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/PreciseDataConnectionState.java"
            line="508"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `createMeasuredParagraphsFromPrecomputedText` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)"
        errorLine1="        if (config.getLineBreakWordStyle() == LineBreakConfig.LINE_BREAK_WORD_STYLE_AUTO"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/PrecomputedText.java"
            line="461"
            column="63"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `merge()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `createMeasuredParagraphsFromPrecomputedText` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="            config = new LineBreakConfig.Builder()"
        errorLine2="                     ^">
        <location
            file="frameworks/base/core/java/android/text/PrecomputedText.java"
            line="464"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_AUTO` is a flagged API and should be inside an `if (Flags.wordStyleAuto())` check (or annotate the surrounding method `createMeasuredParagraphs` with `@FlaggedApi(Flags.FLAG_WORD_STYLE_AUTO) to transfer requirement to caller`)"
        errorLine1="                if (config.getLineBreakWordStyle() == LineBreakConfig.LINE_BREAK_WORD_STYLE_AUTO"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/PrecomputedText.java"
            line="515"
            column="71"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isResumed()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `onListItemClick` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)"
        errorLine1="        if (!isResumed()) {"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/preference/PreferenceActivity.java"
            line="1071"
            column="14"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `PromptContentViewParcelable` is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `PromptInfo` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)"
        errorLine1="        mContentView = in.readParcelable(PromptContentViewParcelable.class.getClassLoader(),"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java"
            line="75"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `PromptContentViewParcelable` is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `PromptInfo` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)"
        errorLine1="                PromptContentViewParcelable.class);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java"
            line="76"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `isContentViewMoreOptionsButtonUsed` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; mContentView instanceof PromptContentViewWithMoreOptionsButton;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java"
            line="214"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.customBiometricPrompt())` check (or annotate the surrounding method `setContentView` with `@FlaggedApi(Flags.FLAG_CUSTOM_BIOMETRIC_PROMPT) to transfer requirement to caller`)"
        errorLine1="        mContentView = (PromptContentViewParcelable) view;"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/biometrics/PromptInfo.java"
            line="258"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="610"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="610"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="610"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.media.tv.flags.enable_ad_service_fw&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="610"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="693"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="759"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="1300"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="2782"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.res.default_locale&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="3023"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="3599"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="3599"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="3599"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.service.controls.flags.Flags.FLAG_HOME_PANEL_DREAM&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="3599"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.res.manifest_flagging&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="4290"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="4870"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="4970"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="4979"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="5032"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.virtual.flags.vdm_custom_ime&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="6857"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="7587"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="7587"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="7587"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="7587"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="9481"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="9481"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="9481"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.sdk_lib_independence&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="9481"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="10701"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="10727"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="10767"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="10776"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.pm.relative_reference_intent_filters&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="10785"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.content_uri_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="11122"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="12404"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_observe_mode&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="12438"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.connectionless_handwriting&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="13485"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.multiuser.enable_system_user_only_for_services_and_providers&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="13672"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="15472"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.fix_line_height_for_locale&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="15520"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.flags.toolkit_set_frame_rate_read_only&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="16364"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.window.flags.enforce_edge_to_edge&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="16561"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.retail_demo_role_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="18455"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.permission.flags.wallet_role_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="18473"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.content_uri_permission_apis&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="25110"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="25837"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.security.asm_restrictions_enabled&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="27173"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="41370"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.companion.virtual.flags.vdm_custom_ime&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="41608"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.inputmethod.ime_switcher_revamp&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="41645"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.content.res.default_locale&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="44145"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="45932"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="45956"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="45970"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.nfc.nfc_read_polling_loop&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="45996"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="53416"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="53416"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="53416"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="53416"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="55227"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.fix_line_height_for_locale&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="55238"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;com.android.text.flags.use_bounds_for_width&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="55249"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="62287"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @android.annotation.FlaggedApi(&quot;android.view.flags.sensitive_content_app_protection_api&quot;)"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="out/soong/.intermediates/frameworks/base/core/res/framework-res/android_common/gen/android/R.srcjar!/android/R.java"
            line="64240"
            column="36"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_COMMENT_SHORT_DESCRIPTION` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMENT_SHORT_DESCRIPTION, METADATA_TYPE_TEXT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="249"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_COMMENT_ACTUAL_TEXT` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMENT_ACTUAL_TEXT, METADATA_TYPE_TEXT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="250"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_COMMERCIAL` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_COMMERCIAL, METADATA_TYPE_TEXT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="251"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_UFIDS` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_UFIDS, METADATA_TYPE_TEXT_ARRAY);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="252"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_HD_STATION_NAME_SHORT` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_STATION_NAME_SHORT, METADATA_TYPE_TEXT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="253"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_HD_STATION_NAME_LONG` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_STATION_NAME_LONG, METADATA_TYPE_TEXT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="254"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `METADATA_KEY_HD_SUBCHANNELS_AVAILABLE` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="        METADATA_KEYS_TYPE.put(METADATA_KEY_HD_SUBCHANNELS_AVAILABLE, METADATA_TYPE_INT);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/RadioMetadata.java"
            line="255"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `fetchPrivateProfileUserHandle` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="            if (userInfo.isPrivateProfile()) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/ResolverActivity.java"
            line="827"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDefaultLocale()` is a flagged API and should be inside an `if (Flags.defaultLocale())` check (or annotate the surrounding method `updateConfigurationImpl` with `@FlaggedApi(Flags.FLAG_DEFAULT_LOCALE) to transfer requirement to caller`)"
        errorLine1="                        if (Flags.defaultLocale() &amp;&amp; (lc.getDefaultLocale() != null)) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/ResourcesImpl.java"
            line="474"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDefaultLocale()` is a flagged API and should be inside an `if (Flags.defaultLocale())` check (or annotate the surrounding method `updateConfigurationImpl` with `@FlaggedApi(Flags.FLAG_DEFAULT_LOCALE) to transfer requirement to caller`)"
        errorLine1="                    if (Flags.defaultLocale() &amp;&amp; (lc.getDefaultLocale() != null)) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/ResourcesImpl.java"
            line="515"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ROLLBACK_USER_IMPACT_LOW` is a flagged API and should be inside an `if (Flags.recoverabilityDetection())` check (or annotate the surrounding method `RollbackInfo` with `@FlaggedApi(Flags.FLAG_RECOVERABILITY_DETECTION) to transfer requirement to caller`)"
        errorLine1="                PackageManager.ROLLBACK_USER_IMPACT_LOW);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/rollback/RollbackInfo.java"
            line="80"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getTransferReason()` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)"
        errorLine1="                .append(getTransferReason())"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/RoutingSessionInfo.java"
            line="528"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TRANSFER_REASON_FALLBACK` is a flagged API and should be inside an `if (Flags.enableBuiltInSpeakerRouteSuitabilityStatuses())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_BUILT_IN_SPEAKER_ROUTE_SUITABILITY_STATUSES) to transfer requirement to caller`)"
        errorLine1="        @TransferReason private int mTransferReason = TRANSFER_REASON_FALLBACK;"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/RoutingSessionInfo.java"
            line="590"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="    private @ScreenRecordingState int mState = SCREEN_RECORDING_STATE_NOT_VISIBLE;"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java"
            line="54"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `onScreenRecordingStateChanged` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="                                                ? SCREEN_RECORDING_STATE_VISIBLE"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java"
            line="85"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `onScreenRecordingStateChanged` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="                                                : SCREEN_RECORDING_STATE_NOT_VISIBLE;"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java"
            line="86"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `addCallback` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="                                    ? SCREEN_RECORDING_STATE_VISIBLE"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java"
            line="96"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `addCallback` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="                                    : SCREEN_RECORDING_STATE_NOT_VISIBLE;"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ScreenRecordingCallbacks.java"
            line="97"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING` is a flagged API and should be inside an `if (Flags.introduceMediaProcessingType())` check (or annotate the surrounding method `foregroundServiceTypeToLabel` with `@FlaggedApi(Flags.FLAG_INTRODUCE_MEDIA_PROCESSING_TYPE) to transfer requirement to caller`)"
        errorLine1="            case FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING:"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/ServiceInfo.java"
            line="707"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isPrivateProfile()` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `setLaunchUserSpecificMessage` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="            if (userInfo != null &amp;&amp; userInfo.isPrivateProfile()) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/app/SetScreenLockDialogActivity.java"
            line="146"
            column="37"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.media.flags.enable_privileged_routing_for_media_routing_control&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/provider/Settings.java"
            line="665"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="        @FlaggedApi(&quot;com.android.server.biometrics.face_vhal_feature&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/provider/Settings.java"
            line="11022"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="        @FlaggedApi(&quot;com.android.server.biometrics.face_vhal_feature&quot;)"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/provider/Settings.java"
            line="11030"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.wifi.flags.shared_connectivity_broadcast_receiver_test_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/wifi/java/src/android/net/wifi/sharedconnectivity/app/SharedConnectivityManager.java"
            line="300"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getInputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `createSurfaceView` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                                : attachedSurfaceControl.getInputTransferToken(),"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/window/SplashScreenView.java"
            line="342"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `getTime` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="        return SystemClock.uptimeNanos() / 1000;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/com/android/internal/util/StatLogger.java"
            line="94"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `generate` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        final LineBreaker lineBreaker = new LineBreaker.Builder()"
        errorLine2="                                        ^">
        <location
            file="frameworks/base/core/java/android/text/StaticLayout.java"
            line="823"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `computeDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `computeDrawingBoundingBox` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            mDrawingBounds = super.computeDrawingBoundingBox();"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/StaticLayout.java"
            line="1578"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `createNoBreakSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                buffer.setSpan(LineBreakConfigSpan.createNoBreakSpan(),"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="297"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `createNoHyphenationSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                buffer.setSpan(LineBreakConfigSpan.createNoHyphenationSpan(),"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="301"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                    int lbStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="387"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                    int lbWordStyle = LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED;"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="403"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                    if (lbStyle != LineBreakConfig.LINE_BREAK_STYLE_UNSPECIFIED"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="415"
            column="52"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `LINE_BREAK_WORD_STYLE_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                            || lbWordStyle != LineBreakConfig.LINE_BREAK_WORD_STYLE_UNSPECIFIED) {"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="416"
            column="63"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `LineBreakConfigSpan()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                        buffer.setSpan(new LineBreakConfigSpan("
        errorLine2="                                       ^">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="417"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `HYPHENATION_UNSPECIFIED` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `applyStyles` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                                        LineBreakConfig.HYPHENATION_UNSPECIFIED)),"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/res/StringBlock.java"
            line="419"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setServiceCapabilities()` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="            return new Builder()"
        errorLine2="                   ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionInfo.java"
            line="957"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setTransferStatus()` is a flagged API and should be inside an `if (Flags.supportPsimToEsimConversion())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_SUPPORT_PSIM_TO_ESIM_CONVERSION) to transfer requirement to caller`)"
        errorLine1="            return new Builder()"
        errorLine2="                   ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionInfo.java"
            line="957"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_CAPABILITY_DATA` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="    public static final int SERVICE_CAPABILITY_MAX = SERVICE_CAPABILITY_DATA;"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1436"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_CAPABILITY_VOICE` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="            serviceCapabilityToBitmask(SERVICE_CAPABILITY_VOICE);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1443"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_CAPABILITY_SMS` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="            serviceCapabilityToBitmask(SERVICE_CAPABILITY_SMS);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1450"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_CAPABILITY_DATA` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="            serviceCapabilityToBitmask(SERVICE_CAPABILITY_DATA);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1457"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addOnSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager telephonyRegistryManager = (TelephonyRegistryManager)"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1696"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addOnSubscriptionsChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addOnSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryManager.addOnSubscriptionsChangedListener(listener,"
        errorLine2="            ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1699"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `removeOnSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager telephonyRegistryManager = (TelephonyRegistryManager)"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1726"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeOnSubscriptionsChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `removeOnSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryManager.removeOnSubscriptionsChangedListener(listener);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1729"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addOnOpportunisticSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager telephonyRegistryManager = (TelephonyRegistryManager)"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1784"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addOnOpportunisticSubscriptionsChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `addOnOpportunisticSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryManager.addOnOpportunisticSubscriptionsChangedListener("
        errorLine2="            ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1787"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `removeOnOpportunisticSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        TelephonyRegistryManager telephonyRegistryManager = (TelephonyRegistryManager)"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1808"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeOnOpportunisticSubscriptionsChangedListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `removeOnOpportunisticSubscriptionsChangedListener` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistryManager.removeOnOpportunisticSubscriptionsChangedListener(listener);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="1811"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SERVICE_CAPABILITY_VOICE` is a flagged API and should be inside an `if (Flags.dataOnlyCellularService())` check (or annotate the surrounding method `getServiceCapabilitiesSet` with `@FlaggedApi(Flags.FLAG_DATA_ONLY_CELLULAR_SERVICE) to transfer requirement to caller`)"
        errorLine1="        for (int i = SERVICE_CAPABILITY_VOICE; i &lt;= SERVICE_CAPABILITY_MAX; i++) {"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/SubscriptionManager.java"
            line="4800"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `SurfacePackage` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="            mInputTransferToken = InputTransferToken.CREATOR.createFromParcel(in);"
        errorLine2="                                                     ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceControlViewHost.java"
            line="196"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `writeToParcel()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `writeToParcel` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="            mInputTransferToken.writeToParcel(out, flags);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceControlViewHost.java"
            line="276"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getInputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `toString` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="            return &quot;{inputTransferToken=&quot; + getInputTransferToken() + &quot; remoteInterface=&quot;"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceControlViewHost.java"
            line="309"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `SurfaceControlViewHost` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="        this(context, display, hostToken == null ? null : new InputTransferToken(hostToken),"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceControlViewHost.java"
            line="352"
            column="59"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `transferTouchGesture()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `transferTouchGestureToHost` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="        return wm.transferTouchGesture(getInputTransferToken(), mWm.mHostInputTransferToken);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceControlViewHost.java"
            line="602"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getInputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `requestEmbeddedFocus` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                    mSurfacePackage.getInputTransferToken(), gainFocus);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/SurfaceView.java"
            line="2155"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `uptimeMillis$ravenwood` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="        return uptimeNanos() / 1_000_000;"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/SystemClock.java"
            line="202"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `elapsedRealtimeNanos$ravenwood` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="        return uptimeNanos() + (DateUtils.HOUR_IN_MILLIS * 1_000_000);"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/SystemClock.java"
            line="276"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/health/SystemHealthManager.java"
            line="231"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="@FlaggedApi should specify an actual flag constant; raw strings are discouraged (and more importantly, **not enforced**)"
        errorLine1="    @FlaggedApi(&quot;com.android.server.power.optimization.power_monitor_api&quot;)"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/health/SystemHealthManager.java"
            line="287"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `null()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `setupVirtualDeviceListener` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="        mVirtualDeviceListener = new VirtualDeviceManager.VirtualDeviceListener() {"
        errorLine2="                                 ^">
        <location
            file="frameworks/base/core/java/android/hardware/SystemSensorManager.java"
            line="612"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `setupVirtualDeviceListener` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="        mVirtualDeviceListener = new VirtualDeviceManager.VirtualDeviceListener() {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/SystemSensorManager.java"
            line="612"
            column="38"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `registerVirtualDeviceListener()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `setupVirtualDeviceListener` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="        mVdm.registerVirtualDeviceListener(mContext.getMainExecutor(), mVirtualDeviceListener);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/SystemSensorManager.java"
            line="627"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `SecurityStateManager` is a flagged API and should be inside an `if (Flags.securityStateService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SECURITY_STATE_SERVICE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.SECURITY_STATE_SERVICE, SecurityStateManager.class,"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="676"
            column="57"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SECURITY_STATE_SERVICE` is a flagged API and should be inside an `if (Flags.securityStateService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SECURITY_STATE_SERVICE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.SECURITY_STATE_SERVICE, SecurityStateManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="676"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SECURITY_STATE_SERVICE` is a flagged API and should be inside an `if (Flags.securityStateService())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_SECURITY_STATE_SERVICE) to transfer requirement to caller`)"
        errorLine1="                                Context.SECURITY_STATE_SERVICE);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="682"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `SecurityStateManager()` is a flagged API and should be inside an `if (Flags.securityStateService())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_SECURITY_STATE_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        return new SecurityStateManager(service);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="684"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.TELEPHONY_REGISTRY_SERVICE, TelephonyRegistryManager.class,"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="743"
            column="61"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `TelephonyRegistryManager()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                    return new TelephonyRegistryManager(ctx);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="747"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TvAdManager` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.TV_AD_SERVICE, TvAdManager.class,"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1019"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TV_AD_SERVICE` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.TV_AD_SERVICE, TvAdManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1019"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TV_AD_SERVICE` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                                ServiceManager.getServiceOrThrow(Context.TV_AD_SERVICE);"
        errorLine2="                                                                         ~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1025"
            column="74"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `TvAdManager()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                        return new TvAdManager(service, ctx.getUserId());"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1028"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `PersistentDataBlockManager` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.PERSISTENT_DATA_BLOCK_SERVICE, PersistentDataBlockManager.class,"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1067"
            column="64"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DATA_BLOCK_SERVICE` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.PERSISTENT_DATA_BLOCK_SERVICE, PersistentDataBlockManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1067"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DATA_BLOCK_SERVICE` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)"
        errorLine1="                IBinder b = ServiceManager.getServiceOrThrow(Context.PERSISTENT_DATA_BLOCK_SERVICE);"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1071"
            column="70"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `PersistentDataBlockManager()` is a flagged API and should be inside an `if (Flags.frpEnforcement())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_FRP_ENFORCEMENT) to transfer requirement to caller`)"
        errorLine1="                    return new PersistentDataBlockManager(persistentDataBlockService);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1075"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `ContextualSearchManager` is a flagged API and should be inside an `if (Flags.enableService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_SERVICE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.CONTEXTUAL_SEARCH_SERVICE, ContextualSearchManager.class,"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1319"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTEXTUAL_SEARCH_SERVICE` is a flagged API and should be inside an `if (Flags.enableService())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_SERVICE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.CONTEXTUAL_SEARCH_SERVICE, ContextualSearchManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1319"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTEXTUAL_SEARCH_SERVICE` is a flagged API and should be inside an `if (Flags.enableService())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        IBinder b = ServiceManager.getService(Context.CONTEXTUAL_SEARCH_SERVICE);"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1324"
            column="71"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `ContextualSearchManager()` is a flagged API and should be inside an `if (Flags.enableService())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_SERVICE) to transfer requirement to caller`)"
        errorLine1="                        return b == null ? null : new ContextualSearchManager();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1325"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `DeviceStateManager` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.DEVICE_STATE_SERVICE, DeviceStateManager.class,"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1564"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `DeviceStateManager()` is a flagged API and should be inside an `if (Flags.deviceStatePropertyApi())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_DEVICE_STATE_PROPERTY_API) to transfer requirement to caller`)"
        errorLine1="                        return new DeviceStateManager();"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1568"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `OnDeviceIntelligenceManager` is a flagged API and should be inside an `if (Flags.enableOnDeviceIntelligence())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_ON_DEVICE_INTELLIGENCE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.ON_DEVICE_INTELLIGENCE_SERVICE, OnDeviceIntelligenceManager.class,"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1638"
            column="65"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ON_DEVICE_INTELLIGENCE_SERVICE` is a flagged API and should be inside an `if (Flags.enableOnDeviceIntelligence())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_ENABLE_ON_DEVICE_INTELLIGENCE) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.ON_DEVICE_INTELLIGENCE_SERVICE, OnDeviceIntelligenceManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1638"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `ON_DEVICE_INTELLIGENCE_SERVICE` is a flagged API and should be inside an `if (Flags.enableOnDeviceIntelligence())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_ON_DEVICE_INTELLIGENCE) to transfer requirement to caller`)"
        errorLine1="                                Context.ON_DEVICE_INTELLIGENCE_SERVICE);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1644"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `OnDeviceIntelligenceManager()` is a flagged API and should be inside an `if (Flags.enableOnDeviceIntelligence())` check (or annotate the surrounding method `createService` with `@FlaggedApi(Flags.FLAG_ENABLE_ON_DEVICE_INTELLIGENCE) to transfer requirement to caller`)"
        errorLine1="                        return new OnDeviceIntelligenceManager(ctx.getOuterContext(), manager);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1647"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `E2eeContactKeysManager` is a flagged API and should be inside an `if (Flags.userKeys())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_USER_KEYS) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.CONTACT_KEYS_SERVICE, E2eeContactKeysManager.class,"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1670"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTACT_KEYS_SERVICE` is a flagged API and should be inside an `if (Flags.userKeys())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_USER_KEYS) to transfer requirement to caller`)"
        errorLine1="        registerService(Context.CONTACT_KEYS_SERVICE, E2eeContactKeysManager.class,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/SystemServiceRegistry.java"
            line="1670"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addView()` is a flagged API and should be inside an `if (Flags.enableArrowIconOnHoverWhenClickable())` check (or annotate the surrounding method `addTab` with `@FlaggedApi(Flags.FLAG_ENABLE_ARROW_ICON_ON_HOVER_WHEN_CLICKABLE) to transfer requirement to caller`)"
        errorLine1="        mTabWidget.addView(tabIndicator);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/widget/TabHost.java"
            line="256"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `onSimultaneousCallingStateChanged` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="                    (SimultaneousCellularCallingSupportListener) mTelephonyCallbackWeakRef.get();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/telephony/TelephonyCallback.java"
            line="2065"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onSimultaneousCellularCallingSubscriptionsChanged()` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `onSimultaneousCallingStateChanged` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="                            () -> listener.onSimultaneousCellularCallingSubscriptionsChanged("
        errorLine2="                                  ^">
        <location
            file="frameworks/base/core/java/android/telephony/TelephonyCallback.java"
            line="2070"
            column="35"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `SatelliteManager` is a flagged API and should be inside an `if (Flags.oemEnabledSatelliteFlag())` check (or annotate the surrounding method `registerServiceWrappers` with `@FlaggedApi(Flags.FLAG_OEM_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                SatelliteManager.class,"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyFrameworkInitializer.java"
            line="146"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `SatelliteManager()` is a flagged API and should be inside an `if (Flags.oemEnabledSatelliteFlag())` check (or annotate the surrounding method `registerServiceWrappers` with `@FlaggedApi(Flags.FLAG_OEM_ENABLED_SATELLITE_FLAG) to transfer requirement to caller`)"
        errorLine1="                        ? new SatelliteManager(context) : null"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyFrameworkInitializer.java"
            line="148"
            column="27"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `listen` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="                (TelephonyRegistryManager)"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="6726"
            column="18"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `listenFromListener()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `listen` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            telephonyRegistry.listenFromListener(mSubId, renounceFineLocationAccess,"
        errorLine2="            ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="6734"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerTelephonyCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr = (TelephonyRegistryManager)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="17689"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `registerTelephonyCallback()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerTelephonyCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            mTelephonyRegistryMgr.registerTelephonyCallback("
        errorLine2="            ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="17692"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterTelephonyCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr = mContext.getSystemService(TelephonyRegistryManager.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="17717"
            column="59"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `unregisterTelephonyCallback()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterTelephonyCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="            mTelephonyRegistryMgr.unregisterTelephonyCallback(mSubId, getOpPackageName(),"
        errorLine2="            ^">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="17719"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierPrivilegesCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr = mContext.getSystemService(TelephonyRegistryManager.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="18688"
            column="59"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `addCarrierPrivilegesCallback()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `registerCarrierPrivilegesCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr.addCarrierPrivilegesCallback(logicalSlotIndex, executor, callback);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="18692"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Class `TelephonyRegistryManager` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierPrivilegesCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr = mContext.getSystemService(TelephonyRegistryManager.class);"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="18708"
            column="59"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `removeCarrierPrivilegesCallback()` is a flagged API and should be inside an `if (Flags.telecomResolveHiddenDependencies())` check (or annotate the surrounding method `unregisterCarrierPrivilegesCallback` with `@FlaggedApi(Flags.FLAG_TELECOM_RESOLVE_HIDDEN_DEPENDENCIES) to transfer requirement to caller`)"
        errorLine1="        mTelephonyRegistryMgr.removeCarrierPrivilegesCallback(callback);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/telephony/java/android/telephony/TelephonyManager.java"
            line="18712"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="This is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `getEventsFromCallback` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="                instanceof TelephonyCallback.SimultaneousCellularCallingSupportListener) {"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/telephony/TelephonyRegistryManager.java"
            line="1241"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `EVENT_SIMULTANEOUS_CELLULAR_CALLING_SUBSCRIPTIONS_CHANGED` is a flagged API and should be inside an `if (Flags.simultaneousCallingIndications())` check (or annotate the surrounding method `getEventsFromCallback` with `@FlaggedApi(Flags.FLAG_SIMULTANEOUS_CALLING_INDICATIONS) to transfer requirement to caller`)"
        errorLine1="                    TelephonyCallback.EVENT_SIMULTANEOUS_CELLULAR_CALLING_SUBSCRIPTIONS_CHANGED);"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/telephony/TelephonyRegistryManager.java"
            line="1243"
            column="39"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            return Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="342"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            return Paint.TEXT_RUN_FLAG_LEFT_EDGE | Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="342"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                runFlag |= Paint.TEXT_RUN_FLAG_LEFT_EDGE;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="359"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                runFlag |= Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="361"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                runFlag |= Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="366"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `calculateRunFlag` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                runFlag |= Paint.TEXT_RUN_FLAG_LEFT_EDGE;"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="368"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_LEFT_EDGE) != 0) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="394"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                    localRunFlag &amp;= ~Paint.TEXT_RUN_FLAG_LEFT_EDGE;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="398"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                    localRunFlag &amp;= ~Paint.TEXT_RUN_FLAG_LEFT_EDGE;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="403"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_RIGHT_EDGE) != 0) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="407"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                    localRunFlag &amp;= ~Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="411"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `resolveRunFlagForSubSequence` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="                    localRunFlag &amp;= ~Paint.TEXT_RUN_FLAG_RIGHT_EDGE;"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="416"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_LEFT_EDGE) == Paint.TEXT_RUN_FLAG_LEFT_EDGE) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1345"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_LEFT_EDGE) == Paint.TEXT_RUN_FLAG_LEFT_EDGE) {"
        errorLine2="                                                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1345"
            column="64"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            wp.setFlags(wp.getFlags() | Paint.TEXT_RUN_FLAG_LEFT_EDGE);"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1346"
            column="47"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_LEFT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            wp.setFlags(wp.getFlags() &amp; ~Paint.TEXT_RUN_FLAG_LEFT_EDGE);"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1348"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_RIGHT_EDGE) == Paint.TEXT_RUN_FLAG_RIGHT_EDGE) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1350"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="        if ((runFlag &amp; Paint.TEXT_RUN_FLAG_RIGHT_EDGE) == Paint.TEXT_RUN_FLAG_RIGHT_EDGE) {"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1350"
            column="65"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            wp.setFlags(wp.getFlags() | Paint.TEXT_RUN_FLAG_RIGHT_EDGE);"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1351"
            column="47"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TEXT_RUN_FLAG_RIGHT_EDGE` is a flagged API and should be inside an `if (Flags.letterSpacingJustification())` check (or annotate the surrounding method `handleText` with `@FlaggedApi(Flags.FLAG_LETTER_SPACING_JUSTIFICATION) to transfer requirement to caller`)"
        errorLine1="            wp.setFlags(wp.getFlags() &amp; ~Paint.TEXT_RUN_FLAG_RIGHT_EDGE);"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextLine.java"
            line="1353"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CREATOR` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `createFromParcel` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="                    span = LineBreakConfigSpan.CREATOR.createFromParcel(p);"
        errorLine2="                                               ~~~~~~~">
        <location
            file="frameworks/base/core/java/android/text/TextUtils.java"
            line="1023"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFontMetricsForLocale()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `getResolvedMinimumFontMetrics` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="        mTextPaint.getFontMetricsForLocale(mLocalePreferredFontMetrics);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="10860"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `makeNewLayout` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="                StaticLayout.Builder builder = StaticLayout.Builder.obtain(mHint, 0,"
        errorLine2="                                               ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="10965"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `makeNewLayout` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="                StaticLayout.Builder builder = StaticLayout.Builder.obtain(mHint, 0,"
        errorLine2="                                               ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="10965"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setLineBreakConfig()` is a flagged API and should be inside an `if (Flags.noBreakNoHyphenationSpan())` check (or annotate the surrounding method `makeSingleLayout` with `@FlaggedApi(Flags.FLAG_NO_BREAK_NO_HYPHENATION_SPAN) to transfer requirement to caller`)"
        errorLine1="            final DynamicLayout.Builder builder = DynamicLayout.Builder.obtain(mText, mTextPaint,"
        errorLine2="                                                  ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11029"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `makeSingleLayout` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="            final DynamicLayout.Builder builder = DynamicLayout.Builder.obtain(mText, mTextPaint,"
        errorLine2="                                                  ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11029"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `makeSingleLayout` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            final DynamicLayout.Builder builder = DynamicLayout.Builder.obtain(mText, mTextPaint,"
        errorLine2="                                                  ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11029"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `makeSingleLayout` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="            StaticLayout.Builder builder = StaticLayout.Builder.obtain(mTransformed,"
        errorLine2="                                           ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11115"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `makeSingleLayout` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            StaticLayout.Builder builder = StaticLayout.Builder.obtain(mTransformed,"
        errorLine2="                                           ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11115"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `computeDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `desired` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="            max = Math.max(max, layout.computeDrawingBoundingBox().width());"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11181"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDrawingBoundingBox()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `onMeasure` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="                    RectF bbox = boring.getDrawingBoundingBox();"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11275"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setMinimumFontMetrics()` is a flagged API and should be inside an `if (Flags.fixLineHeightForLocale())` check (or annotate the surrounding method `suggestedSizeFitsInSpace` with `@FlaggedApi(Flags.FLAG_FIX_LINE_HEIGHT_FOR_LOCALE) to transfer requirement to caller`)"
        errorLine1="        layoutBuilder.setAlignment(getLayoutAlignment())"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11502"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setUseBoundsForWidth()` is a flagged API and should be inside an `if (Flags.useBoundsForWidth())` check (or annotate the surrounding method `suggestedSizeFitsInSpace` with `@FlaggedApi(Flags.FLAG_USE_BOUNDS_FOR_WIDTH) to transfer requirement to caller`)"
        errorLine1="        layoutBuilder.setAlignment(getLayoutAlignment())"
        errorLine2="        ^">
        <location
            file="frameworks/base/core/java/android/widget/TextView.java"
            line="11502"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONFIG_FORCE_ANALOG_FM` is a flagged API and should be inside an `if (Flags.hdRadioImproved())` check (or annotate the surrounding method `convertForceAnalogConfigFlag` with `@FlaggedApi(Flags.FLAG_HD_RADIO_IMPROVED) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; mTuner.isConfigFlagSupported(RadioManager.CONFIG_FORCE_ANALOG_FM)) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/radio/TunerAdapter.java"
            line="427"
            column="62"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `notifyTvInputSessionData()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `run` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="                        mSession.getAdSession().notifyTvInputSessionData(type, data);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/TvInputManager.java"
            line="1498"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onStopPlayback()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `stopPlayback` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="            onStopPlayback(mode);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/TvInputService.java"
            line="2113"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onResumePlayback()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `resumePlayback` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="            onResumePlayback();"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/TvInputService.java"
            line="2120"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onTvAdSessionData()` is a flagged API and should be inside an `if (Flags.enableAdServiceFw())` check (or annotate the surrounding method `notifyTvAdSessionData` with `@FlaggedApi(Flags.FLAG_ENABLE_AD_SERVICE_FW) to transfer requirement to caller`)"
        errorLine1="            onTvAdSessionData(type, data);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/TvInputService.java"
            line="2218"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onCertificate()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `sendCertificate` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="            onCertificate(host, port, cert);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/interactive/TvInteractiveAppService.java"
            line="1824"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onVideoFreezeUpdated()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `notifyVideoFreezeUpdated` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="            onVideoFreezeUpdated(isFrozen);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/interactive/TvInteractiveAppService.java"
            line="1889"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onSelectedTrackInfo()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `sendSelectedTrackInfo` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="            onSelectedTrackInfo(tracks);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/interactive/TvInteractiveAppService.java"
            line="1945"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onRequestSelectedTrackInfo()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `onRequestSelectedTrackInfo` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="                                mCallback.onRequestSelectedTrackInfo(mIAppServiceId);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/interactive/TvInteractiveAppView.java"
            line="1822"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onVideoFreezeUpdated()` is a flagged API and should be inside an `if (Flags.tiafVApis())` check (or annotate the surrounding method `onVideoFreezeUpdated` with `@FlaggedApi(Flags.FLAG_TIAF_V_APIS) to transfer requirement to caller`)"
        errorLine1="                mCallback.onVideoFreezeUpdated(mInputId, isFrozen);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/media/java/android/media/tv/TvView.java"
            line="1779"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `convertSpToDp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `applyDimension` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)"
        errorLine1="                            metrics.fontScaleConverter.convertSpToDp(value),"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/util/TypedValue.java"
            line="433"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `convertDpToSp()` is a flagged API and should be inside an `if (Flags.fontScaleConverterPublic())` check (or annotate the surrounding method `deriveDimension` with `@FlaggedApi(Flags.FLAG_FONT_SCALE_CONVERTER_PUBLIC) to transfer requirement to caller`)"
        errorLine1="                    return metrics.fontScaleConverter.convertDpToSp(dpValue);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/util/TypedValue.java"
            line="479"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `grantRuntimePermission` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT, userId);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/UiAutomationConnection.java"
            line="367"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `PERSISTENT_DEVICE_ID_DEFAULT` is a flagged API and should be inside an `if (Flags.persistentDeviceIdApi())` check (or annotate the surrounding method `revokeRuntimePermission` with `@FlaggedApi(Flags.FLAG_PERSISTENT_DEVICE_ID_API) to transfer requirement to caller`)"
        errorLine1="                    VirtualDeviceManager.PERSISTENT_DEVICE_ID_DEFAULT, userId, null);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/app/UiAutomationConnection.java"
            line="387"
            column="42"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isResumed()` is a flagged API and should be inside an `if (Flags.enableNfcMainline())` check (or annotate the surrounding method `dump` with `@FlaggedApi(Flags.FLAG_ENABLE_NFC_MAINLINE) to transfer requirement to caller`)"
        errorLine1="        pw.print(pfx); pw.print(&quot;resumed: &quot;); pw.println(mActivity.isResumed());"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/translation/UiTranslationController.java"
            line="219"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `COMPLIANCE_WARNING_INPUT_POWER_LIMITED` is a flagged API and should be inside an `if (Flags.enableUsbDataComplianceWarning())` check (or annotate the surrounding method `complianceWarningsToString` with `@FlaggedApi(Flags.FLAG_ENABLE_USB_DATA_COMPLIANCE_WARNING) to transfer requirement to caller`)"
        errorLine1="                    case UsbPortStatus.COMPLIANCE_WARNING_INPUT_POWER_LIMITED:"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/usb/UsbPort.java"
            line="813"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `COMPLIANCE_WARNING_MISSING_DATA_LINES` is a flagged API and should be inside an `if (Flags.enableUsbDataComplianceWarning())` check (or annotate the surrounding method `complianceWarningsToString` with `@FlaggedApi(Flags.FLAG_ENABLE_USB_DATA_COMPLIANCE_WARNING) to transfer requirement to caller`)"
        errorLine1="                    case UsbPortStatus.COMPLIANCE_WARNING_MISSING_DATA_LINES:"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/usb/UsbPort.java"
            line="816"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `COMPLIANCE_WARNING_ENUMERATION_FAIL` is a flagged API and should be inside an `if (Flags.enableUsbDataComplianceWarning())` check (or annotate the surrounding method `complianceWarningsToString` with `@FlaggedApi(Flags.FLAG_ENABLE_USB_DATA_COMPLIANCE_WARNING) to transfer requirement to caller`)"
        errorLine1="                    case UsbPortStatus.COMPLIANCE_WARNING_ENUMERATION_FAIL:"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/usb/UsbPort.java"
            line="819"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `COMPLIANCE_WARNING_FLAKY_CONNECTION` is a flagged API and should be inside an `if (Flags.enableUsbDataComplianceWarning())` check (or annotate the surrounding method `complianceWarningsToString` with `@FlaggedApi(Flags.FLAG_ENABLE_USB_DATA_COMPLIANCE_WARNING) to transfer requirement to caller`)"
        errorLine1="                    case UsbPortStatus.COMPLIANCE_WARNING_FLAKY_CONNECTION:"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/usb/UsbPort.java"
            line="822"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `COMPLIANCE_WARNING_UNRELIABLE_IO` is a flagged API and should be inside an `if (Flags.enableUsbDataComplianceWarning())` check (or annotate the surrounding method `complianceWarningsToString` with `@FlaggedApi(Flags.FLAG_ENABLE_USB_DATA_COMPLIANCE_WARNING) to transfer requirement to caller`)"
        errorLine1="                    case UsbPortStatus.COMPLIANCE_WARNING_UNRELIABLE_IO:"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/hardware/usb/UsbPort.java"
            line="825"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `USER_TYPE_PROFILE_MANAGED` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `getDefaultUserType` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="            case FLAG_MANAGED_PROFILE: return UserManager.USER_TYPE_PROFILE_MANAGED;"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/content/pm/UserInfo.java"
            line="350"
            column="59"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `USER_TYPE_PROFILE_MANAGED` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `isUserTypeManagedProfile` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="        return USER_TYPE_PROFILE_MANAGED.equals(userType);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/UserManager.java"
            line="3063"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `USER_TYPE_PROFILE_CLONE` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `isUserTypeCloneProfile` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="        return USER_TYPE_PROFILE_CLONE.equals(userType);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/UserManager.java"
            line="3100"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `USER_TYPE_PROFILE_PRIVATE` is a flagged API and should be inside an `if (Flags.allowPrivateProfile())` check (or annotate the surrounding method `isUserTypePrivateProfile` with `@FlaggedApi(Flags.FLAG_ALLOW_PRIVATE_PROFILE) to transfer requirement to caller`)"
        errorLine1="        return USER_TYPE_PROFILE_PRIVATE.equals(userType);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/os/UserManager.java"
            line="3121"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_SENSITIVITY_AUTO` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="            (CONTENT_SENSITIVITY_AUTO | CONTENT_SENSITIVITY_SENSITIVE"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="3929"
            column="14"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_SENSITIVITY_SENSITIVE` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="            (CONTENT_SENSITIVITY_AUTO | CONTENT_SENSITIVITY_SENSITIVE"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="3929"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_SENSITIVITY_NOT_SENSITIVE` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="                    | CONTENT_SENSITIVITY_NOT_SENSITIVE) &lt;&lt; PFLAG4_CONTENT_SENSITIVITY_SHIFT;"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="3930"
            column="23"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUESTED_FRAME_RATE_CATEGORY_DEFAULT` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="    private float mPreferredFrameRate = REQUESTED_FRAME_RATE_CATEGORY_DEFAULT;"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="5784"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_SENSITIVITY_AUTO` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `View` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="                    setContentSensitivity(a.getInt(attr, CONTENT_SENSITIVITY_AUTO));"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="6528"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setContentSensitivity()` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `View` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="                    setContentSensitivity(a.getInt(attr, CONTENT_SENSITIVITY_AUTO));"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="6528"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setPendingCredentialRequest()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `onProvideStructure` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="                structure.setPendingCredentialRequest("
        errorLine2="                ^">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="9665"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPendingCredentialCallback()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `onGetCredentialResponse` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="        if (getPendingCredentialCallback() == null) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="10070"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPendingCredentialCallback()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `onGetCredentialResponse` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="        getPendingCredentialCallback().onResult(response);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="10074"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPendingCredentialCallback()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `onGetCredentialException` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="        if (getPendingCredentialCallback() == null) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="10081"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPendingCredentialCallback()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `onGetCredentialException` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="        getPendingCredentialCallback().onError(new GetCredentialException(errorType, errorMsg));"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="10085"
            column="9"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isContentSensitive()` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `updateSensitiveViewsCountIfNeeded` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="        if (appeared &amp;&amp; isContentSensitive()) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="10597"
            column="25"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `setPendingCredentialRequest()` is a flagged API and should be inside an `if (Flags.autofillCredmanDevIntegration())` check (or annotate the surrounding method `populateVirtualStructure` with `@FlaggedApi(Flags.FLAG_AUTOFILL_CREDMAN_DEV_INTEGRATION) to transfer requirement to caller`)"
        errorLine1="            structure.setPendingCredentialRequest("
        errorLine2="            ^">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="11106"
            column="13"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `CONTENT_SENSITIVITY_AUTO` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `setAutofillHints` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="            if (getContentSensitivity() == CONTENT_SENSITIVITY_AUTO) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="13689"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getContentSensitivity()` is a flagged API and should be inside an `if (Flags.sensitiveContentAppProtectionApi())` check (or annotate the surrounding method `setAutofillHints` with `@FlaggedApi(Flags.FLAG_SENSITIVE_CONTENT_APP_PROTECTION_API) to transfer requirement to caller`)"
        errorLine1="            if (getContentSensitivity() == CONTENT_SENSITIVITY_AUTO) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="13689"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `DRAG_FLAG_GLOBAL_SAME_APPLICATION` is a flagged API and should be inside an `if (Flags.delegateUnhandledDrags())` check (or annotate the surrounding method `startDragAndDrop` with `@FlaggedApi(Flags.FLAG_DELEGATE_UNHANDLED_DRAGS) to transfer requirement to caller`)"
        errorLine1="        if ((flags &amp; DRAG_FLAG_GLOBAL) != 0 &amp;&amp; ((flags &amp; DRAG_FLAG_GLOBAL_SAME_APPLICATION) != 0)) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="29019"
            column="58"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getIntentSender()` is a flagged API and should be inside an `if (Flags.delegateUnhandledDrags())` check (or annotate the surrounding method `hasActivityPendingIntents` with `@FlaggedApi(Flags.FLAG_DELEGATE_UNHANDLED_DRAGS) to transfer requirement to caller`)"
        errorLine1="            if (item.getIntentSender() != null) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="29187"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getIntentSender()` is a flagged API and should be inside an `if (Flags.delegateUnhandledDrags())` check (or annotate the surrounding method `hasActivityPendingIntents` with `@FlaggedApi(Flags.FLAG_DELEGATE_UNHANDLED_DRAGS) to transfer requirement to caller`)"
        errorLine1="                final PendingIntent pi = new PendingIntent(item.getIntentSender().getTarget());"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="29188"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getIntentSender()` is a flagged API and should be inside an `if (Flags.delegateUnhandledDrags())` check (or annotate the surrounding method `cleanUpPendingIntents` with `@FlaggedApi(Flags.FLAG_DELEGATE_UNHANDLED_DRAGS) to transfer requirement to caller`)"
        errorLine1="            if (item.getIntentSender() != null) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="29205"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getIntentSender()` is a flagged API and should be inside an `if (Flags.delegateUnhandledDrags())` check (or annotate the surrounding method `cleanUpPendingIntents` with `@FlaggedApi(Flags.FLAG_DELEGATE_UNHANDLED_DRAGS) to transfer requirement to caller`)"
        errorLine1="                final PendingIntent pi = new PendingIntent(item.getIntentSender().getTarget());"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="29206"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUESTED_FRAME_RATE_CATEGORY_NO_PREFERENCE` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `votePreferredFrameRate` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="                    case (int) REQUESTED_FRAME_RATE_CATEGORY_NO_PREFERENCE ->"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="33991"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUESTED_FRAME_RATE_CATEGORY_LOW` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `votePreferredFrameRate` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="                    case (int) REQUESTED_FRAME_RATE_CATEGORY_LOW ->"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="33994"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUESTED_FRAME_RATE_CATEGORY_NORMAL` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `votePreferredFrameRate` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="                    case (int) REQUESTED_FRAME_RATE_CATEGORY_NORMAL ->"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="33997"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUESTED_FRAME_RATE_CATEGORY_HIGH` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `votePreferredFrameRate` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="                    case (int) REQUESTED_FRAME_RATE_CATEGORY_HIGH ->"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/View.java"
            line="34000"
            column="32"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDesiredHdrHeadroom()` is a flagged API and should be inside an `if (Flags.limitedHdr())` check (or annotate the surrounding method `enableHardwareAcceleration` with `@FlaggedApi(Flags.FLAG_LIMITED_HDR) to transfer requirement to caller`)"
        errorLine1="                updateColorModeIfNeeded(attrs.getColorMode(), attrs.getDesiredHdrHeadroom());"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="2022"
            column="63"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getDesiredHdrHeadroom()` is a flagged API and should be inside an `if (Flags.limitedHdr())` check (or annotate the surrounding method `performTraversals` with `@FlaggedApi(Flags.FLAG_LIMITED_HDR) to transfer requirement to caller`)"
        errorLine1="                updateColorModeIfNeeded(lp.getColorMode(), lp.getDesiredHdrHeadroom());"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="3748"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)"
        errorLine1="                mChoreographer.getFrameTimeNanos() / TimeUtils.NANOS_PER_MS;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="5597"
            column="17"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `uptimeNanos()` is a flagged API and should be inside an `if (Flags.adpfGpuReportActualWorkDuration())` check (or annotate the surrounding method `draw` with `@FlaggedApi(Flags.FLAG_ADPF_GPU_REPORT_ACTUAL_WORK_DURATION) to transfer requirement to caller`)"
        errorLine1="                long timeNs = SystemClock.uptimeNanos();"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="5658"
            column="31"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFrameTimeNanos()` is a flagged API and should be inside an `if (Flags.expectedPresentationTimeApi())` check (or annotate the surrounding method `run` with `@FlaggedApi(Flags.FLAG_EXPECTED_PRESENTATION_TIME_API) to transfer requirement to caller`)"
        errorLine1="                if (doConsumeBatchedInput(mChoreographer.getFrameTimeNanos())) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="10449"
            column="43"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `getInputTransferToken` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="        return new InputTransferToken(inputToken);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="11736"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getFrameRateBoostOnTouchEnabled()` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `getFrameRateBoostOnTouchEnabled` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="        return mWindowAttributes.getFrameRateBoostOnTouchEnabled();"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="13161"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `isFrameRatePowerSavingsBalanced()` is a flagged API and should be inside an `if (Flags.toolkitSetFrameRateReadOnly())` check (or annotate the surrounding method `isFrameRatePowerSavingsBalanced` with `@FlaggedApi(Flags.FLAG_TOOLKIT_SET_FRAME_RATE_READ_ONLY) to transfer requirement to caller`)"
        errorLine1="            return mWindowAttributes.isFrameRatePowerSavingsBalanced();"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/ViewRootImpl.java"
            line="13193"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `hasCustomCameraSupport` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)"
        errorLine1="            return mVirtualDevice.getDevicePolicy(POLICY_TYPE_CAMERA) == DEVICE_POLICY_CUSTOM;"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDevice.java"
            line="200"
            column="51"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `VirtualStylus()` is a flagged API and should be inside an `if (Flags.virtualStylus())` check (or annotate the surrounding method `createVirtualStylus` with `@FlaggedApi(Flags.FLAG_VIRTUAL_STYLUS) to transfer requirement to caller`)"
        errorLine1="            return new VirtualStylus(config, mVirtualDevice, token);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceInternal.java"
            line="332"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `VirtualCamera()` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `createVirtualCamera` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)"
        errorLine1="            return new VirtualCamera(mVirtualDevice, mVirtualDevice.getVirtualCameraId(config),"
        errorLine2="                   ^">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceInternal.java"
            line="381"
            column="20"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onVirtualDeviceCreated()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `onVirtualDeviceCreated` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="                mExecutor.execute(() -> mListener.onVirtualDeviceCreated(deviceId));"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceManager.java"
            line="1225"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onVirtualDeviceClosed()` is a flagged API and should be inside an `if (Flags.vdmPublicApis())` check (or annotate the surrounding method `onVirtualDeviceClosed` with `@FlaggedApi(Flags.FLAG_VDM_PUBLIC_APIS) to transfer requirement to caller`)"
        errorLine1="                mExecutor.execute(() -> mListener.onVirtualDeviceClosed(deviceId));"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceManager.java"
            line="1235"
            column="41"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `POLICY_TYPE_CLIPBOARD` is a flagged API and should be inside an `if (Flags.crossDeviceClipboard())` check (or annotate the surrounding method `build` with `@FlaggedApi(Flags.FLAG_CROSS_DEVICE_CLIPBOARD) to transfer requirement to caller`)"
        errorLine1="                mDevicePolicies.delete(POLICY_TYPE_CLIPBOARD);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceParams.java"
            line="1170"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `POLICY_TYPE_CAMERA` is a flagged API and should be inside an `if (Flags.virtualCamera())` check (or annotate the surrounding method `build` with `@FlaggedApi(Flags.FLAG_VIRTUAL_CAMERA) to transfer requirement to caller`)"
        errorLine1="                mDevicePolicies.delete(POLICY_TYPE_CAMERA);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/companion/virtual/VirtualDeviceParams.java"
            line="1174"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onSecureConnectionProvided()` is a flagged API and should be inside an `if (Flags.enableProvideWearableConnectionApi())` check (or annotate the surrounding method `provideSecureConnection` with `@FlaggedApi(Flags.FLAG_ENABLE_PROVIDE_WEARABLE_CONNECTION_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onSecureConnectionProvided("
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="142"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onDataRequestObserverRegistered()` is a flagged API and should be inside an `if (Flags.enableDataRequestObserverApi())` check (or annotate the surrounding method `registerDataRequestObserver` with `@FlaggedApi(Flags.FLAG_ENABLE_DATA_REQUEST_OBSERVER_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onDataRequestObserverRegistered("
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="193"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onDataRequestObserverUnregistered()` is a flagged API and should be inside an `if (Flags.enableDataRequestObserverApi())` check (or annotate the surrounding method `unregisterDataRequestObserver` with `@FlaggedApi(Flags.FLAG_ENABLE_DATA_REQUEST_OBSERVER_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onDataRequestObserverUnregistered("
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="217"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onStartHotwordRecognition()` is a flagged API and should be inside an `if (Flags.enableHotwordWearableSensingApi())` check (or annotate the surrounding method `startHotwordRecognition` with `@FlaggedApi(Flags.FLAG_ENABLE_HOTWORD_WEARABLE_SENSING_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onStartHotwordRecognition("
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="237"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onStopHotwordRecognition()` is a flagged API and should be inside an `if (Flags.enableHotwordWearableSensingApi())` check (or annotate the surrounding method `stopHotwordRecognition` with `@FlaggedApi(Flags.FLAG_ENABLE_HOTWORD_WEARABLE_SENSING_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onStopHotwordRecognition(statusConsumer);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="250"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onValidatedByHotwordDetectionService()` is a flagged API and should be inside an `if (Flags.enableHotwordWearableSensingApi())` check (or annotate the surrounding method `onValidatedByHotwordDetectionService` with `@FlaggedApi(Flags.FLAG_ENABLE_HOTWORD_WEARABLE_SENSING_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onValidatedByHotwordDetectionService();"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="256"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onStopHotwordAudioStream()` is a flagged API and should be inside an `if (Flags.enableHotwordWearableSensingApi())` check (or annotate the surrounding method `stopActiveHotwordAudio` with `@FlaggedApi(Flags.FLAG_ENABLE_HOTWORD_WEARABLE_SENSING_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingService.this.onStopHotwordAudioStream();"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="262"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATUS_UNSUPPORTED_OPERATION` is a flagged API and should be inside an `if (Flags.enableUnsupportedOperationStatusCode())` check (or annotate the surrounding method `onSecureConnectionProvided` with `@FlaggedApi(Flags.FLAG_ENABLE_UNSUPPORTED_OPERATION_STATUS_CODE) to transfer requirement to caller`)"
        errorLine1="        statusConsumer.accept(WearableSensingManager.STATUS_UNSUPPORTED_OPERATION);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="361"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATUS_UNSUPPORTED_OPERATION` is a flagged API and should be inside an `if (Flags.enableUnsupportedOperationStatusCode())` check (or annotate the surrounding method `onDataRequestObserverRegistered` with `@FlaggedApi(Flags.FLAG_ENABLE_UNSUPPORTED_OPERATION_STATUS_CODE) to transfer requirement to caller`)"
        errorLine1="        statusConsumer.accept(WearableSensingManager.STATUS_UNSUPPORTED_OPERATION);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="429"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `STATUS_UNSUPPORTED_OPERATION` is a flagged API and should be inside an `if (Flags.enableUnsupportedOperationStatusCode())` check (or annotate the surrounding method `onDataRequestObserverUnregistered` with `@FlaggedApi(Flags.FLAG_ENABLE_UNSUPPORTED_OPERATION_STATUS_CODE) to transfer requirement to caller`)"
        errorLine1="        statusConsumer.accept(WearableSensingManager.STATUS_UNSUPPORTED_OPERATION);"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="457"
            column="54"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUEST_BUNDLE_KEY` is a flagged API and should be inside an `if (Flags.enableDataRequestObserverApi())` check (or annotate the surrounding method `createDataRequester` with `@FlaggedApi(Flags.FLAG_ENABLE_DATA_REQUEST_OBSERVER_API) to transfer requirement to caller`)"
        errorLine1="            bundle.putParcelable(WearableSensingDataRequest.REQUEST_BUNDLE_KEY, request);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="673"
            column="61"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `REQUEST_STATUS_CALLBACK_BUNDLE_KEY` is a flagged API and should be inside an `if (Flags.enableDataRequestObserverApi())` check (or annotate the surrounding method `createDataRequester` with `@FlaggedApi(Flags.FLAG_ENABLE_DATA_REQUEST_OBSERVER_API) to transfer requirement to caller`)"
        errorLine1="                    WearableSensingDataRequest.REQUEST_STATUS_CALLBACK_BUNDLE_KEY,"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/wearable/WearableSensingService.java"
            line="682"
            column="48"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `loadWebViewNativeLibraryFromPackage` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="        if (response.status != LIBLOAD_SUCCESS"
        errorLine2="                     ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="308"
            column="22"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `loadWebViewNativeLibraryFromPackage` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="                &amp;&amp; response.status != LIBLOAD_FAILED_WAITING_FOR_RELRO) {"
        errorLine2="                            ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="309"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `loadWebViewNativeLibraryFromPackage` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="            return response.status;"
        errorLine2="                            ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="310"
            column="29"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `packageInfo` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `loadWebViewNativeLibraryFromPackage` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="        if (!response.packageInfo.packageName.equals(packageName)) {"
        errorLine2="                      ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="312"
            column="23"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `loadWebViewNativeLibraryFromPackage` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="        if (loadNativeRet == LIBLOAD_SUCCESS) return response.status;"
        errorLine2="                                                              ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="330"
            column="63"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="            if (response.status != LIBLOAD_SUCCESS"
        errorLine2="                         ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="459"
            column="26"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; response.status != LIBLOAD_FAILED_WAITING_FOR_RELRO) {"
        errorLine2="                                ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="460"
            column="33"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `status` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="                        + getWebViewPreparationErrorReason(response.status));"
        errorLine2="                                                                    ~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="462"
            column="69"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `packageInfo` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="                        response.packageInfo.packageName);"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="469"
            column="34"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `packageInfo` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="                    response.packageInfo.packageName,"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="479"
            column="30"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `packageInfo` is a flagged API and should be inside an `if (Flags.updateServiceIpcWrapper())` check (or annotate the surrounding method `getWebViewContextAndSetProvider` with `@FlaggedApi(Flags.FLAG_UPDATE_SERVICE_IPC_WRAPPER) to transfer requirement to caller`)"
        errorLine1="            verifyPackageInfo(response.packageInfo, newPackageInfo);"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/webkit/WebViewFactory.java"
            line="510"
            column="40"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `registerBatchedSurfaceControlInputReceiver` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="        InputTransferToken inputTransferToken = new InputTransferToken();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowManagerGlobal.java"
            line="874"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onInputEvent()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                                    boolean handled = receiver.onInputEvent(event);"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowManagerGlobal.java"
            line="885"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `registerUnbatchedSurfaceControlInputReceiver` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="        InputTransferToken inputTransferToken = new InputTransferToken();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowManagerGlobal.java"
            line="897"
            column="49"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `onInputEvent()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `onInputEvent` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                                    boolean handled = receiver.onInputEvent(event);"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowManagerGlobal.java"
            line="907"
            column="55"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `SCREEN_RECORDING_STATE_NOT_VISIBLE` is a flagged API and should be inside an `if (Flags.screenRecordingCallbacks())` check (or annotate the surrounding method `addScreenRecordingCallback` with `@FlaggedApi(Flags.FLAG_SCREEN_RECORDING_CALLBACKS) to transfer requirement to caller`)"
        errorLine1="        return SCREEN_RECORDING_STATE_NOT_VISIBLE;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowManagerImpl.java"
            line="594"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="    private final InputTransferToken mInputTransferToken = new InputTransferToken();"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowlessWindowManager.java"
            line="94"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `InputTransferToken()` is a flagged API and should be inside an `if (Flags.surfaceControlInputReceiver())` check (or annotate the surrounding method `addToDisplay` with `@FlaggedApi(Flags.FLAG_SURFACE_CONTROL_INPUT_RECEIVER) to transfer requirement to caller`)"
        errorLine1="                state.mInputTransferToken = new InputTransferToken();"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/view/WindowlessWindowManager.java"
            line="214"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `compressToJpegR()` is a flagged API and should be inside an `if (Flags.yuvImageCompressToUltraHdr())` check (or annotate the surrounding method `compressToJpegR` with `@FlaggedApi(Flags.FLAG_YUV_IMAGE_COMPRESS_TO_ULTRA_HDR) to transfer requirement to caller`)"
        errorLine1="        return compressToJpegR(sdr, quality, stream, emptyExif);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/graphics/java/android/graphics/YuvImage.java"
            line="276"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `allowPriorityChannels()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `getDefaultZenPolicy` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        ZenPolicy policy = new ZenPolicy.Builder()"
        errorLine2="                           ^">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="379"
            column="28"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_OTHER` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `ensureManualZenRule` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="            newRule.type = AutomaticZenRule.TYPE_OTHER;"
        errorLine2="                                            ~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="435"
            column="45"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `zenDeviceEffects` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `writeRuleXml` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if (Flags.modesApi() &amp;&amp; rule.zenDeviceEffects != null) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="1206"
            column="38"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `policyState()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `toNotificationPolicy` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="            state = Policy.policyState(areChannelsBypassingDnd,"
        errorLine2="                    ^">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="1842"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPriorityChannelsAllowed()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `toNotificationPolicy` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="                    manualRule.zenPolicy.getPriorityChannelsAllowed() != STATE_DISALLOW);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="1843"
            column="21"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `TYPE_UNKNOWN` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `?` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        public int type = AutomaticZenRule.TYPE_UNKNOWN;"
        errorLine2="                                           ~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="2482"
            column="44"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Method `getPriorityChannelsAllowed()` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `areAllPriorityOnlyRingerSoundsMuted` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="                    &amp;&amp; !(config.areChannelsBypassingDnd &amp;&amp; policy.getPriorityChannelsAllowed()"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenModeConfig.java"
            line="2835"
            column="60"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `mAllowChannels` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `getAllowedChannels` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        return mAllowChannels;"
        errorLine2="               ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="576"
            column="16"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `mAllowChannels` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `allowChannels` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="            mZenPolicy.mAllowChannels = channelType;"
        errorLine2="                       ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1019"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_MESSAGES` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_MESSAGES) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1095"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_CALLS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_CALLS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1098"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_CONVERSATIONS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_CONVERSATIONS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1101"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_ALLOW_CHANNELS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_ALLOW_CHANNELS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1104"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_REMINDERS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_REMINDERS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1107"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_EVENTS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_EVENTS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1110"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_REPEAT_CALLERS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_REPEAT_CALLERS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1113"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_ALARMS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_ALARMS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1116"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_MEDIA` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_MEDIA) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1119"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_PRIORITY_CATEGORY_SYSTEM` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_PRIORITY_CATEGORY_SYSTEM) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1122"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_FULL_SCREEN_INTENT` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_FULL_SCREEN_INTENT) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1125"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_LIGHTS` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_LIGHTS) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1128"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_PEEK` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_PEEK) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1131"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_STATUS_BAR` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_STATUS_BAR) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1134"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_BADGE` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_BADGE) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1137"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_AMBIENT` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_AMBIENT) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1140"
            column="24"/>
    </issue>

    <issue
        id="FlaggedApi"
        message="Field `FIELD_VISUAL_EFFECT_NOTIFICATION_LIST` is a flagged API and should be inside an `if (Flags.modesApi())` check (or annotate the surrounding method `fieldsToString` with `@FlaggedApi(Flags.FLAG_MODES_API) to transfer requirement to caller`)"
        errorLine1="        if ((bitmask &amp; FIELD_VISUAL_EFFECT_NOTIFICATION_LIST) != 0) {"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/core/java/android/service/notification/ZenPolicy.java"
            line="1143"
            column="24"/>
    </issue>

    <issue
        id="SimpleManualPermissionEnforcement"
        message="INetworkScoreCache permission check should be converted to @EnforcePermission annotation"
        errorLine1="        mContext.enforceCallingOrSelfPermission(permission.DUMP, TAG);"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="frameworks/base/wifi/java/src/android/net/wifi/WifiNetworkScoreCache.java"
            line="250"
            column="9"/>
    </issue>

</issues>
