Landroid/os/Trace;->isTagEnabled(J)Z
Lcom/android/internal/os/ZygoteInit;->preloadClasses()V
Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V
Landroid/os/Trace;->traceEnd(J)V
Landroid/graphics/FontListParser;->readFamily(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Landroid/text/FontConfig$Family;
Landroid/graphics/FontListParser;->readFont(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Landroid/text/FontConfig$Font;
Landroid/graphics/FontListParser;->readFamilies(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Landroid/text/FontConfig;
Landroid/text/FontConfig$Font;-><init>(Ljava/lang/String;I[Landroid/graphics/fonts/FontVariationAxis;IZLjava/lang/String;)V
Landroid/util/ContainerHelpers;->binarySearch([III)I
Landroid/graphics/fonts/SystemFonts;->pushFamilyToFallback(Landroid/text/FontConfig$Family;Landroid/util/ArrayMap;Ljava/util/Map;Ljava/util/ArrayList;)V
Landroid/util/ArrayMap;->indexOf(Ljava/lang/Object;I)I
Lcom/android/internal/util/Preconditions;->checkArgument(ZLjava/lang/Object;)V
Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Landroid/graphics/fonts/Font;->getStyle()Landroid/graphics/fonts/FontStyle;
Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
Landroid/util/ArrayMap;->indexOfKey(Ljava/lang/Object;)I
Landroid/util/ArrayMap;->size()I
Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;
Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;
Landroid/util/ArrayMap;->binarySearchHashes([III)I
Landroid/text/FontConfig$Family;->getName()Ljava/lang/String;
Landroid/graphics/fonts/SystemFonts;->createFontFamily(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;ILjava/util/Map;Ljava/util/ArrayList;)Landroid/graphics/fonts/FontFamily;
Landroid/graphics/fonts/FontFamily$Builder;->build(Ljava/lang/String;IZ)Landroid/graphics/fonts/FontFamily;
Landroid/graphics/fonts/Font$Builder;->build()Landroid/graphics/fonts/Font;
Landroid/text/FontConfig$Font;->getFontName()Ljava/lang/String;
Landroid/graphics/fonts/Font$Builder;-><init>(Ljava/nio/ByteBuffer;Ljava/io/File;Ljava/lang/String;)V
Landroid/graphics/fonts/Font$Builder;-><init>(Ljava/nio/ByteBuffer;)V
Landroid/text/FontConfig$Font;->getWeight()I
Landroid/graphics/fonts/Font$Builder;->setWeight(I)Landroid/graphics/fonts/Font$Builder;
Lcom/android/internal/util/Preconditions;->checkArgument(Z)V
Landroid/text/FontConfig$Font;->isItalic()Z
Landroid/graphics/fonts/Font$Builder;->setSlant(I)Landroid/graphics/fonts/Font$Builder;
Landroid/text/FontConfig$Font;->getTtcIndex()I
Landroid/graphics/fonts/Font$Builder;->setTtcIndex(I)Landroid/graphics/fonts/Font$Builder;
Landroid/text/FontConfig$Font;->getAxes()[Landroid/graphics/fonts/FontVariationAxis;
Landroid/graphics/fonts/Font$Builder;->setFontVariationSettings([Landroid/graphics/fonts/FontVariationAxis;)Landroid/graphics/fonts/Font$Builder;
Landroid/graphics/fonts/FontStyle;-><init>(II)V
Landroid/graphics/fonts/Font;-><init>(JLjava/nio/ByteBuffer;Ljava/io/File;Landroid/graphics/fonts/FontStyle;I[Landroid/graphics/fonts/FontVariationAxis;Ljava/lang/String;Landroid/graphics/fonts/Font$1;)V
Landroid/graphics/fonts/Font;-><init>(JLjava/nio/ByteBuffer;Ljava/io/File;Landroid/graphics/fonts/FontStyle;I[Landroid/graphics/fonts/FontVariationAxis;Ljava/lang/String;)V
Landroid/graphics/fonts/FontFamily$Builder;->makeStyleIdentifier(Landroid/graphics/fonts/Font;)I
Landroid/graphics/fonts/FontStyle;->getWeight()I
Landroid/graphics/fonts/FontStyle;->getSlant()I
Landroid/graphics/fonts/Font;->getNativePtr()J
Landroid/graphics/fonts/SystemFonts;->buildSystemFallback(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/fonts/FontCustomizationParser$Result;Landroid/util/ArrayMap;Ljava/util/ArrayList;)[Landroid/text/FontConfig$Alias;
Landroid/graphics/fonts/SystemFonts;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
Landroid/graphics/fonts/SystemFonts;->mmap(Ljava/lang/String;)Ljava/nio/ByteBuffer;
Landroid/graphics/Typeface;->createFromFamilies([Landroid/graphics/fonts/FontFamily;)Landroid/graphics/Typeface;
Landroid/graphics/fonts/FontFamily;->getNativePtr()J
Landroid/content/pm/ActivityInfo;->activityInfoConfigNativeToJava(I)I
Landroid/content/res/TypedArray;->getChangingConfigurations()I
Landroid/content/res/TypedArray;->extractThemeAttrs([I)[I
Landroid/util/ContainerHelpers;->binarySearch([JIJ)I
Landroid/util/Pools$SimplePool;->isInPool(Ljava/lang/Object;)Z
Landroid/content/res/ResourcesImpl;->getAssets()Landroid/content/res/AssetManager;
Landroid/content/res/XmlBlock$Parser;->next()I
Landroid/content/res/XmlBlock$Parser;->getDepth()I
Landroid/content/res/StringBlock;->get(I)Ljava/lang/CharSequence;
Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;
Landroid/content/res/ResourcesImpl;->getDisplayMetrics()Landroid/util/DisplayMetrics;
Landroid/content/res/TypedArray;->length()I
Landroid/content/res/AssetManager;->ensureValidLocked()V
Landroid/content/res/TypedArray;->getFloat(IF)F
Landroid/content/res/ResourcesImpl;->loadXmlResourceParser(Ljava/lang/String;IILjava/lang/String;)Landroid/content/res/XmlResourceParser;
Landroid/content/res/XmlBlock$Parser;->getName()Ljava/lang/String;
Landroid/content/res/Resources;->getAssets()Landroid/content/res/AssetManager;
Landroid/content/res/TypedArray;->obtain(Landroid/content/res/Resources;I)Landroid/content/res/TypedArray;
Landroid/util/Pools$SynchronizedPool;->acquire()Ljava/lang/Object;
Landroid/util/Pools$SimplePool;->acquire()Ljava/lang/Object;
Landroid/content/res/TypedArray;->resize(I)V
Landroid/content/res/Resources;->obtainAttributes(Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;
Landroid/content/res/AssetManager;->retrieveAttributes(Landroid/content/res/XmlBlock$Parser;[I[I[I)Z
Landroid/content/res/TypedArray;->recycle()V
Landroid/util/Pools$SynchronizedPool;->release(Ljava/lang/Object;)Z
Landroid/util/Pools$SimplePool;->release(Ljava/lang/Object;)Z
Landroid/graphics/drawable/Drawable;->obtainAttributes(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;
Landroid/graphics/drawable/VectorDrawable$VGroup;->setTree(Lcom/android/internal/util/VirtualRefBasePtr;)V
Landroid/graphics/drawable/VectorDrawable$VGroup;->getNativeSize()I
Landroid/graphics/Rect;-><init>()V
Landroid/graphics/drawable/VectorDrawable$VObject;->setTree(Lcom/android/internal/util/VirtualRefBasePtr;)V
Lcom/android/internal/util/GrowingArrayUtils;->insert([IIII)[I
Lcom/android/internal/util/GrowingArrayUtils;->insert([Ljava/lang/Object;IILjava/lang/Object;)[Ljava/lang/Object;
Landroid/graphics/drawable/Drawable;->resolveDensity(Landroid/content/res/Resources;I)I
Landroid/graphics/drawable/VectorDrawable$VObject;-><init>()V
Landroid/util/ArrayMap;->freeArrays([I[Ljava/lang/Object;I)V
Landroid/content/res/TypedArray;->extractThemeAttrs()[I
Landroid/content/res/TypedArray;->getDimensionPixelSize(II)I
Landroid/graphics/drawable/Drawable$ConstantState;-><init>()V
Landroid/content/res/TypedArray;->getValueAt(ILandroid/util/TypedValue;)Z
Landroid/content/res/ColorStateList;->inflate(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V
Landroid/content/res/XmlBlock$Parser;->getAttributeNameResource(I)I
Landroid/content/res/XmlBlock;->access$1200(JI)I
Landroid/util/LongSparseArray;->put(JLjava/lang/Object;)V
Lcom/android/internal/util/GrowingArrayUtils;->append([Ljava/lang/Object;ILjava/lang/Object;)[Ljava/lang/Object;
Landroid/content/res/XmlBlock;->decOpenCountLocked()V
Landroid/content/res/XmlBlock$Parser;->close()V
Landroid/content/res/XmlBlock;->close()V
Landroid/util/ArrayMap;-><init>()V
Landroid/util/ArrayMap;-><init>(IZ)V
Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Lcom/android/internal/util/XmlUtils;->nextElementWithin(Lorg/xmlpull/v1/XmlPullParser;I)Z
Landroid/util/ArraySet;->indexOf(Ljava/lang/Object;I)I
Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
Lcom/android/server/SystemConfig;->readPrivAppPermissions(Lorg/xmlpull/v1/XmlPullParser;Landroid/util/ArrayMap;Landroid/util/ArrayMap;)V
Lcom/android/internal/util/XmlUtils;->nextElement(Lorg/xmlpull/v1/XmlPullParser;)V
Lcom/android/server/SystemConfig;->readPermissionsFromXml(Ljava/io/File;I)V
Lcom/android/server/SystemConfig;->addFeature(Ljava/lang/String;I)V
Lcom/android/internal/util/XmlUtils;->skipCurrentTag(Lorg/xmlpull/v1/XmlPullParser;)V
Landroid/os/Parcel;->readInt()I
Landroid/os/Parcel;->readLong()J
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->add(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
Lcom/android/internal/os/BatteryStatsImpl$Timer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;ILcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Landroid/os/BatteryStats$Timer;-><init>()V
Lcom/android/internal/os/BatteryStatsImpl$Timer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl;->readSummaryFromParcel(Landroid/os/Parcel;)V
Landroid/os/Parcel;->access$000(Landroid/os/Parcel;)J
Landroid/os/Parcel;->readString()Ljava/lang/String;
Landroid/os/Parcel$ReadWriteHelper;->readString(Landroid/os/Parcel;)Ljava/lang/String;
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->isRunning()Z
Lcom/android/internal/os/BatteryStatsImpl;->getKernelWakelockTimerLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;
Landroid/util/ArraySet;->freeArrays([I[Ljava/lang/Object;I)V
Landroid/util/ArraySet;->allocArrays(I)V
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull(Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
Lcom/android/internal/os/BatteryStatsImpl;->detachIfNotNull([Lcom/android/internal/os/BatteryStatsImpl$TimeBaseObs;)V
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Landroid/os/BatteryStats$LongCounter;-><init>()V
Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Landroid/util/ArrayMap;->allocArrays(I)V
Lcom/android/internal/os/BatteryStatsImpl$DualTimer;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Clocks;Lcom/android/internal/os/BatteryStatsImpl$Uid;ILjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;-><init>(Lcom/android/internal/os/BatteryStatsImpl;I)V
Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->add(Ljava/lang/String;Ljava/lang/Object;)V
Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPackageStatsLocked(Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
Lcom/android/internal/util/ArrayUtils;->newUnpaddedObjectArray(I)[Ljava/lang/Object;
Landroid/util/SparseArray;-><init>(I)V
Landroid/util/SparseArray;-><init>()V
Lcom/android/internal/os/BatteryStatsImpl$Uid;->readWakeSummaryFromParcelLocked(Ljava/lang/String;Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Lcom/android/internal/os/BatteryStatsImpl$Uid;)V
Landroid/os/BatteryStats$Uid$Wakelock;-><init>()V
Lcom/android/internal/os/BatteryStatsImpl$Uid;->getWakelockTimerLocked(Lcom/android/internal/os/BatteryStatsImpl$Uid$Wakelock;I)Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;
Lcom/android/internal/os/BatteryStatsImpl$Counter;-><init>(Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)V
Landroid/os/BatteryStats$Counter;-><init>()V
Lcom/android/internal/os/BatteryStatsImpl$Counter;->readSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;-><init>(Z)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->init(JJ)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getUptime(J)J
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->getRealtime(J)J
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->readSummaryFromParcel(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;->uptimeMillis()J
Lcom/android/internal/os/BatteryStatsImpl$SystemClocks;->elapsedRealtime()J
Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->readSummaryFromParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$TimeBase;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;
Lcom/android/internal/os/BatteryStatsImpl$Uid;->getServiceStatsLocked(Ljava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->newServiceStatsLocked()Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;-><init>(Lcom/android/internal/os/BatteryStatsImpl;)V
Landroid/os/BatteryStats$Uid$Pkg$Serv;-><init>()V
Lcom/android/internal/app/procstats/ProcessStats;->splitAndParseNumbers(Ljava/lang/String;)[I
Lcom/android/internal/os/KernelCpuProcStringReader;->isNumber(C)Z
Lcom/android/internal/os/KernelCpuProcStringReader;->access$000(Lcom/android/internal/os/KernelCpuProcStringReader;)[C
Lcom/android/internal/os/KernelCpuProcStringReader$ProcFileIterator;->nextLine()Ljava/nio/CharBuffer;
Lcom/android/internal/os/KernelCpuProcStringReader;->asLongs(Ljava/nio/CharBuffer;[J)I
Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
Landroid/util/SparseArray;->get(ILjava/lang/Object;)Ljava/lang/Object;
Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->copyToCurTimes()V
Lcom/android/internal/os/KernelCpuUidTimeReader$KernelCpuUidFreqTimeReader;->readDeltaImpl(Lcom/android/internal/os/KernelCpuUidTimeReader$Callback;)V
Lcom/android/internal/os/KernelWakelockReader;->readKernelWakelockStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;
Lcom/android/internal/util/GrowingArrayUtils;->insert([JIIJ)[J
Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I
Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J
Landroid/os/Parcel;->dataPosition()I
Landroid/util/LongSparseLongArray;->put(JJ)V
Lcom/android/internal/util/ArrayUtils;->newUnpaddedLongArray(I)[J
Lcom/android/internal/os/KernelWakelockReader;->parseProcWakelocks([BIZLcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;
Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
Landroid/util/LongSparseLongArray;-><init>()V
Landroid/util/LongSparseLongArray;-><init>(I)V
Landroid/app/AppOpsManager;->makeKey(II)J
Landroid/app/AppOpsManager;->opToDefaultMode(I)I
Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)J
Landroid/app/AppOpsManager;->extractFlagsFromKey(J)I
Landroid/app/AppOpsManager;->extractUidStateFromKey(J)I
Lcom/android/internal/util/XmlUtils;->readStringAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/String;
Lcom/android/internal/os/KernelWakelockStats$Entry;-><init>(IJI)V
Lcom/android/internal/os/KernelWakelockReader;->removeOldStats(Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;
Lcom/android/internal/os/BatteryStatsImpl;->updateKernelWakelocksLocked()V
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->update(JI)V
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->setUpdateVersion(I)V
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->getUpdateVersion()I
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->endSample()V
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->computeRunTimeLocked(J)J
Lcom/android/internal/os/BatteryStatsImpl$SamplingTimer;->computeCurrentCountLocked()I
Landroid/os/Parcel;->writeInt(I)V
Landroid/os/Parcel;->writeLong(J)V
Lcom/android/internal/os/BatteryStatsImpl$Timer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V
Lcom/android/internal/os/BatteryStatsImpl;->writeSummaryToParcel(Landroid/os/Parcel;Z)V
Landroid/os/Parcel;->writeString(Ljava/lang/String;)V
Landroid/os/Parcel$ReadWriteHelper;->writeString(Landroid/os/Parcel;Ljava/lang/String;)V
Landroid/os/StrictMode;->setThreadPolicyMask(I)V
Landroid/os/StrictMode;->setBlockGuardPolicy(I)V
Lcom/android/internal/os/ProcStatsUtil;->readTerminatedProcFile(Ljava/lang/String;B)Ljava/lang/String;
Landroid/os/StrictMode$ThreadPolicy;-><init>(ILandroid/os/StrictMode$OnThreadViolationListener;Ljava/util/concurrent/Executor;Landroid/os/StrictMode$1;)V
Landroid/os/StrictMode$ThreadPolicy;-><init>(ILandroid/os/StrictMode$OnThreadViolationListener;Ljava/util/concurrent/Executor;)V
Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V
Landroid/os/StrictMode;->allowThreadDiskReadsMask()I
Landroid/os/StrictMode;->getThreadPolicyMask()I
Landroid/os/StrictMode;->allowThreadDiskReads()Landroid/os/StrictMode$ThreadPolicy;
Lcom/android/internal/os/ProcessCpuTracker;->collectStats(Ljava/lang/String;IZ[ILjava/util/ArrayList;)[I
Lcom/android/internal/os/ProcessCpuTracker$Stats;-><init>(IIZ)V
Lcom/android/internal/os/ProcessCpuTracker$Stats;->getUid(Ljava/lang/String;)I
Lcom/android/internal/os/ProcessCpuTracker;->getName(Lcom/android/internal/os/ProcessCpuTracker$Stats;Ljava/lang/String;)V
Lcom/android/internal/os/ProcessCpuTracker;->onMeasureProcessName(Ljava/lang/String;)I
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->computeRunTimeLocked(J)J
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->computeCurrentCountLocked()I
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->getMaxDurationMsLocked(J)J
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->getTotalDurationMsLocked(J)J
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->getCurrentDurationMsLocked(J)J
Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->writeSummaryFromParcelLocked(Landroid/os/Parcel;J)V
Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->getMap()Landroid/util/ArrayMap;
Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2400(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
Lcom/android/internal/os/BatteryStatsImpl$Uid;->access$2500(Lcom/android/internal/os/BatteryStatsImpl$Uid;)Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounter;
Lcom/android/internal/os/BatteryStatsImpl$Counter;->writeSummaryFromParcelLocked(Landroid/os/Parcel;)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->writeSummaryToParcel(Landroid/os/Parcel;JJ)V
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeUptime(JI)J
Lcom/android/internal/os/BatteryStatsImpl$TimeBase;->computeRealtime(JI)J
Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;->writeSummaryToParcelLocked(Landroid/os/Parcel;Lcom/android/internal/os/BatteryStatsImpl$LongSamplingCounterArray;)V
Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getStartTimeToNowLocked(J)J
Landroid/util/MapCollections$ArrayIterator;->hasNext()Z
Landroid/util/SparseArray;->size()I
Landroid/content/pm/Signature;->parseHexDigit(I)I
Landroid/content/pm/Signature;-><init>(Ljava/lang/String;)V
Landroid/content/pm/FallbackCategoryProvider;->loadFallbacks()V
Landroid/content/pm/PermissionInfo;->fixProtectionLevel(I)I
Lcom/android/internal/util/ArrayUtils;->isEmpty([I)Z
Lcom/android/internal/util/ArrayUtils;->appendInt([IIZ)[I
Landroid/util/ArraySet;-><init>(IZ)V
Landroid/content/pm/IntentFilterVerificationInfo;->readFromXml(Lorg/xmlpull/v1/XmlPullParser;)V
Landroid/content/pm/IntentFilterVerificationInfo;->getStringFromXml(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
Landroid/content/pm/PackageParser;->toSigningKeys([Landroid/content/pm/Signature;)Landroid/util/ArraySet;
Landroid/util/ArraySet;-><init>(I)V
Landroid/util/Base64$Decoder;->process([BIIZ)Z
Landroid/util/LongSparseArray;->get(J)Ljava/lang/Object;
Landroid/util/LongSparseArray;->get(JLjava/lang/Object;)Ljava/lang/Object;
Landroid/util/ArraySet;-><init>()V
Lcom/android/internal/util/XmlUtils;->readBooleanAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Z)Z
Landroid/util/ArrayMap$1;->colGetEntry(II)Ljava/lang/Object;
Landroid/util/MapCollections$ArrayIterator;->next()Ljava/lang/Object;
Landroid/content/pm/PackageParserCacheHelper$ReadHelper;->readString(Landroid/os/Parcel;)Ljava/lang/String;
Landroid/util/ArraySet;->indexOf(Ljava/lang/Object;)I
Landroid/util/MapCollections$MapIterator;->hasNext()Z
Landroid/os/Parcel;->readStringList(Ljava/util/List;)V
Landroid/content/pm/Signature;->equals(Ljava/lang/Object;)Z
Lcom/android/internal/util/ArrayUtils;->indexOf([Ljava/lang/Object;Ljava/lang/Object;)I
Landroid/os/Parcel;->readParcelableList(Ljava/util/List;Ljava/lang/ClassLoader;)Ljava/util/List;
Landroid/os/Parcel;->readStringArray()[Ljava/lang/String;
Landroid/content/pm/PackageParser$SigningDetails;->hasCertificateInternal(Landroid/content/pm/Signature;I)Z
Landroid/content/pm/PackageParser$SigningDetails;->hasPastSigningCertificates()Z
Landroid/util/MapCollections$MapIterator;->getValue()Ljava/lang/Object;
Landroid/content/pm/PackageParser$Package;->fixupOwner(Ljava/util/List;)V
Landroid/util/MapCollections$MapIterator;->next()Ljava/lang/Object;
Landroid/util/MapCollections$MapIterator;->next()Ljava/util/Map$Entry;
Landroid/util/MapCollections$MapIterator;->getKey()Ljava/lang/Object;
Landroid/content/pm/Signature;->areExactMatch([Landroid/content/pm/Signature;[Landroid/content/pm/Signature;)Z
Lcom/android/internal/util/ArrayUtils;->containsAll([Ljava/lang/Object;[Ljava/lang/Object;)Z
Lcom/android/internal/util/ArrayUtils;->contains([Ljava/lang/Object;Ljava/lang/Object;)Z
Landroid/content/pm/PackageParser$SigningDetails;->hasCertificate(Landroid/content/pm/Signature;)Z
Landroid/util/ArrayMap;->putAll(Ljava/util/Map;)V
Landroid/os/Parcel;->createStringArrayList()Ljava/util/ArrayList;
Landroid/content/pm/PackageParser$Package;->internStringArrayList(Ljava/util/List;)V
Lcom/android/internal/util/ArrayUtils;->contains(Ljava/util/Collection;Ljava/lang/Object;)Z
Landroid/util/ArraySet;->size()I
Landroid/util/SparseArray;->keyAt(I)I
Landroid/content/pm/PackageParser;->isApkFile(Ljava/io/File;)Z
Landroid/content/pm/PackageParser;->isApkPath(Ljava/lang/String;)Z
Landroid/os/Parcel;->readParcelableCreator(Ljava/lang/ClassLoader;)Landroid/os/Parcelable$Creator;
Landroid/os/Parcel;->readParcelable(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;
Landroid/os/Parcel;->readBundle()Landroid/os/Bundle;
Landroid/os/Parcel;->readBundle(Ljava/lang/ClassLoader;)Landroid/os/Bundle;
Landroid/text/TextUtils$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/text/TextUtils$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/CharSequence;
Landroid/content/pm/PackageItemInfo;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageParser$Component;->createIntentsList(Landroid/os/Parcel;)Ljava/util/ArrayList;
Landroid/content/pm/PackageParser$Component;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageParser$Permission$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PackageParser$Permission$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PackageParser$Permission;
Landroid/content/pm/PackageParser$Permission;-><init>(Landroid/os/Parcel;Landroid/content/pm/PackageParser$1;)V
Landroid/content/pm/PackageParser$Permission;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PermissionInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PermissionInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PermissionInfo;
Landroid/content/pm/PermissionInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/PermissionInfo$1;)V
Landroid/content/pm/PermissionInfo;-><init>(Landroid/os/Parcel;)V
Landroid/os/Parcel;->readBoolean()Z
Landroid/util/ArrayMap;->indexOfNull()I
Landroid/util/MapCollections$ArrayIterator;-><init>(Landroid/util/MapCollections;I)V
Landroid/util/ArrayMap$1;->colGetSize()I
Landroid/util/ArrayMap;->getCollection()Landroid/util/MapCollections;
Landroid/util/MapCollections;->getValues()Ljava/util/Collection;
Landroid/util/MapCollections$ValuesCollection;->iterator()Ljava/util/Iterator;
Landroid/util/ArrayMap;->values()Ljava/util/Collection;
Landroid/os/Parcel;->readFloat()F
Landroid/content/pm/PackageBackwardCompatibility;->updatePackage(Landroid/content/pm/PackageParser$Package;)V
Landroid/os/Parcel;->setDataPosition(I)V
Landroid/content/pm/PackageParser$Activity;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/ComponentInfo;-><init>(Landroid/os/Parcel;)V
Landroid/util/SparseArray;->clear()V
Lcom/android/internal/util/ArrayUtils;->remove(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
Landroid/content/pm/PackageParser$Activity$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PackageParser$Activity$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PackageParser$Activity;
Landroid/content/pm/PackageParser$Activity;-><init>(Landroid/os/Parcel;Landroid/content/pm/PackageParser$1;)V
Landroid/content/pm/ActivityInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/ActivityInfo;
Landroid/content/pm/ActivityInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/ActivityInfo$1;)V
Landroid/content/pm/ActivityInfo;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/ActivityInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/ComponentName;->hashCode()I
Landroid/content/pm/PackageParser$Component;->getComponentName()Landroid/content/ComponentName;
Landroid/os/Parcel;->createIntArray()[I
Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z
Landroid/os/Parcel;->createTypedArrayList(Landroid/os/Parcelable$Creator;)Ljava/util/ArrayList;
Landroid/os/Parcel;->obtain()Landroid/os/Parcel;
Landroid/os/UserHandle;->getAppId(I)I
Landroid/util/ArrayMap;->clear()V
Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z
Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;
Landroid/content/IntentFilter;-><init>(Landroid/os/Parcel;)V
Landroid/os/Parcel;->updateNativeSize(J)V
Landroid/content/IntentFilter;->setAutoVerify(Z)V
Landroid/content/IntentFilter;->setVisibilityToInstantApp(I)V
Landroid/os/Parcel;->readCharSequence()Ljava/lang/CharSequence;
Landroid/content/pm/PackageParser$IntentInfo;-><init>(Landroid/os/Parcel;)V
Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z
Landroid/os/Parcel;->recycle()V
Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;
Landroid/util/ArraySet;->valueAtUnchecked(I)Ljava/lang/Object;
Landroid/content/pm/PackageParser$Package;->isPrivileged()Z
Landroid/content/pm/ApplicationInfo;->isPrivilegedApp()Z
Landroid/content/IntentFilter;->schemesIterator()Ljava/util/Iterator;
Landroid/content/IntentFilter;->typesIterator()Ljava/util/Iterator;
Landroid/content/IntentFilter;->debugCheck()Z
Landroid/util/ArrayMap;-><init>(I)V
Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z
Landroid/content/IntentFilter;->getOrder()I
Landroid/content/pm/PackageSharedLibraryUpdater;->isLibraryPresent(Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/lang/String;)Z
Landroid/content/pm/PackageParser$Package;->getLongVersionCode()J
Landroid/content/pm/PackageInfo;->composeLongVersionCode(II)J
Lcom/android/internal/util/ArrayUtils;->isEmpty(Ljava/util/Collection;)Z
Landroid/content/pm/ApplicationInfo;->isStaticSharedLibrary()Z
Landroid/content/pm/ApplicationInfo;->getCodePath()Ljava/lang/String;
Landroid/content/pm/ApplicationInfo;->getResourcePath()Ljava/lang/String;
Landroid/content/pm/ApplicationInfo;->isSystemApp()Z
Landroid/util/ArraySet;->equals(Ljava/lang/Object;)Z
Landroid/os/Environment;->getDataDirectory(Ljava/lang/String;)Ljava/io/File;
Landroid/content/pm/PackageParser$ActivityIntentInfo;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageSharedLibraryUpdater;->prefixImplicitDependency(Landroid/content/pm/PackageParser$Package;Ljava/lang/String;Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Service;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageSharedLibraryUpdater;->removeLibrary(Landroid/content/pm/PackageParser$Package;Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Service$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PackageParser$Service;
Landroid/content/pm/ServiceInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/ServiceInfo$1;)V
Landroid/content/pm/ServiceInfo;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageParser$Service$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PackageParser$Service;-><init>(Landroid/os/Parcel;Landroid/content/pm/PackageParser$1;)V
Landroid/content/pm/ServiceInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/ServiceInfo;
Landroid/content/pm/ServiceInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/os/Parcel;->readArrayMapInternal(Landroid/util/ArrayMap;ILjava/lang/ClassLoader;)V
Landroid/os/Parcel;->readValue(Ljava/lang/ClassLoader;)Ljava/lang/Object;
Landroid/util/ArrayMap;->append(Ljava/lang/Object;Ljava/lang/Object;)V
Landroid/util/ArrayMap;->validate()V
Landroid/content/pm/PackageUserState;->equals(Ljava/lang/Object;)Z
Landroid/content/IntentFilter;->getPriority()I
Landroid/os/Parcel;->createTypedArray(Landroid/os/Parcelable$Creator;)[Ljava/lang/Object;
Landroid/os/BaseBundle;->readFromParcelInner(Landroid/os/Parcel;I)V
Landroid/os/Parcel;->hasReadWriteHelper()Z
Landroid/os/BaseBundle;->initializeFromParcelLocked(Landroid/os/Parcel;ZZ)V
Landroid/os/BaseBundle;->isEmptyParcel(Landroid/os/Parcel;)Z
Landroid/content/pm/PackageParser$ServiceIntentInfo;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageParser$Provider;-><init>(Landroid/os/Parcel;)V
Landroid/os/Parcel;->freeBuffer()V
Landroid/content/IntentFilter$AuthorityEntry;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/PackageParser$Provider$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PackageParser$Provider$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PackageParser$Provider;
Landroid/content/pm/PackageParser$Provider;-><init>(Landroid/os/Parcel;Landroid/content/pm/PackageParser$1;)V
Landroid/content/pm/ProviderInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/ProviderInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/ProviderInfo;
Landroid/content/pm/ProviderInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/ProviderInfo$1;)V
Landroid/content/pm/ProviderInfo;-><init>(Landroid/os/Parcel;)V
Landroid/util/MapCollections;->getEntrySet()Ljava/util/Set;
Landroid/content/pm/PackageParser$SigningDetails;->checkCapability(Landroid/content/pm/PackageParser$SigningDetails;I)Z
Landroid/content/IntentFilter;->countActions()I
Landroid/content/IntentFilter;->countCategories()I
Landroid/content/IntentFilter;->getAction(I)Ljava/lang/String;
Landroid/content/IntentFilter;->hasAction(Ljava/lang/String;)Z
Landroid/content/pm/PackageParser$SigningDetails;->hasCertificate(Landroid/content/pm/Signature;I)Z
Landroid/content/pm/PackageItemInfo;-><init>()V
Landroid/util/DisplayMetrics;-><init>()V
Landroid/content/pm/FeatureInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/FeatureInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/FeatureInfo;
Landroid/content/pm/FeatureInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/FeatureInfo$1;)V
Landroid/content/pm/FeatureInfo;-><init>(Landroid/os/Parcel;)V
Landroid/util/DisplayMetrics;->setToDefaults()V
Landroid/os/Parcel;->unmarshall([BII)V
Landroid/content/pm/PackageParser$Package;-><init>(Landroid/os/Parcel;)V
Landroid/content/pm/ApplicationInfo;-><init>()V
Landroid/content/pm/PackageParser;->setCallback(Landroid/content/pm/PackageParser$Callback;)V
Landroid/content/pm/PackageParser;->getCachedResult(Ljava/io/File;I)Landroid/content/pm/PackageParser$Package;
Landroid/os/Parcel;->setReadWriteHelper(Landroid/os/Parcel$ReadWriteHelper;)V
Landroid/content/pm/PackageParser;->setSeparateProcesses([Ljava/lang/String;)V
Landroid/content/pm/PackageParser;->setOnlyCoreApps(Z)V
Landroid/content/pm/PackageParser;->setDisplayMetrics(Landroid/util/DisplayMetrics;)V
Landroid/content/pm/PackageParser;->setCacheDir(Ljava/io/File;)V
Landroid/content/pm/PackageParser;->parsePackage(Ljava/io/File;IZ)Landroid/content/pm/PackageParser$Package;
Landroid/content/pm/PackageParser;->getCacheKey(Ljava/io/File;I)Ljava/lang/String;
Landroid/content/pm/PackageParser;-><init>()V
Landroid/content/pm/PackageSharedLibraryUpdater;->prefixRequiredLibrary(Landroid/content/pm/PackageParser$Package;Ljava/lang/String;)V
Landroid/content/pm/PackageSharedLibraryUpdater;->prefix(Ljava/util/ArrayList;Ljava/lang/Object;)Ljava/util/ArrayList;
Landroid/content/pm/PackageParser$SigningDetails$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/PackageParser$SigningDetails$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/PackageParser$SigningDetails;
Landroid/os/Parcel;->readArraySet(Ljava/lang/ClassLoader;)Landroid/util/ArraySet;
Landroid/content/pm/PackageParser$Package;->readKeySetMapping(Landroid/os/Parcel;)Landroid/util/ArrayMap;
Landroid/os/Parcel;->createByteArray()[B
Landroid/content/pm/ApplicationInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/content/pm/ApplicationInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/content/pm/ApplicationInfo;
Landroid/content/pm/ApplicationInfo;-><init>(Landroid/os/Parcel;Landroid/content/pm/ApplicationInfo$1;)V
Landroid/content/pm/ApplicationInfo;-><init>(Landroid/os/Parcel;)V
Landroid/util/ArraySet$1;->colGetEntry(II)Ljava/lang/Object;
Landroid/content/IntentFilter;->getCategory(I)Ljava/lang/String;
Landroid/content/IntentFilter;->hasCategory(Ljava/lang/String;)Z
Landroid/content/pm/ApplicationInfo;->isUpdatedSystemApp()Z
Landroid/content/IntentFilter;->countDataSchemes()I
Landroid/content/IntentFilter;->countDataTypes()I
Landroid/content/IntentFilter;->countDataAuthorities()I
Landroid/content/pm/PackageParser$Package;->setApplicationVolumeUuid(Ljava/lang/String;)V
Landroid/os/storage/StorageManager;->convert(Ljava/lang/String;)Ljava/util/UUID;
Landroid/content/pm/PackageParser$Package;->setApplicationInfoCodePath(Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setCodePath(Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Package;->setApplicationInfoBaseCodePath(Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setBaseCodePath(Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Package;->setApplicationInfoSplitCodePaths([Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setSplitCodePaths([Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Package;->setApplicationInfoResourcePath(Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setResourcePath(Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Package;->setApplicationInfoBaseResourcePath(Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setBaseResourcePath(Ljava/lang/String;)V
Landroid/content/pm/PackageParser$Package;->setApplicationInfoSplitResourcePaths([Ljava/lang/String;)V
Landroid/content/pm/ApplicationInfo;->setSplitResourcePaths([Ljava/lang/String;)V
Landroid/content/pm/AndroidHidlUpdater;->updatePackage(Landroid/content/pm/PackageParser$Package;)V
Landroid/content/pm/PackageParser$Package;->getChildPackageNames()Ljava/util/List;
Landroid/content/pm/SELinuxUtil;->assignSeinfoUser(Landroid/content/pm/PackageUserState;)Ljava/lang/String;
Landroid/content/pm/ApplicationInfo;->initForUser(I)V
Landroid/os/UserHandle;->getUid(II)I
Landroid/os/Environment;->getDataUserDePackageDirectory(Ljava/lang/String;ILjava/lang/String;)Ljava/io/File;
Landroid/os/Environment;->getDataUserDeDirectory(Ljava/lang/String;I)Ljava/io/File;
Landroid/os/Environment;->getDataUserDeDirectory(Ljava/lang/String;)Ljava/io/File;
Landroid/os/Environment;->getDataUserCePackageDirectory(Ljava/lang/String;ILjava/lang/String;)Ljava/io/File;
Landroid/os/Environment;->getDataUserCeDirectory(Ljava/lang/String;I)Ljava/io/File;
Landroid/os/Environment;->getDataUserCeDirectory(Ljava/lang/String;)Ljava/io/File;
Landroid/content/pm/SharedLibraryInfo;->getPath()Ljava/lang/String;
Landroid/content/pm/ApplicationInfo;->isInstantApp()Z
Landroid/permission/PermissionManager$SplitPermissionInfo;->getNewPermissions()Ljava/util/List;
Landroid/permission/PermissionManager$SplitPermissionInfo;->getSplitPermission()Ljava/lang/String;
Landroid/content/pm/PackageParser$SigningDetails;->hasAncestorOrSelf(Landroid/content/pm/PackageParser$SigningDetails;)Z
Landroid/content/pm/PackageParser$Package;->isVendor()Z
Landroid/content/pm/ApplicationInfo;->isVendor()Z
Landroid/util/ArraySet;->iterator()Ljava/util/Iterator;
Landroid/util/ArraySet;->getCollection()Landroid/util/MapCollections;
Landroid/util/MapCollections;->getKeySet()Ljava/util/Set;
Landroid/util/MapCollections$KeySet;->iterator()Ljava/util/Iterator;
Landroid/util/ArraySet$1;->colGetSize()I
Lcom/android/server/SystemConfig;->getInstance()Lcom/android/server/SystemConfig;
Landroid/content/pm/PackageParser$Package;->isProduct()Z
Landroid/content/pm/ApplicationInfo;->isProduct()Z
Landroid/content/pm/PackageParser$Package;->isSystem()Z
Landroid/content/pm/PackageParser$Package;->isUpdatedSystemApp()Z
Lcom/android/server/SystemConfig;->getProductPrivAppPermissions(Ljava/lang/String;)Landroid/util/ArraySet;
Landroid/text/TextUtils;->equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
Lcom/android/internal/util/FastXmlSerializer;->escapeAndAppendString(Ljava/lang/String;)V
Lcom/android/internal/util/FastXmlSerializer;->append(Ljava/lang/String;II)V
Lcom/android/internal/util/FastXmlSerializer;->append(Ljava/lang/String;)V
Lcom/android/internal/util/FastXmlSerializer;->append(C)V
Lcom/android/internal/util/FastXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
Lcom/android/internal/util/FastXmlSerializer;->appendIndent(I)V
Lcom/android/internal/util/FastXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
Lcom/android/internal/util/FastXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
Landroid/content/pm/Signature;->toChars([C[I)[C
Landroid/content/pm/Signature;->hashCode()I
Landroid/content/pm/IntentFilterVerificationInfo;->writeToXml(Lorg/xmlpull/v1/XmlSerializer;)V
Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;
Landroid/util/MapCollections$EntrySet;->iterator()Ljava/util/Iterator;
Landroid/util/MapCollections$MapIterator;-><init>(Landroid/util/MapCollections;)V
Landroid/util/MapCollections$EntrySet;-><init>(Landroid/util/MapCollections;)V
Lcom/android/internal/util/ArrayUtils;->isEmpty([Ljava/lang/Object;)Z
Landroid/util/Base64$Encoder;->process([BIIZ)Z
Landroid/os/FileUtils;->bytesToFile(Ljava/lang/String;[B)V
Landroid/os/FileUtils;->$closeResource(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V
Landroid/util/ArraySet;->removeAt(I)Ljava/lang/Object;
Landroid/util/ArraySet;->shouldShrink()Z
Landroid/util/MapCollections;-><init>()V
Landroid/content/IntentFilter;->getAutoVerify()Z
Landroid/content/IntentFilter;->match(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;Ljava/util/Set;Ljava/lang/String;)I
Landroid/content/IntentFilter;->matchAction(Ljava/lang/String;)Z
Landroid/content/pm/ApplicationInfo;->setVersionCode(J)V
Landroid/os/Process;->isIsolated(I)Z
Landroid/content/pm/PackageUserState;->isAvailable(I)Z
Landroid/content/pm/PackageParser;->checkUseInstalledOrHidden(ILandroid/content/pm/PackageUserState;Landroid/content/pm/ApplicationInfo;)Z
Landroid/content/pm/PackageParser$Package;->isMatch(I)Z
Landroid/content/pm/PackageParser;->copyNeeded(ILandroid/content/pm/PackageParser$Package;Landroid/content/pm/PackageUserState;Landroid/os/Bundle;I)Z
Landroid/content/pm/PackageParser;->updateApplicationInfo(Landroid/content/pm/ApplicationInfo;ILandroid/content/pm/PackageUserState;)V
Landroid/content/pm/PackageParser;->generateApplicationInfo(Landroid/content/pm/PackageParser$Package;ILandroid/content/pm/PackageUserState;I)Landroid/content/pm/ApplicationInfo;
Landroid/content/pm/FallbackCategoryProvider;->getFallbackCategory(Ljava/lang/String;)I
Landroid/os/storage/StorageManager;->isFileEncryptedNativeOnly()Z
Landroid/os/storage/StorageManager;->isEncrypted()Z
Landroid/content/pm/PackageParser;->generatePackageInfo(Landroid/content/pm/PackageParser$Package;[IIJJLjava/util/Set;Landroid/content/pm/PackageUserState;I)Landroid/content/pm/PackageInfo;
Landroid/content/pm/PackageInfo;-><init>()V
Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V
Landroid/os/BinderProxy;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
Landroid/os/Binder;->checkParcel(Landroid/os/IBinder;ILandroid/os/Parcel;Ljava/lang/String;)V
Landroid/os/Binder;->isTracingEnabled()Z
Landroid/os/Parcel;->readException()V
Landroid/os/Parcel;->readExceptionCode()I
Landroid/os/UserHandle;->getUserId(I)I
Landroid/util/proto/ProtoInputStream;->fillBuffer()V
Landroid/util/proto/ProtoInputStream;->getOffset()I
Landroid/util/proto/ProtoStream;->getOffsetFromToken(J)I
Landroid/util/proto/ProtoInputStream;->incOffset(I)V
Landroid/util/proto/ProtoInputStream;->readVarint()J
Landroid/util/proto/ProtoInputStream;->nextField()I
Landroid/util/proto/ProtoInputStream;->readTag()V
Landroid/util/proto/ProtoInputStream;->assertFreshData()V
Landroid/util/proto/ProtoInputStream;->assertFieldNumber(J)V
Landroid/util/proto/ProtoInputStream;->assertWireType(I)V
Landroid/util/proto/ProtoInputStream;->getFieldNumber()I
Landroid/util/proto/ProtoInputStream;->checkPacked(J)V
Lcom/android/internal/util/ArrayUtils;->newUnpaddedIntArray(I)[I
Landroid/util/proto/ProtoInputStream;->readLong(J)J
Landroid/util/SparseIntArray;-><init>(I)V
Landroid/util/SparseIntArray;-><init>()V
Landroid/util/proto/ProtoInputStream;->readInt(J)I
Landroid/util/proto/ProtoInputStream;->start(J)J
Landroid/util/proto/ProtoStream;->makeToken(IZIII)J
Landroid/util/proto/ProtoInputStream;->end(J)V
Landroid/util/proto/ProtoInputStream;->readString(J)Ljava/lang/String;
Landroid/util/proto/ProtoInputStream;->readRawString(I)Ljava/lang/String;
Landroid/util/ArraySet;->addAll(Ljava/util/Collection;)Z
Landroid/app/usage/UsageStats;-><init>()V
Landroid/content/res/Configuration;->readFromProto(Landroid/util/proto/ProtoInputStream;J)V
Landroid/util/proto/ProtoInputStream;->nextField(J)Z
Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;
Landroid/net/Uri;->access$300()Ljava/lang/String;
Landroid/net/UriCodec;->appendDecoded(Ljava/lang/StringBuilder;Ljava/lang/String;ZLjava/nio/charset/Charset;Z)V
Landroid/net/UriCodec;->flushDecodingByteAccumulator(Ljava/lang/StringBuilder;Ljava/nio/charset/CharsetDecoder;Ljava/nio/ByteBuffer;Z)V
Landroid/net/Uri$PathPart;->getPathSegments()Landroid/net/Uri$PathSegments;
Landroid/net/Uri$Part;->nonNull(Landroid/net/Uri$Part;)Landroid/net/Uri$Part;
Landroid/net/Uri$HierarchicalUri;->getPathSegments()Ljava/util/List;
Landroid/os/UserHandle;->getCallingUserId()I
Lcom/android/internal/util/FastPrintWriter;->appendLocked(Ljava/lang/String;II)V
Landroid/net/Uri;->decode(Ljava/lang/String;)Ljava/lang/String;
Landroid/net/UriCodec;->decode(Ljava/lang/String;ZLjava/nio/charset/Charset;Z)Ljava/lang/String;
Landroid/text/TextUtils;->safeIntern(Ljava/lang/String;)Ljava/lang/String;
Landroid/view/animation/PathInterpolator;->initPath(Landroid/graphics/Path;)V
Landroid/app/WindowConfiguration;->setAppBounds(Landroid/graphics/Rect;)V
Landroid/app/WindowConfiguration;->setBounds(Landroid/graphics/Rect;)V
Landroid/app/WindowConfiguration;->setWindowingMode(I)V
Landroid/app/WindowConfiguration;->setActivityType(I)V
Landroid/app/WindowConfiguration;->setAlwaysOnTop(I)V
Landroid/app/WindowConfiguration;->setRotation(I)V
Landroid/app/WindowConfiguration;->setDisplayWindowingMode(I)V
Landroid/os/LocaleList;->isEmpty()Z
Landroid/content/res/AssetManager;->getResourceValue(IILandroid/util/TypedValue;Z)Z
Landroid/content/res/Configuration;->fixUpLocaleList()V
Landroid/content/res/Resources;->obtainTempTypedValue()Landroid/util/TypedValue;
Landroid/content/res/Resources;->releaseTempTypedValue(Landroid/util/TypedValue;)V
Landroid/graphics/Rect;->setEmpty()V
Landroid/net/UriCodec;->getNextCharacter(Ljava/lang/String;IILjava/lang/String;)C
Landroid/net/UriCodec;->hexCharToValue(C)I
Landroid/net/Uri$AbstractPart;->getDecoded()Ljava/lang/String;
Landroid/net/Uri$PathSegments;->size()I
Landroid/app/WindowConfiguration;->setToDefaults()V
Lcom/android/internal/util/LineBreakBufferedWriter;->write(Ljava/lang/String;II)V
Landroid/net/Uri;->encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
Landroid/net/Uri;->isAllowed(CLjava/lang/String;)Z
Landroid/os/BaseBundle;->unparcel()V
Landroid/content/Intent;->getAction()Ljava/lang/String;
Landroid/os/Process;->myUid()I
Landroid/content/res/ResourcesImpl;->getValue(ILandroid/util/TypedValue;Z)V
Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V
Landroid/app/WindowConfiguration;->setTo(Landroid/app/WindowConfiguration;)V
Landroid/util/ArrayMap;->ensureCapacity(I)V
Landroid/util/TypedValue;->complexToFloat(I)F
Landroid/content/res/ThemedResourceCache;->pruneEntriesLocked(Landroid/util/LongSparseArray;I)Z
Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F
Landroid/os/MessageQueue;->enqueueMessage(Landroid/os/Message;J)Z
Landroid/os/Message;->markInUse()V
Landroid/os/Binder;-><init>()V
Landroid/os/Binder;-><init>(Ljava/lang/String;)V
Landroid/os/UserHandle;->isSameApp(II)Z
Landroid/app/WindowConfiguration;-><init>()V
Landroid/app/WindowConfiguration;->unset()V
Landroid/content/Intent;->getPackage()Ljava/lang/String;
Lcom/android/internal/util/ArrayUtils;->unstableRemoveIf(Ljava/util/ArrayList;Ljava/util/function/Predicate;)I
Landroid/util/TypedValue;->complexToDimensionPixelSize(ILandroid/util/DisplayMetrics;)I
Landroid/net/Uri$HierarchicalUri;->getAuthority()Ljava/lang/String;
Landroid/app/IApplicationThread$Stub;->asBinder()Landroid/os/IBinder;
Landroid/os/UserHandle;->getIdentifier()I
Landroid/util/MemoryIntArray;->enforceNotClosed()V
Landroid/util/MemoryIntArray;->isClosed()Z
Landroid/os/MessageQueue;->next()Landroid/os/Message;
Landroid/app/ContextImpl;->getResources()Landroid/content/res/Resources;
Landroid/net/Uri$Builder;->path(Landroid/net/Uri$PathPart;)Landroid/net/Uri$Builder;
Landroid/util/Singleton;->get()Ljava/lang/Object;
Lcom/android/internal/util/MessageUtils;->findMessageNames([Ljava/lang/Class;[Ljava/lang/String;)Landroid/util/SparseArray;
Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;
Landroid/content/ContentProvider;->access$100(Landroid/content/ContentProvider;Ljava/lang/String;)Ljava/lang/String;
Landroid/content/ContentProvider;->setCallingPackage(Ljava/lang/String;)Ljava/lang/String;
Landroid/content/ContentProvider;->onCallingPackageChanged()V
Landroid/app/ContextImpl;->getUserId()I
Landroid/util/TimingsTraceLog;->assertSameThread()V
Landroid/net/Uri$StringUri;->getAuthorityPart()Landroid/net/Uri$Part;
Landroid/os/Binder;->attachInterface(Landroid/os/IInterface;Ljava/lang/String;)V
Landroid/net/Uri$Builder;->authority(Landroid/net/Uri$Part;)Landroid/net/Uri$Builder;
Landroid/app/NotificationChannel;->safeInt(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I
Landroid/app/NotificationChannel;->tryParseInt(Ljava/lang/String;I)I
Landroid/app/NotificationChannel;->safeBool(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Z)Z
Landroid/net/Uri;-><init>(Landroid/net/Uri$1;)V
Landroid/net/Uri;-><init>()V
Landroid/net/Uri$AbstractHierarchicalUri;-><init>(Landroid/net/Uri$1;)V
Landroid/net/Uri$AbstractHierarchicalUri;-><init>()V
Landroid/app/NotificationChannel;->getTrimmedString(Ljava/lang/String;)Ljava/lang/String;
Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z
Landroid/content/IntentFilter;->matchCategories(Ljava/util/Set;)Ljava/lang/String;
Landroid/util/ArraySet;->ensureCapacity(I)V
Landroid/util/ArraySet$1;-><init>(Landroid/util/ArraySet;)V
Landroid/util/MapCollections$KeySet;-><init>(Landroid/util/MapCollections;)V
Landroid/provider/Settings$GenerationTracker;->getCurrentGeneration()I
Landroid/app/NotificationChannel;->getAudioAttributes()Landroid/media/AudioAttributes;
Landroid/app/NotificationChannel;->getName()Ljava/lang/CharSequence;
Landroid/app/NotificationChannel;->getImportance()I
Landroid/app/NotificationChannel;->getOriginalImportance()I
Lcom/android/internal/util/ArrayUtils;->size([Ljava/lang/Object;)I
Landroid/app/NotificationChannel;->canShowBadge()Z
Landroid/app/NotificationChannel;->getGroup()Ljava/lang/String;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->setIfInBounds([Ljava/lang/Object;ILjava/lang/Object;)V
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->mask(II)I
Landroid/os/Message;->obtain()Landroid/os/Message;
Landroid/os/Handler;->enqueueMessage(Landroid/os/MessageQueue;Landroid/os/Message;J)Z
Landroid/os/ThreadLocalWorkSource;->getUid()I
Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z
Landroid/app/NotificationChannel;->isBlockableSystem()Z
Landroid/app/NotificationChannel;->getId()Ljava/lang/String;
Landroid/app/NotificationChannel;->getDescription()Ljava/lang/String;
Landroid/app/NotificationChannel;->shouldVibrate()Z
Landroid/app/NotificationChannel;->getUserLockedFields()I
Landroid/app/NotificationChannel;->shouldShowLights()Z
Landroid/app/NotificationChannel;->isDeleted()Z
Landroid/app/NotificationChannel;->isFgServiceShown()Z
Landroid/app/NotificationChannel;->writeXml(Lorg/xmlpull/v1/XmlSerializer;)V
Landroid/app/NotificationChannel;->writeXml(Lorg/xmlpull/v1/XmlSerializer;ZLandroid/content/Context;)V
Landroid/app/NotificationChannel;->canBypassDnd()Z
Landroid/app/NotificationChannel;->getLockscreenVisibility()I
Landroid/app/NotificationChannel;->getSound()Landroid/net/Uri;
Landroid/media/AudioAttributes;->getUsage()I
Landroid/media/AudioAttributes;->getContentType()I
Landroid/media/AudioAttributes;->getFlags()I
Landroid/app/NotificationChannel;->getLightColor()I
Landroid/app/NotificationChannel;->getVibrationPattern()[J
Landroid/app/NotificationChannel;->canBubble()Z
Landroid/net/Uri$StringUri;->toString()Ljava/lang/String;
Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
Landroid/os/Message;->recycleUnchecked()V
Landroid/net/Uri$PathPart;->getEncoded()Ljava/lang/String;
Landroid/net/Uri$PathSegments;->get(I)Ljava/lang/Object;
Landroid/net/Uri$PathSegments;->get(I)Ljava/lang/String;
Landroid/net/Uri$PathSegmentsBuilder;->add(Ljava/lang/String;)V
Landroid/content/ContentProvider;->getAuthorityWithoutUserId(Ljava/lang/String;)Ljava/lang/String;
Landroid/os/UserHandle;->myUserId()I
Landroid/provider/Settings$NameValueCache;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
Landroid/net/Uri$StringUri;->getAuthority()Ljava/lang/String;
Landroid/os/BaseBundle;->getString(Ljava/lang/String;)Ljava/lang/String;
Landroid/os/Bundle;->setDefusable(Landroid/os/Bundle;Z)Landroid/os/Bundle;
Landroid/provider/Settings$ContentProviderHolder;->getProvider(Landroid/content/ContentResolver;)Landroid/content/IContentProvider;
Landroid/content/ContentResolver;->getPackageName()Ljava/lang/String;
Landroid/provider/Settings$ContentProviderHolder;->access$000(Landroid/provider/Settings$ContentProviderHolder;)Landroid/net/Uri;
Landroid/content/ContentProvider$Transport;->call(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
Landroid/content/ContentProvider;->access$200(Landroid/content/ContentProvider;Ljava/lang/String;)V
Landroid/content/ContentProvider;->validateIncomingAuthority(Ljava/lang/String;)V
Landroid/content/ContentProvider;->matchesOurAuthorities(Ljava/lang/String;)Z
Landroid/content/ContentProvider;->call(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;
Landroid/provider/Settings;->isInSystemServer()Z
Landroid/os/BaseBundle;-><init>(Ljava/lang/ClassLoader;I)V
Landroid/os/BaseBundle;->putInt(Ljava/lang/String;I)V
Landroid/os/Bundle;-><init>()V
Landroid/os/BaseBundle;-><init>()V
Landroid/os/BaseBundle;->getInt(Ljava/lang/String;I)I
Landroid/os/Bundle;->setDefusable(Z)V
Landroid/os/BaseBundle;->containsKey(Ljava/lang/String;)Z
Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
Landroid/provider/Settings$System;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I
Landroid/media/AudioSystem;->getOutputDeviceName(I)Ljava/lang/String;
Landroid/app/ContextImpl;->getContentResolver()Landroid/content/ContentResolver;
Landroid/content/IntentFilter;->matchData(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)I
Landroid/content/Intent;->getFlags()I
Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;
Lcom/android/internal/util/BitUtils;->unpackBits(J)[I
Landroid/util/SparseIntArray;->get(II)I
Landroid/os/BaseBundle;->copyInternal(Landroid/os/BaseBundle;Z)V
Landroid/app/ActivityThread;->getPackageManager()Landroid/content/pm/IPackageManager;
Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
Landroid/os/BaseBundle;-><init>(Z)V
Lcom/android/internal/util/XmlUtils;->readThisArrayMapXml(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;[Ljava/lang/String;Lcom/android/internal/util/XmlUtils$ReadMapCallback;)Landroid/util/ArrayMap;
Landroid/os/BaseBundle;->deepCopyValue(Ljava/lang/Object;)Ljava/lang/Object;
Lcom/android/internal/util/XmlUtils;->readThisValueXml(Lorg/xmlpull/v1/XmlPullParser;[Ljava/lang/String;Lcom/android/internal/util/XmlUtils$ReadMapCallback;Z)Ljava/lang/Object;
Landroid/os/PersistableBundle;-><init>(Landroid/util/ArrayMap;)V
Lcom/android/internal/util/BitUtils;->packBits([I)J
Landroid/os/PersistableBundle;->isValidType(Ljava/lang/Object;)Z
Lcom/android/internal/util/XmlUtils;->readThisPrimitiveValueXml(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Ljava/lang/Object;
Landroid/net/UidRange;->hashCode()I
Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V
Landroid/os/LocaleList;->hashCode()I
Landroid/content/IIntentReceiver$Stub;->asBinder()Landroid/os/IBinder;
Landroid/app/job/JobInfo;->getRequiredNetwork()Landroid/net/NetworkRequest;
Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V
Lcom/android/internal/os/ProcTimeInStateReader;->initializeTimeInStateFormat(Ljava/nio/file/Path;)V
Landroid/net/Uri$AbstractPart;-><init>(Ljava/lang/String;Ljava/lang/String;)V
Landroid/os/MessageQueue;->removeMessages(Landroid/os/Handler;ILjava/lang/Object;)V
Landroid/os/ServiceManager;->getIServiceManager()Landroid/os/IServiceManager;
Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
Lcom/android/internal/util/StatLogger;->getTime()J
Landroid/util/TimingsTraceLog;->traceBegin(Ljava/lang/String;)V
Landroid/util/TimingsTraceLog;->traceEnd()V
Landroid/util/TimingsTraceLog;->logDuration(Ljava/lang/String;J)V
Landroid/net/Uri$HierarchicalUri;-><init>(Ljava/lang/String;Landroid/net/Uri$Part;Landroid/net/Uri$PathPart;Landroid/net/Uri$Part;Landroid/net/Uri$Part;Landroid/net/Uri$1;)V
Landroid/net/Uri$HierarchicalUri;-><init>(Ljava/lang/String;Landroid/net/Uri$Part;Landroid/net/Uri$PathPart;Landroid/net/Uri$Part;Landroid/net/Uri$Part;)V
Landroid/net/Uri$Builder;-><init>()V
Landroid/net/Uri$Builder;->scheme(Ljava/lang/String;)Landroid/net/Uri$Builder;
Landroid/net/Uri$Builder;->query(Landroid/net/Uri$Part;)Landroid/net/Uri$Builder;
Landroid/net/Uri$Builder;->fragment(Landroid/net/Uri$Part;)Landroid/net/Uri$Builder;
Landroid/net/Uri$Builder;->build()Landroid/net/Uri;
Landroid/net/Uri$Builder;->hasSchemeOrAuthority()Z
Landroid/net/Uri$PathPart;->makeAbsolute(Landroid/net/Uri$PathPart;)Landroid/net/Uri$PathPart;
Landroid/app/ContextImpl;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
Landroid/app/SystemServiceRegistry;->getSystemService(Landroid/app/ContextImpl;Ljava/lang/String;)Ljava/lang/Object;
Landroid/util/ArrayMap;->isEmpty()Z
Landroid/app/SystemServiceRegistry$CachedServiceFetcher;->getService(Landroid/app/ContextImpl;)Ljava/lang/Object;
Lcom/android/internal/util/StateMachine$SmHandler;->completeConstruction()V
Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I
Landroid/os/ThreadLocalWorkSource;->setUid(I)J
Landroid/os/ThreadLocalWorkSource;->getToken()J
Landroid/os/ThreadLocalWorkSource;->restore(J)V
Landroid/os/ThreadLocalWorkSource;->parseUidFromToken(J)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->fillInArg(Ljava/lang/Object;)Z
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->access$000(II)I
Landroid/os/Handler;->dispatchMessage(Landroid/os/Message;)V
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
Lcom/android/internal/util/ArrayUtils;->contains([II)Z
Landroid/os/Handler;-><init>(Landroid/os/Looper;Landroid/os/Handler$Callback;Z)V
Landroid/os/UserHandle;->isIsolated(I)Z
Landroid/app/ContextImpl;->checkPermission(Ljava/lang/String;II)I
Landroid/app/ContextImpl;->checkCallingOrSelfPermission(Ljava/lang/String;)I
Landroid/net/Uri$StringUri;->findSchemeSeparator()I
Landroid/content/pm/PackageUserState;->isMatch(Landroid/content/pm/ComponentInfo;I)Z
Landroid/content/pm/PackageUserState;->isEnabled(Landroid/content/pm/ComponentInfo;I)Z
Landroid/content/pm/PackageUserState;->reportIfDebug(ZI)Z
Landroid/content/pm/PackageParser$Package;->isExternal()Z
Landroid/content/pm/ApplicationInfo;->isExternal()Z
Landroid/content/pm/ApplicationInfo;->isSystemExt()Z
Landroid/util/Spline$MonotoneCubicSpline;->interpolate(F)F
Landroid/app/job/JobInfo;->getId()I
Landroid/util/Spline$MonotoneCubicSpline;-><init>([F[F)V
Landroid/content/res/ApkAssets;->getStringFromPool(I)Ljava/lang/CharSequence;
Landroid/util/MemoryIntArray;->size()I
Landroid/os/Process;->myTid()I
Landroid/app/-$$Lambda$ResourcesManager$QJ7UiVk_XS90KuXAsIjIEym1DnM;->test(Ljava/lang/Object;)Z
Landroid/app/ResourcesManager;->lambda$static$0(Ljava/lang/ref/WeakReference;)Z
Landroid/app/ResourcesManager;->getOrCreateResourcesLocked(Ljava/lang/ClassLoader;Landroid/content/res/ResourcesImpl;Landroid/content/res/CompatibilityInfo;)Landroid/content/res/Resources;
Landroid/graphics/Rect;->isEmpty()Z
Landroid/content/res/ResourcesImpl;->flushLayoutCache()V
Landroid/os/LocaleList;->get(I)Ljava/util/Locale;
Landroid/content/res/ThemedResourceCache;->onConfigurationChange(I)V
Landroid/content/res/ThemedResourceCache;->prune(I)Z
Landroid/content/res/Configuration;->compareTo(Landroid/content/res/Configuration;)I
Landroid/content/res/Resources;->getClassLoader()Ljava/lang/ClassLoader;
Lcom/android/internal/os/CachedDeviceState;->access$200(Lcom/android/internal/os/CachedDeviceState;)Z
Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z
Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z
Lcom/android/internal/os/CachedDeviceState$Readonly;->isCharging()Z
Landroid/util/MemoryIntArray;->enforceValidIndex(I)V
Landroid/util/MemoryIntArray;->get(I)I
Lcom/android/internal/os/LooperStats;->deviceStateAllowsCollection()Z
Landroid/content/res/AssetManager;->isUpToDate()Z
Landroid/content/res/ApkAssets;->isUpToDate()Z
Landroid/content/res/Resources;->getImpl()Landroid/content/res/ResourcesImpl;
Landroid/util/SparseBooleanArray;->put(IZ)V
Lcom/android/internal/util/GrowingArrayUtils;->insert([ZIIZ)[Z
Landroid/os/Parcel;->readLongArray([J)V
Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;
Landroid/content/res/TypedArray;->getBoolean(IZ)Z
Landroid/content/res/TypedArray;->getInt(II)I
Landroid/content/res/TypedArray;->getResourceId(II)I
Landroid/content/res/TypedArray;->getString(I)Ljava/lang/String;
Landroid/content/res/TypedArray;->loadStringValueAt(I)Ljava/lang/CharSequence;
Landroid/content/res/XmlBlock$Parser;->getPooledString(I)Ljava/lang/CharSequence;
Landroid/view/inputmethod/InputMethodInfo;-><init>(Landroid/content/Context;Landroid/content/pm/ResolveInfo;Ljava/util/List;)V
Landroid/view/inputmethod/InputMethodInfo;->getSubtypeAt(I)Landroid/view/inputmethod/InputMethodSubtype;
Landroid/view/inputmethod/InputMethodSubtypeArray;->get(I)Landroid/view/inputmethod/InputMethodSubtype;
Landroid/view/inputmethod/InputMethodSubtype;->hashCode()I
Landroid/provider/Settings$GenerationTracker;->readCurrentGeneration()I
Landroid/text/TextUtils$SimpleStringSplitter;->next()Ljava/lang/String;
Landroid/view/inputmethod/InputMethodSubtype;->sort(Landroid/content/Context;ILandroid/view/inputmethod/InputMethodInfo;Ljava/util/List;)Ljava/util/List;
Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I
Landroid/app/WindowConfiguration;->updateFrom(Landroid/app/WindowConfiguration;)I
Landroid/app/AppOpsManager;->permissionToOpCode(Ljava/lang/String;)I
Landroid/util/SparseIntArray;->put(II)V
Landroid/app/AppOpsManager;->opToSwitch(I)I
Landroid/app/ApplicationPackageManager;->updateFlagsForPackage(II)I
Landroid/app/ContextImpl;->getOpPackageName()Ljava/lang/String;
Landroid/content/pm/PermissionInfo;->isHardRestricted()Z
Landroid/app/ContextImpl;->getPackageManager()Landroid/content/pm/PackageManager;
Landroid/content/pm/PermissionInfo;->isSoftRestricted()Z
Landroid/app/ApplicationPackageManager;->getUserId()I
Landroid/app/ApplicationPackageManager;->getPermissionInfo(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;
Landroid/content/pm/PackageParser;->generatePermissionInfo(Landroid/content/pm/PackageParser$Permission;I)Landroid/content/pm/PermissionInfo;
Landroid/content/pm/PermissionInfo;->isRestricted()Z
Landroid/app/ApplicationPackageManager;->getPermissionFlags(Ljava/lang/String;Ljava/lang/String;Landroid/os/UserHandle;)I
Landroid/os/Process;->myPid()I
Lcom/android/internal/util/IntPair;->of(II)J
Landroid/util/SparseIntArray;->indexOfKey(I)I
Landroid/util/SparseBooleanArray;->get(IZ)Z
Landroid/util/SparseBooleanArray;->get(I)Z
Landroid/app/ApplicationPackageManager;->getPackageInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;
Landroid/os/Binder;->getInterfaceDescriptor()Ljava/lang/String;
Landroid/os/Binder;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
Landroid/content/ContentResolver;->getUserId()I
Landroid/net/NetworkStatsHistory$DataStreamUtils;->readVarLong(Ljava/io/DataInputStream;)J
Landroid/content/pm/PackageItemInfo;-><init>(Landroid/content/pm/PackageItemInfo;)V
Landroid/system/suspend/WakeLockInfo$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/system/suspend/WakeLockInfo$1;->createFromParcel(Landroid/os/Parcel;)Landroid/system/suspend/WakeLockInfo;
Landroid/system/suspend/WakeLockInfo;-><init>()V
Landroid/system/suspend/WakeLockInfo;->readFromParcel(Landroid/os/Parcel;)V
Lcom/android/internal/os/KernelWakelockReader;->updateWakelockStats([Landroid/system/suspend/WakeLockInfo;Lcom/android/internal/os/KernelWakelockStats;)Lcom/android/internal/os/KernelWakelockStats;
Landroid/net/NetworkStatsHistory$DataStreamUtils;->readVarLongArray(Ljava/io/DataInputStream;)[J
Landroid/net/NetworkStatsHistory;->setLong([JIJ)V
Landroid/net/NetworkStatsHistory;->addLong([JIJ)V
Landroid/net/NetworkStatsHistory;->getLong([JIJ)J
Lcom/android/internal/util/ProcFileReader;->finishLine()V
Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;
Landroid/content/res/AssetManager;->getResourceText(I)Ljava/lang/CharSequence;
Landroid/util/TypedValue;->coerceToString()Ljava/lang/CharSequence;
Landroid/util/SparseIntArray;->valueAt(I)I
Landroid/content/res/Resources;->getString(I)Ljava/lang/String;
Lcom/android/internal/os/LooperStats;->messageDispatchStarting()Ljava/lang/Object;
Lcom/android/internal/os/LooperStats;->messageDispatched(Ljava/lang/Object;Landroid/os/Message;)V
Landroid/os/storage/StorageManager;->convert(Ljava/util/UUID;)Ljava/lang/String;
Landroid/os/Parcel;->readSparseArray(Ljava/lang/ClassLoader;)Landroid/util/SparseArray;
Landroid/util/SparseIntArray;->get(I)I
Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V
Landroid/os/UserHandle;->isApp(I)Z
Landroid/util/SparseIntArray;->delete(I)V
Landroid/util/SparseIntArray;->size()I
Landroid/util/SparseIntArray;->keyAt(I)I
Lcom/android/internal/util/ArrayUtils;->convertToIntArray(Ljava/util/List;)[I
Landroid/os/Parcel;->writeIntArray([I)V
Landroid/os/Parcel;->obtain(J)Landroid/os/Parcel;
Landroid/app/ContextImpl;->getOuterContext()Landroid/content/Context;
Landroid/content/pm/PackageParser;->generateProviderInfo(Landroid/content/pm/PackageParser$Provider;ILandroid/content/pm/PackageUserState;I)Landroid/content/pm/ProviderInfo;
Landroid/view/DisplayAdjustments;->getCompatibilityInfo()Landroid/content/res/CompatibilityInfo;
Landroid/net/Uri$StringUri;->getScheme()Ljava/lang/String;
Landroid/net/Uri$StringUri;->getPathPart()Landroid/net/Uri$PathPart;
Landroid/app/WindowConfiguration;->compareTo(Landroid/app/WindowConfiguration;)I
Landroid/content/res/Configuration;->hashCode()I
Landroid/content/res/Configuration;->setToDefaults()V
Landroid/os/LocaleList;->getEmptyLocaleList()Landroid/os/LocaleList;
Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
Landroid/os/Parcel;->readStrongBinder()Landroid/os/IBinder;
Landroid/util/Pair;->create(Ljava/lang/Object;Ljava/lang/Object;)Landroid/util/Pair;
Landroid/os/UserHandle;->isCore(I)Z
Landroid/app/ContextImpl;->enforce(Ljava/lang/String;IZILjava/lang/String;)V
Landroid/app/ContextImpl;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V
Landroid/content/res/CompatibilityInfo;->supportsScreen()Z
Landroid/content/res/CompatibilityInfo;->isScalingRequired()Z
Landroid/app/job/JobInfo;->getFlags()I
Landroid/content/SyncAdapterType;->equals(Ljava/lang/Object;)Z
Landroid/content/pm/RegisteredServicesCache;->containsType(Ljava/util/ArrayList;Ljava/lang/Object;)Z
Landroid/os/Looper;->showSlowLog(JJJLjava/lang/String;Landroid/os/Message;)Z
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->setFlags(II)V
Landroid/os/Parcel;->init(J)V
Landroid/content/res/Resources;->getInteger(I)I
Landroid/net/Uri$StringUri;->isHierarchical()Z
Landroid/net/Uri$StringUri;->getQueryPart()Landroid/net/Uri$Part;
Landroid/net/Uri$PathPart;->from(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$PathPart;
Landroid/net/Uri$PathPart;-><init>(Ljava/lang/String;Ljava/lang/String;)V
Landroid/net/Uri$PathPart;->fromEncoded(Ljava/lang/String;)Landroid/net/Uri$PathPart;
Landroid/content/IntentFilter;-><init>(Landroid/content/IntentFilter;)V
Landroid/util/proto/EncodedBuffer;->writeRawByte(B)V
Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
Landroid/util/proto/EncodedBuffer;->writeRawVarint32(I)V
Landroid/util/proto/EncodedBuffer;->writeRawFixed32(I)V
Landroid/util/proto/ProtoOutputStream;->assertNotCompacted()V
Landroid/util/proto/ProtoOutputStream;->writeTag(II)V
Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V
Landroid/util/proto/ProtoOutputStream;->writeStringImpl(ILjava/lang/String;)V
Landroid/os/Parcel;->dataSize()I
Landroid/util/proto/EncodedBuffer;->writeRawBuffer([BII)V
Landroid/util/proto/ProtoOutputStream;->writeUtf8String(ILjava/lang/String;)V
Landroid/util/proto/ProtoOutputStream;->writeKnownLengthHeader(II)V
Landroid/util/proto/EncodedBuffer;->writeRawBuffer([B)V
Landroid/util/proto/ProtoStream;->getRepeatedFromToken(J)Z
Landroid/util/proto/EncodedBuffer;->getWritePos()I
Landroid/util/proto/EncodedBuffer;->getRawFixed32At(I)I
Landroid/util/proto/EncodedBuffer;->editRawFixed32(II)V
Landroid/util/proto/EncodedBuffer;->writeRawVarint64(J)V
Landroid/os/StrictMode;->onBinderStrictModePolicyChange(I)V
Landroid/util/proto/EncodedBuffer;->getRawVarint32Size(I)I
Landroid/util/proto/EncodedBuffer;->readRawByte()B
Landroid/util/proto/EncodedBuffer;->getReadPos()I
Landroid/util/proto/ProtoOutputStream;->editEncodedSize(I)I
Landroid/util/proto/EncodedBuffer;->readRawFixed32()I
Landroid/util/proto/EncodedBuffer;->getReadableSize()I
Landroid/util/proto/ProtoOutputStream;->readRawTag()I
Landroid/util/proto/EncodedBuffer;->readRawUnsigned()J
Landroid/os/MessageQueue;->removeMessages(Landroid/os/Handler;Ljava/lang/Runnable;Ljava/lang/Object;)V
Landroid/net/Uri$PathSegmentsBuilder;->build()Landroid/net/Uri$PathSegments;
Landroid/net/Uri$PathSegments;-><init>([Ljava/lang/String;I)V
Landroid/util/proto/EncodedBuffer;->skipRead(I)V
Landroid/app/IApplicationThread$Stub$Proxy;->asBinder()Landroid/os/IBinder;
Landroid/app/ApplicationPackageManager;->getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
Landroid/util/proto/ProtoOutputStream;->compactSizes(I)V
Landroid/util/proto/EncodedBuffer;->writeFromThisBuffer(II)V
Landroid/app/WindowConfiguration;->getWindowingMode()I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->unmask(II)I
Landroid/app/ContextImpl;->registerReceiverInternal(Landroid/content/BroadcastReceiver;ILandroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;Landroid/content/Context;I)Landroid/content/Intent;
Landroid/app/ActivityThread;->getInstrumentation()Landroid/app/Instrumentation;
Landroid/app/LoadedApk;->getReceiverDispatcher(Landroid/content/BroadcastReceiver;Landroid/content/Context;Landroid/os/Handler;Landroid/app/Instrumentation;Z)Landroid/content/IIntentReceiver;
Landroid/app/LoadedApk$ReceiverDispatcher;->getIIntentReceiver()Landroid/content/IIntentReceiver;
Landroid/util/SparseArray;->gc()V
Landroid/net/Uri$StringUri;->buildUpon()Landroid/net/Uri$Builder;
Landroid/net/Uri$StringUri;->getFragmentPart()Landroid/net/Uri$Part;
Landroid/net/Uri$PathPart;->appendEncodedSegment(Landroid/net/Uri$PathPart;Ljava/lang/String;)Landroid/net/Uri$PathPart;
Landroid/content/ContentResolver;->getContentService()Landroid/content/IContentService;
Lcom/android/internal/os/BinderDeathDispatcher;->linkToDeath(Landroid/os/IInterface;Landroid/os/IBinder$DeathRecipient;)I
Landroid/net/NetworkCapabilities;->appendStringRepresentationOfBitMaskToStringBuilder(Ljava/lang/StringBuilder;JLandroid/net/NetworkCapabilities$NameOf;Ljava/lang/String;)V
Landroid/os/Parcel;->writeStringArray([Ljava/lang/String;)V
Lcom/android/internal/util/StatLogger;->logDurationStat(IJ)J
Lcom/android/internal/util/CollectionUtils;->size(Ljava/util/Collection;)I
Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
Landroid/os/MessageQueue;->removeCallbacksAndMessages(Landroid/os/Handler;Ljava/lang/Object;)V
Lcom/android/internal/util/GrowingArrayUtils;->append([III)[I
Landroid/content/pm/ApplicationInfo;->isDirectBootAware()Z
Landroid/content/res/Configuration;->unset()V
Landroid/util/FastImmutableArraySet$FastIterator;->hasNext()Z
Landroid/util/FastImmutableArraySet;->iterator()Ljava/util/Iterator;
Landroid/util/FastImmutableArraySet$FastIterator;->next()Ljava/lang/Object;
Landroid/app/WindowConfiguration;->getActivityType()I
Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;
Landroid/content/res/Configuration;-><init>()V
Landroid/util/proto/ProtoOutputStream;->write(JI)V
Landroid/util/proto/ProtoOutputStream;->writeInt32Impl(II)V
Landroid/os/Parcel;->writeStrongBinder(Landroid/os/IBinder;)V
Landroid/os/Parcel;->writeValue(Ljava/lang/Object;)V
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->popArg(I)Ljava/lang/Object;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->isInvocationArgAtIndex(I)Z
Landroid/util/ArrayMap;->putAll(Landroid/util/ArrayMap;)V
Landroid/os/Looper;->myLooper()Landroid/os/Looper;
Landroid/net/NetworkScoreManager;->getActiveScorerPackage()Ljava/lang/String;
Landroid/appwidget/AppWidgetManager;->isBoundWidgetPackage(Ljava/lang/String;I)Z
Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
Landroid/content/res/Configuration;->getLocales()Landroid/os/LocaleList;
Landroid/content/res/ConfigurationBoundResourceCache;->onConfigurationChange(I)V
Landroid/content/Intent;->getCategories()Ljava/util/Set;
Landroid/os/LocaleList;->equals(Ljava/lang/Object;)Z
Landroid/content/res/CompatibilityInfo;->hashCode()I
Landroid/os/Message;->sendToTarget()V
Landroid/os/Handler;->getPostMessage(Ljava/lang/Runnable;)Landroid/os/Message;
Landroid/app/ApplicationPackageManager;->getPackagesForUid(I)[Ljava/lang/String;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl$LambdaType;->encode(II)I
Landroid/os/BinderProxy$ProxyMap;->hash(J)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->getFlags(I)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl$LambdaType;->decodeArgCount(I)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->isRecycled()Z
Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
Landroid/os/SystemClock$2;->millis()J
Landroid/os/Binder;->execTransact(IJJI)Z
Landroid/os/Binder;->execTransactInternal(IJJII)Z
Landroid/os/Parcel;->enforceInterface(Ljava/lang/String;)V
Landroid/database/IContentObserver$Stub;->asBinder()Landroid/os/IBinder;
Landroid/os/StrictMode;->clearGatheredViolations()V
Landroid/os/Binder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
Landroid/os/Parcel;->writeNoException()V
Landroid/os/StrictMode;->hasGatheredViolations()Z
Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;
Landroid/os/Message;->obtain(Landroid/os/Handler;IIILjava/lang/Object;)Landroid/os/Message;
Landroid/os/StrictMode$AndroidBlockGuardPolicy;->setThreadPolicyMask(I)V
Landroid/os/Looper;->loop()V
Landroid/app/usage/UsageEvents$Event;->getClassName()Ljava/lang/String;
Landroid/app/usage/UsageStats;->update(Ljava/lang/String;JII)V
Lcom/android/internal/os/BinderCallsStats;->callStarted(Landroid/os/Binder;II)Lcom/android/internal/os/BinderInternal$CallSession;
Landroid/os/Parcel;->readCallingWorkSourceUid()I
Lcom/android/internal/os/BinderCallsStats;->callEnded(Lcom/android/internal/os/BinderInternal$CallSession;III)V
Landroid/os/Parcel;->writeParcelable(Landroid/os/Parcelable;I)V
Landroid/os/Parcel;->writeFloat(F)V
Landroid/view/DisplayCutout;->getSafeInsetTop()I
Landroid/content/res/Resources;->getDimensionPixelSize(I)I
Landroid/os/Parcel;->writeParcelableCreator(Landroid/os/Parcelable;)V
Landroid/content/Intent;->getScheme()Ljava/lang/String;
Landroid/os/Handler;-><init>(Landroid/os/Looper;)V
Landroid/os/BaseBundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
Landroid/content/SyncAdaptersCache;->getSyncAdapterPackagesForAuthority(Ljava/lang/String;I)[Ljava/lang/String;
Landroid/view/Display;->hasAccess(IIII)Z
Landroid/view/DisplayInfo;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/view/DisplayInfo;->hasAccess(I)Z
Landroid/os/BinderProxy$ProxyMap;->get(J)Landroid/os/BinderProxy;
Landroid/os/Parcel;->writeArrayMapInternal(Landroid/util/ArrayMap;)V
Landroid/content/Intent;->getData()Landroid/net/Uri;
Landroid/util/ArraySet;->addAll(Landroid/util/ArraySet;)V
Landroid/os/Binder$PropagateWorkSourceTransactListener;->onTransactStarted(Landroid/os/IBinder;I)Ljava/lang/Object;
Landroid/os/Binder$PropagateWorkSourceTransactListener;->onTransactEnded(Ljava/lang/Object;)V
Landroid/os/RemoteCallbackList;->beginBroadcast()I
Landroid/os/BinderProxy;->getInstance(JJ)Landroid/os/BinderProxy;
Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
Landroid/view/Display$HdrCapabilities;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/graphics/Rect;->set(IIII)V
Landroid/content/res/Configuration;->equals(Ljava/lang/Object;)Z
Landroid/os/Message;->obtain(Landroid/os/Handler;ILjava/lang/Object;)Landroid/os/Message;
Landroid/util/proto/ProtoOutputStream;->start(J)J
Landroid/util/proto/ProtoOutputStream;->startObjectImpl(IZ)J
Landroid/util/proto/ProtoOutputStream;->getTagSize(I)I
Landroid/util/proto/ProtoOutputStream;->end(J)V
Landroid/util/proto/ProtoOutputStream;->endObjectImpl(JZ)V
Landroid/util/proto/ProtoStream;->getDepthFromToken(J)I
Landroid/util/proto/ProtoOutputStream;->writeUnsignedVarintFromSignedInt(I)V
Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;
Landroid/graphics/Rect;->width()I
Landroid/app/ApplicationPackageManager;->updateFlagsForApplication(II)I
Lcom/android/internal/os/ZygoteArguments;->parseArgs([Ljava/lang/String;)V
Landroid/os/RemoteCallbackList;->finishBroadcast()V
Landroid/os/BinderProxy;->queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface;
Landroid/content/Intent;-><init>(Landroid/content/Intent;I)V
Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V
Landroid/database/ContentObserver;->getContentObserver()Landroid/database/IContentObserver;
Landroid/net/Uri$StringUri;->parsePath(Ljava/lang/String;I)Ljava/lang/String;
Landroid/content/Intent;-><init>(Ljava/lang/String;)V
Landroid/graphics/Rect;->height()I
Landroid/provider/Settings$Global;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;
Landroid/util/LongSparseArray;->valueAt(I)Ljava/lang/Object;
Landroid/os/Handler;->removeMessages(I)V
Landroid/net/Uri$Part;->from(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri$Part;
Landroid/os/Parcel;->writeBundle(Landroid/os/Bundle;)V
Landroid/os/BaseBundle;->getBoolean(Ljava/lang/String;Z)Z
Landroid/os/BinderProxy$ProxyMap;->set(JLandroid/os/BinderProxy;)V
Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
Landroid/util/ArraySet;->isEmpty()Z
Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I
Landroid/database/IContentObserver$Stub$Proxy;->asBinder()Landroid/os/IBinder;
Landroid/os/Parcel;->writeTypedArray([Landroid/os/Parcelable;I)V
Landroid/os/BinderProxy;-><init>(J)V
Landroid/content/IIntentReceiver$Stub$Proxy;->asBinder()Landroid/os/IBinder;
Landroid/os/Parcel;->writeTypedList(Ljava/util/List;I)V
Landroid/app/ApplicationPackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;
Landroid/app/ApplicationPackageManager;->maybeAdjustApplicationInfo(Landroid/content/pm/ApplicationInfo;)Landroid/content/pm/ApplicationInfo;
Landroid/app/ContextImpl;->getUser()Landroid/os/UserHandle;
Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/pm/ApplicationInfo;
Landroid/app/AppOpsManager;->strOpToOp(Ljava/lang/String;)I
Landroid/app/AppOpsManager;->opToPublicName(I)Ljava/lang/String;
Landroid/app/AppOpsManager;->unsafeCheckOpRaw(Ljava/lang/String;ILjava/lang/String;)I
Landroid/database/sqlite/SQLiteClosable;->releaseReference()V
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->acquire(Lcom/android/internal/util/function/pooled/PooledLambdaImpl$Pool;Ljava/lang/Object;IIILjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledLambda;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->acquire(Lcom/android/internal/util/function/pooled/PooledLambdaImpl$Pool;)Lcom/android/internal/util/function/pooled/PooledLambdaImpl;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->recycleOnUse()Lcom/android/internal/util/function/pooled/PooledRunnable;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->recycleOnUse()Lcom/android/internal/util/function/pooled/OmniFunction;
Landroid/os/Message;->setCallback(Ljava/lang/Runnable;)Landroid/os/Message;
Landroid/util/LongSparseLongArray;->indexOfKey(J)I
Lcom/android/internal/util/function/pooled/OmniFunction;->run()V
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->doInvoke()Ljava/lang/Object;
Lcom/android/internal/util/function/pooled/PooledLambdaImpl$LambdaType;->decodeReturnType(I)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->access$100(II)I
Lcom/android/internal/util/function/pooled/PooledLambdaImpl;->doRecycle()V
Landroid/util/Pair;->hashCode()I
Landroid/content/pm/ApplicationInfo;->hasRequestedLegacyExternalStorage()Z
Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
Landroid/util/ArraySet;->clear()V
Landroid/app/IActivityManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
Landroid/text/TextUtils;->writeToParcel(Ljava/lang/CharSequence;Landroid/os/Parcel;I)V
Landroid/os/Parcel;->writeMapInternal(Ljava/util/Map;)V
Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;
Landroid/app/WindowConfiguration;->canReceiveKeys()Z
Landroid/graphics/Point;->offset(II)V
Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
Landroid/os/Binder;->allowBlocking(Landroid/os/IBinder;)Landroid/os/IBinder;
Landroid/os/Bundle;->hasFileDescriptors()Z
Lcom/android/internal/app/procstats/ProcessStats;->updateTrackingAssociationsLocked(IJ)V
Lcom/android/internal/app/procstats/SparseMappingTable$Table;->assertConsistency()V
Lcom/android/internal/app/procstats/SparseMappingTable;->access$100(Lcom/android/internal/app/procstats/SparseMappingTable;)Ljava/util/ArrayList;
Landroid/os/RemoteCallbackList;->getBroadcastCookie(I)Ljava/lang/Object;
Landroid/net/Uri$StringUri;->parseAuthority(Ljava/lang/String;I)Ljava/lang/String;
Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
Landroid/os/ServiceManager;->rawGetService(Ljava/lang/String;)Landroid/os/IBinder;
Landroid/os/ServiceManagerProxy;->getService(Ljava/lang/String;)Landroid/os/IBinder;
Landroid/os/IServiceManager$Stub$Proxy;->checkService(Ljava/lang/String;)Landroid/os/IBinder;
Landroid/content/pm/PackageItemInfo;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/net/Uri$Part$EmptyPart;->isEmpty()Z
Landroid/os/BaseBundle;-><init>(Landroid/os/BaseBundle;)V
Landroid/os/Bundle;-><init>(Landroid/os/Bundle;)V
Landroid/net/Uri$Part;->readFrom(Landroid/os/Parcel;)Landroid/net/Uri$Part;
Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z
Landroid/util/ArraySet;-><init>(Landroid/util/ArraySet;)V
Landroid/os/Parcel;->createStringArray()[Ljava/lang/String;
Landroid/os/Message;->setAsynchronous(Z)V
Landroid/os/Parcel;->writeTypedList(Ljava/util/List;)V
Landroid/os/Message;->obtain(Landroid/os/Handler;I)Landroid/os/Message;
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->refreshTimersLocked(JLjava/util/ArrayList;Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;)J
Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
Landroid/os/storage/StorageManager;->isUserKeyUnlocked(I)Z
Landroid/hardware/display/IDisplayManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
Landroid/os/Bundle;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/os/Parcel;->pushAllowFds(Z)Z
Landroid/os/BaseBundle;->writeToParcelInner(Landroid/os/Parcel;I)V
Landroid/os/Parcel;->restoreAllowFds(Z)V
Landroid/content/pm/ApplicationInfo;->isEncryptionAware()Z
Lcom/android/internal/app/procstats/ProcessState;->setCombinedState(IJ)V
Landroid/os/Message;->obtain(Landroid/os/Handler;III)Landroid/os/Message;
Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isBrightOrDim()Z
Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V
Landroid/content/pm/BaseParceledListSlice;-><init>(Ljava/util/List;)V
Lcom/android/internal/app/procstats/AssociationState$SourceState;->trackProcState(IIJ)V
Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;
Landroid/net/Uri$Part;->fromEncoded(Ljava/lang/String;)Landroid/net/Uri$Part;
Landroid/os/MessageQueue;->hasMessages(Landroid/os/Handler;Ljava/lang/Runnable;Ljava/lang/Object;)Z
Lcom/android/internal/app/procstats/AssociationState$SourceState;->getAssociationState()Lcom/android/internal/app/procstats/AssociationState;
Lcom/android/internal/app/procstats/AssociationState;->getProcess()Lcom/android/internal/app/procstats/ProcessState;
Lcom/android/internal/app/procstats/ProcessState;->getCombinedState()I
Lcom/android/internal/app/procstats/AssociationState$SourceState;->startActive(J)V
Landroid/net/Uri$1;->createFromParcel(Landroid/os/Parcel;)Ljava/lang/Object;
Landroid/net/Uri$1;->createFromParcel(Landroid/os/Parcel;)Landroid/net/Uri;
Landroid/content/Intent;->getSelector()Landroid/content/Intent;
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->startRunningLocked(J)V
Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
Landroid/app/IApplicationThread$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/IApplicationThread;
Landroid/app/IApplicationThread$Stub$Proxy;-><init>(Landroid/os/IBinder;)V
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->startRunningLocked(J)V
Lcom/android/internal/os/BatteryStatsImpl$StopwatchTimer;->stopRunningLocked(J)V
Landroid/net/Uri$Part;-><init>(Ljava/lang/String;Ljava/lang/String;)V
Lcom/android/internal/os/BatteryStatsImpl$DurationTimer;->stopRunningLocked(J)V
Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I
Landroid/content/Intent;->hasFileDescriptors()Z
Landroid/content/pm/ComponentInfo;-><init>(Landroid/content/pm/ComponentInfo;)V
Landroid/os/ZygoteProcess;->zygoteSendArgsAndGetResult(Landroid/os/ZygoteProcess$ZygoteState;ZLjava/util/ArrayList;)Landroid/os/Process$ProcessStartResult;
Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;
Landroid/os/BaseBundle;->getBoolean(Ljava/lang/String;)Z
Landroid/view/DisplayCutout$ParcelableWrapper;->writeCutoutToParcel(Landroid/view/DisplayCutout;Landroid/os/Parcel;I)V
Landroid/view/DisplayAddress$Physical;->writeToParcel(Landroid/os/Parcel;I)V
Lcom/android/internal/os/BatteryStatsImpl;->getUidStatsLocked(I)Lcom/android/internal/os/BatteryStatsImpl$Uid;
Landroid/content/pm/ResolveInfo;-><init>()V
Landroid/util/KeyValueListParser$IntValue;->getValue()I
Landroid/os/Parcel;->writeList(Ljava/util/List;)V
Landroid/view/SurfaceControl;->checkNotReleased()V
Landroid/content/pm/IPackageManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
Landroid/os/IPowerManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
Landroid/graphics/Rect;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/content/pm/ParceledListSlice;->getList()Ljava/util/List;
Landroid/content/pm/BaseParceledListSlice;->getList()Ljava/util/List;
Landroid/os/Parcel;->writeBoolean(Z)V
Landroid/telecom/PhoneAccount;->hasCapabilities(I)Z
Landroid/content/IIntentReceiver$Stub;->asInterface(Landroid/os/IBinder;)Landroid/content/IIntentReceiver;
Landroid/os/BaseBundle;->isParcelled()Z
Landroid/os/PowerSaveState$Builder;-><init>()V
Landroid/os/PowerSaveState$Builder;->setGlobalBatterySaverEnabled(Z)Landroid/os/PowerSaveState$Builder;
Landroid/os/PowerSaveState$Builder;->setBatterySaverEnabled(Z)Landroid/os/PowerSaveState$Builder;
Landroid/os/PowerSaveState$Builder;->build()Landroid/os/PowerSaveState;
Landroid/os/PowerSaveState;-><init>(Landroid/os/PowerSaveState$Builder;)V
Landroid/os/PowerSaveState$Builder;->access$000(Landroid/os/PowerSaveState$Builder;)Z
Landroid/os/PowerSaveState$Builder;->access$100(Landroid/os/PowerSaveState$Builder;)I
Landroid/os/PowerSaveState$Builder;->access$200(Landroid/os/PowerSaveState$Builder;)F
Landroid/os/PowerSaveState$Builder;->access$300(Landroid/os/PowerSaveState$Builder;)Z
Lcom/android/internal/os/BatteryStatsImpl$Uid;->createAggregatedPartialWakelockTimerLocked()Lcom/android/internal/os/BatteryStatsImpl$DualTimer;
Landroid/content/pm/ApplicationInfo;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/os/Parcel;->writeSparseArray(Landroid/util/SparseArray;)V
Landroid/os/PowerSaveState$Builder;->setBrightnessFactor(F)Landroid/os/PowerSaveState$Builder;
Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->equals(Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;)Z
Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->floatEquals(FF)Z
Landroid/view/Choreographer;->doCallbacks(IJ)V
Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->startRunningLocked(J)V
Landroid/graphics/Point;->set(II)V
Landroid/view/SurfaceControl;->access$800(Landroid/view/SurfaceControl;)V
Landroid/graphics/Point;->equals(Ljava/lang/Object;)Z
Lcom/android/internal/os/BatteryStatsImpl;->getPowerManagerWakeLockLevel(I)I
Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;
Landroid/app/ContextImpl;->getSystemServiceName(Ljava/lang/Class;)Ljava/lang/String;
Landroid/app/SystemServiceRegistry;->getSystemServiceName(Ljava/lang/Class;)Ljava/lang/String;
Lcom/android/internal/os/BatteryStatsImpl$DualTimer;->stopRunningLocked(J)V
Landroid/app/AppOpsManager;->getToken(Lcom/android/internal/app/IAppOpsService;)Landroid/os/IBinder;
Landroid/os/Bundle;->forPair(Ljava/lang/String;Ljava/lang/String;)Landroid/os/Bundle;
Landroid/os/Bundle;-><init>(I)V
Landroid/os/BaseBundle;-><init>(I)V
Landroid/os/HwParcel;-><init>()V
Landroid/view/SurfaceControl$Transaction;->merge(Landroid/view/SurfaceControl$Transaction;)Landroid/view/SurfaceControl$Transaction;
Landroid/view/SurfaceControl;->access$4100(JJ)V
Landroid/view/Choreographer$CallbackQueue;->extractDueCallbacksLocked(J)Landroid/view/Choreographer$CallbackRecord;
Landroid/graphics/Rect;->offset(II)V
Landroid/os/PowerManager;->validateWakeLockParameters(ILjava/lang/String;)V
Landroid/app/AppOpsManager;->checkPackage(ILjava/lang/String;)V
Landroid/util/SparseArray;->indexOfKey(I)I
Landroid/content/Intent;->resolveType(Landroid/content/ContentResolver;)Ljava/lang/String;
Lcom/android/internal/os/BatteryStatsImpl;->noteStartWakeLocked(IILandroid/os/WorkSource$WorkChain;Ljava/lang/String;Ljava/lang/String;IZJJ)V
Lcom/android/internal/os/BatteryStatsImpl;->aggregateLastWakeupUptimeLocked(J)V
Lcom/android/internal/os/BatteryStatsImpl$Uid;->noteStartWakeLocked(ILjava/lang/String;IJ)V
Lcom/android/internal/os/BatteryStatsImpl$OverflowArrayMap;->startObject(Ljava/lang/String;)Ljava/lang/Object;
Lcom/android/internal/os/BatteryStatsImpl$Uid;->getPidStatsLocked(I)Landroid/os/BatteryStats$Uid$Pid;
Landroid/content/ComponentName;->writeToParcel(Landroid/content/ComponentName;Landroid/os/Parcel;)V
Landroid/content/ContextWrapper;->getContentResolver()Landroid/content/ContentResolver;
Landroid/content/Intent;->writeToParcel(Landroid/os/Parcel;I)V
Landroid/content/res/Resources;->getBoolean(I)Z
Landroid/net/Uri;->writeToParcel(Landroid/os/Parcel;Landroid/net/Uri;)V
Landroid/view/InsetsSource;->getType()I
